{
	"id": "ccd40aa90b70b388441cd76bf0dc1249",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"Token_RY_flattened.sol": {
				"content": "// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n// SPDX-License-Identifier: MIT\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n\n// File: @openzeppelin/contracts/utils/cryptography/ECDSA.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/Math.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/SignedMath.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Strings.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n\n// File: @openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/StorageSlot.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/ShortStrings.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/IERC5267.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n\n// File: @openzeppelin/contracts/utils/cryptography/EIP712.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Nonces.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n\n// File: Token_RY.sol\n\n\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\n\n\n\n/// @custom:security-contact orc@org.com\ncontract Reyes is ERC20, Ownable, ERC20Permit {\n    constructor(address initialOwner)\n        ERC20(\"Reyes\", \"RY\")\n        Ownable(initialOwner)\n        ERC20Permit(\"Reyes\")\n    {\n        _mint(msg.sender, 1000 * 10 ** decimals());\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Token_RY_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token_RY_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token_RY_flattened.sol\":{\"keccak256\":\"0x3277a6b4e22b080ba3cb68cc4a976d0354efc6d032889f1b67d92ba9c63a0a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://181b37f6b11531a7e4913184048a38f15db33033acc02b9808ae692ed4a340aa\",\"dweb:/ipfs/QmYxUMMzfasKoLuRCxie5PWMqUUBBRrAZJQbAXa6A8zkbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Token_RY_flattened.sol\":29337:36723  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Token_RY_flattened.sol\":29337:36723  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122067887a5b62a7fd673ed4b7845a714655194dba0345f8fde9b491aff4bf7a92b764736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122067887a5b62a7fd673ed4b7845a714655194dba0345f8fde9b491aff4bf7a92b764736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x887A5B62A7FD673E 0xD4 0xB7 DUP5 GAS PUSH18 0x4655194DBA0345F8FDE9B491AFF4BF7A92B7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "29337:7386:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122067887a5b62a7fd673ed4b7845a714655194dba0345f8fde9b491aff4bf7a92b764736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x887A5B62A7FD673E 0xD4 0xB7 DUP5 GAS PUSH18 0x4655194DBA0345F8FDE9B491AFF4BF7A92B7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "29337:7386:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 29337,
									"end": 36723,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29337,
									"end": 36723,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122067887a5b62a7fd673ed4b7845a714655194dba0345f8fde9b491aff4bf7a92b764736f6c63430008180033",
									".code": [
										{
											"begin": 29337,
											"end": 36723,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 29337,
											"end": 36723,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 29337,
											"end": 36723,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29337,
											"end": 36723,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29337,
											"end": 36723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29337,
											"end": 36723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29337,
											"end": 36723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29337,
											"end": 36723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29337,
											"end": 36723,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Token_RY_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token_RY_flattened.sol\":\"ECDSA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token_RY_flattened.sol\":{\"keccak256\":\"0x3277a6b4e22b080ba3cb68cc4a976d0354efc6d032889f1b67d92ba9c63a0a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://181b37f6b11531a7e4913184048a38f15db33033acc02b9808ae692ed4a340aa\",\"dweb:/ipfs/QmYxUMMzfasKoLuRCxie5PWMqUUBBRrAZJQbAXa6A8zkbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "state-variable-immutable",
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.",
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token_RY_flattened.sol\":\"EIP712\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token_RY_flattened.sol\":{\"keccak256\":\"0x3277a6b4e22b080ba3cb68cc4a976d0354efc6d032889f1b67d92ba9c63a0a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://181b37f6b11531a7e4913184048a38f15db33033acc02b9808ae692ed4a340aa\",\"dweb:/ipfs/QmYxUMMzfasKoLuRCxie5PWMqUUBBRrAZJQbAXa6A8zkbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3152,
								"contract": "Token_RY_flattened.sol:EIP712",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 3154,
								"contract": "Token_RY_flattened.sol:EIP712",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token_RY_flattened.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token_RY_flattened.sol\":{\"keccak256\":\"0x3277a6b4e22b080ba3cb68cc4a976d0354efc6d032889f1b67d92ba9c63a0a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://181b37f6b11531a7e4913184048a38f15db33033acc02b9808ae692ed4a340aa\",\"dweb:/ipfs/QmYxUMMzfasKoLuRCxie5PWMqUUBBRrAZJQbAXa6A8zkbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "Token_RY_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "Token_RY_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "Token_RY_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "Token_RY_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "Token_RY_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token_RY_flattened.sol\":\"ERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token_RY_flattened.sol\":{\"keccak256\":\"0x3277a6b4e22b080ba3cb68cc4a976d0354efc6d032889f1b67d92ba9c63a0a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://181b37f6b11531a7e4913184048a38f15db33033acc02b9808ae692ed4a340aa\",\"dweb:/ipfs/QmYxUMMzfasKoLuRCxie5PWMqUUBBRrAZJQbAXa6A8zkbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "Token_RY_flattened.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "Token_RY_flattened.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "Token_RY_flattened.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "Token_RY_flattened.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "Token_RY_flattened.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 3152,
								"contract": "Token_RY_flattened.sol:ERC20Permit",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 3154,
								"contract": "Token_RY_flattened.sol:ERC20Permit",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 3355,
								"contract": "Token_RY_flattened.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token_RY_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token_RY_flattened.sol\":{\"keccak256\":\"0x3277a6b4e22b080ba3cb68cc4a976d0354efc6d032889f1b67d92ba9c63a0a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://181b37f6b11531a7e4913184048a38f15db33033acc02b9808ae692ed4a340aa\",\"dweb:/ipfs/QmYxUMMzfasKoLuRCxie5PWMqUUBBRrAZJQbAXa6A8zkbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token_RY_flattened.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token_RY_flattened.sol\":{\"keccak256\":\"0x3277a6b4e22b080ba3cb68cc4a976d0354efc6d032889f1b67d92ba9c63a0a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://181b37f6b11531a7e4913184048a38f15db33033acc02b9808ae692ed4a340aa\",\"dweb:/ipfs/QmYxUMMzfasKoLuRCxie5PWMqUUBBRrAZJQbAXa6A8zkbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token_RY_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token_RY_flattened.sol\":{\"keccak256\":\"0x3277a6b4e22b080ba3cb68cc4a976d0354efc6d032889f1b67d92ba9c63a0a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://181b37f6b11531a7e4913184048a38f15db33033acc02b9808ae692ed4a340aa\",\"dweb:/ipfs/QmYxUMMzfasKoLuRCxie5PWMqUUBBRrAZJQbAXa6A8zkbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token_RY_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token_RY_flattened.sol\":{\"keccak256\":\"0x3277a6b4e22b080ba3cb68cc4a976d0354efc6d032889f1b67d92ba9c63a0a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://181b37f6b11531a7e4913184048a38f15db33033acc02b9808ae692ed4a340aa\",\"dweb:/ipfs/QmYxUMMzfasKoLuRCxie5PWMqUUBBRrAZJQbAXa6A8zkbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token_RY_flattened.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token_RY_flattened.sol\":{\"keccak256\":\"0x3277a6b4e22b080ba3cb68cc4a976d0354efc6d032889f1b67d92ba9c63a0a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://181b37f6b11531a7e4913184048a38f15db33033acc02b9808ae692ed4a340aa\",\"dweb:/ipfs/QmYxUMMzfasKoLuRCxie5PWMqUUBBRrAZJQbAXa6A8zkbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC5267": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token_RY_flattened.sol\":\"IERC5267\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token_RY_flattened.sol\":{\"keccak256\":\"0x3277a6b4e22b080ba3cb68cc4a976d0354efc6d032889f1b67d92ba9c63a0a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://181b37f6b11531a7e4913184048a38f15db33033acc02b9808ae692ed4a340aa\",\"dweb:/ipfs/QmYxUMMzfasKoLuRCxie5PWMqUUBBRrAZJQbAXa6A8zkbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token_RY_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token_RY_flattened.sol\":{\"keccak256\":\"0x3277a6b4e22b080ba3cb68cc4a976d0354efc6d032889f1b67d92ba9c63a0a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://181b37f6b11531a7e4913184048a38f15db33033acc02b9808ae692ed4a340aa\",\"dweb:/ipfs/QmYxUMMzfasKoLuRCxie5PWMqUUBBRrAZJQbAXa6A8zkbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Token_RY_flattened.sol\":36951:51865  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Token_RY_flattened.sol\":36951:51865  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200d3b4fdf4992f5cc87b0be7a47a6dd49393461a97b663ccea0f2898ef60630eb64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200d3b4fdf4992f5cc87b0be7a47a6dd49393461a97b663ccea0f2898ef60630eb64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD EXTCODESIZE 0x4F 0xDF BLOBHASH SWAP3 CREATE2 0xCC DUP8 0xB0 0xBE PUSH27 0x47A6DD49393461A97B663CCEA0F2898EF60630EB64736F6C634300 ADDMOD XOR STOP CALLER ",
							"sourceMap": "36951:14914:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200d3b4fdf4992f5cc87b0be7a47a6dd49393461a97b663ccea0f2898ef60630eb64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD EXTCODESIZE 0x4F 0xDF BLOBHASH SWAP3 CREATE2 0xCC DUP8 0xB0 0xBE PUSH27 0x47A6DD49393461A97B663CCEA0F2898EF60630EB64736F6C634300 ADDMOD XOR STOP CALLER ",
							"sourceMap": "36951:14914:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 36951,
									"end": 51865,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36951,
									"end": 51865,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200d3b4fdf4992f5cc87b0be7a47a6dd49393461a97b663ccea0f2898ef60630eb64736f6c63430008180033",
									".code": [
										{
											"begin": 36951,
											"end": 51865,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 36951,
											"end": 51865,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 36951,
											"end": 51865,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36951,
											"end": 51865,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 36951,
											"end": 51865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36951,
											"end": 51865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36951,
											"end": 51865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36951,
											"end": 51865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36951,
											"end": 51865,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Token_RY_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token_RY_flattened.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token_RY_flattened.sol\":{\"keccak256\":\"0x3277a6b4e22b080ba3cb68cc4a976d0354efc6d032889f1b67d92ba9c63a0a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://181b37f6b11531a7e4913184048a38f15db33033acc02b9808ae692ed4a340aa\",\"dweb:/ipfs/QmYxUMMzfasKoLuRCxie5PWMqUUBBRrAZJQbAXa6A8zkbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MessageHashUtils": {
					"abi": [],
					"devdoc": {
						"details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Token_RY_flattened.sol\":56719:59954  library MessageHashUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Token_RY_flattened.sol\":56719:59954  library MessageHashUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220709a108a9d398862533c29f565aeb9ec9b81b06789796da602720c03cb70a95864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220709a108a9d398862533c29f565aeb9ec9b81b06789796da602720c03cb70a95864736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x9A108A9D398862533C29F565AEB9EC9B81 0xB0 PUSH8 0x89796DA602720C03 0xCB PUSH17 0xA95864736F6C6343000818003300000000 ",
							"sourceMap": "56719:3235:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220709a108a9d398862533c29f565aeb9ec9b81b06789796da602720c03cb70a95864736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x9A108A9D398862533C29F565AEB9EC9B81 0xB0 PUSH8 0x89796DA602720C03 0xCB PUSH17 0xA95864736F6C6343000818003300000000 ",
							"sourceMap": "56719:3235:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56719,
									"end": 59954,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 56719,
									"end": 59954,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220709a108a9d398862533c29f565aeb9ec9b81b06789796da602720c03cb70a95864736f6c63430008180033",
									".code": [
										{
											"begin": 56719,
											"end": 59954,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 56719,
											"end": 59954,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 56719,
											"end": 59954,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56719,
											"end": 59954,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56719,
											"end": 59954,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56719,
											"end": 59954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56719,
											"end": 59954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56719,
											"end": 59954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56719,
											"end": 59954,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Token_RY_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token_RY_flattened.sol\":\"MessageHashUtils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token_RY_flattened.sol\":{\"keccak256\":\"0x3277a6b4e22b080ba3cb68cc4a976d0354efc6d032889f1b67d92ba9c63a0a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://181b37f6b11531a7e4913184048a38f15db33033acc02b9808ae692ed4a340aa\",\"dweb:/ipfs/QmYxUMMzfasKoLuRCxie5PWMqUUBBRrAZJQbAXa6A8zkbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Nonces": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Provides tracking nonces for addresses. Nonces will only increment.",
						"errors": {
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns the next unused nonce for an address."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nonces(address)": "7ecebe00"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token_RY_flattened.sol\":\"Nonces\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token_RY_flattened.sol\":{\"keccak256\":\"0x3277a6b4e22b080ba3cb68cc4a976d0354efc6d032889f1b67d92ba9c63a0a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://181b37f6b11531a7e4913184048a38f15db33033acc02b9808ae692ed4a340aa\",\"dweb:/ipfs/QmYxUMMzfasKoLuRCxie5PWMqUUBBRrAZJQbAXa6A8zkbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3355,
								"contract": "Token_RY_flattened.sol:Nonces",
								"label": "_nonces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token_RY_flattened.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token_RY_flattened.sol\":{\"keccak256\":\"0x3277a6b4e22b080ba3cb68cc4a976d0354efc6d032889f1b67d92ba9c63a0a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://181b37f6b11531a7e4913184048a38f15db33033acc02b9808ae692ed4a340aa\",\"dweb:/ipfs/QmYxUMMzfasKoLuRCxie5PWMqUUBBRrAZJQbAXa6A8zkbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 777,
								"contract": "Token_RY_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Reyes": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:security-contact": "orc@org.com",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Token_RY_flattened.sol\":79653:79991  contract Reyes is ERC20, Ownable, ERC20Permit {... */\n  mstore(0x40, 0x0160)\n    /* \"Token_RY_flattened.sol\":79705:79890  constructor(address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Token_RY_flattened.sol\":78312:78364  constructor(string memory name) EIP712(name, \"1\") {} */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x5265796573000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"Token_RY_flattened.sol\":78351:78355  name */\n  dup1\n    /* \"Token_RY_flattened.sol\":72156:72587  constructor(string memory name, string memory version) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"Token_RY_flattened.sol\":79784:79796  initialOwner */\n  dup4\n    /* \"Token_RY_flattened.sol\":12787:12900  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x5265796573000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  0x5259000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"Token_RY_flattened.sol\":12861:12866  name_ */\n  dup2\n    /* \"Token_RY_flattened.sol\":12853:12858  _name */\n  0x03\n    /* \"Token_RY_flattened.sol\":12853:12866  _name = name_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"Token_RY_flattened.sol\":12886:12893  symbol_ */\n  dup1\n    /* \"Token_RY_flattened.sol\":12876:12883  _symbol */\n  0x04\n    /* \"Token_RY_flattened.sol\":12876:12893  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"Token_RY_flattened.sol\":12787:12900  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"Token_RY_flattened.sol\":23308:23309  0 */\n  0x00\n    /* \"Token_RY_flattened.sol\":23284:23310  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Token_RY_flattened.sol\":23284:23296  initialOwner */\n  dup2\n    /* \"Token_RY_flattened.sol\":23284:23310  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Token_RY_flattened.sol\":23280:23375  if (initialOwner == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"Token_RY_flattened.sol\":23361:23362  0 */\n  0x00\n    /* \"Token_RY_flattened.sol\":23333:23364  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Token_RY_flattened.sol\":23280:23375  if (initialOwner == address(0)) {... */\ntag_14:\n    /* \"Token_RY_flattened.sol\":23384:23416  _transferOwnership(initialOwner) */\n  tag_17\n    /* \"Token_RY_flattened.sol\":23403:23415  initialOwner */\n  dup2\n    /* \"Token_RY_flattened.sol\":23384:23402  _transferOwnership */\n  shl(0x20, tag_18)\n    /* \"Token_RY_flattened.sol\":23384:23416  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"Token_RY_flattened.sol\":23236:23423  constructor(address initialOwner) {... */\n  pop\n    /* \"Token_RY_flattened.sol\":72229:72274  name.toShortStringWithFallback(_nameFallback) */\n  tag_20\n    /* \"Token_RY_flattened.sol\":72260:72273  _nameFallback */\n  0x06\n    /* \"Token_RY_flattened.sol\":72229:72233  name */\n  dup4\n    /* \"Token_RY_flattened.sol\":72229:72259  name.toShortStringWithFallback */\n  shl(0x20, tag_21)\n  swap1\n    /* \"Token_RY_flattened.sol\":72229:72274  name.toShortStringWithFallback(_nameFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"Token_RY_flattened.sol\":72221:72274  _name = name.toShortStringWithFallback(_nameFallback) */\n  0x0120\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Token_RY_flattened.sol\":72295:72346  version.toShortStringWithFallback(_versionFallback) */\n  tag_22\n    /* \"Token_RY_flattened.sol\":72329:72345  _versionFallback */\n  0x07\n    /* \"Token_RY_flattened.sol\":72295:72302  version */\n  dup3\n    /* \"Token_RY_flattened.sol\":72295:72328  version.toShortStringWithFallback */\n  shl(0x20, tag_21)\n  swap1\n    /* \"Token_RY_flattened.sol\":72295:72346  version.toShortStringWithFallback(_versionFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"Token_RY_flattened.sol\":72284:72346  _version = version.toShortStringWithFallback(_versionFallback) */\n  0x0140\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Token_RY_flattened.sol\":72386:72390  name */\n  dup2\n    /* \"Token_RY_flattened.sol\":72370:72392  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"Token_RY_flattened.sol\":72356:72392  _hashedName = keccak256(bytes(name)) */\n  0xe0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Token_RY_flattened.sol\":72435:72442  version */\n  dup1\n    /* \"Token_RY_flattened.sol\":72419:72444  keccak256(bytes(version)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"Token_RY_flattened.sol\":72402:72444  _hashedVersion = keccak256(bytes(version)) */\n  0x0100\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Token_RY_flattened.sol\":72472:72485  block.chainid */\n  chainid\n    /* \"Token_RY_flattened.sol\":72455:72485  _cachedChainId = block.chainid */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Token_RY_flattened.sol\":72520:72543  _buildDomainSeparator() */\n  tag_23\n    /* \"Token_RY_flattened.sol\":72520:72541  _buildDomainSeparator */\n  shl(0x20, tag_24)\n    /* \"Token_RY_flattened.sol\":72520:72543  _buildDomainSeparator() */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"Token_RY_flattened.sol\":72495:72543  _cachedDomainSeparator = _buildDomainSeparator() */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Token_RY_flattened.sol\":72575:72579  this */\n  address\n    /* \"Token_RY_flattened.sol\":72553:72580  _cachedThis = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Token_RY_flattened.sol\":72156:72587  constructor(string memory name, string memory version) {... */\n  pop\n  pop\n    /* \"Token_RY_flattened.sol\":78312:78364  constructor(string memory name) EIP712(name, \"1\") {} */\n  pop\n    /* \"Token_RY_flattened.sol\":79841:79883  _mint(msg.sender, 1000 * 10 ** decimals()) */\n  tag_27\n    /* \"Token_RY_flattened.sol\":79847:79857  msg.sender */\n  caller\n    /* \"Token_RY_flattened.sol\":79872:79882  decimals() */\n  tag_28\n    /* \"Token_RY_flattened.sol\":79872:79880  decimals */\n  shl(0x20, tag_29)\n    /* \"Token_RY_flattened.sol\":79872:79882  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"Token_RY_flattened.sol\":79866:79868  10 */\n  0x0a\n    /* \"Token_RY_flattened.sol\":79866:79882  10 ** decimals() */\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n    /* \"Token_RY_flattened.sol\":79859:79863  1000 */\n  0x03e8\n    /* \"Token_RY_flattened.sol\":79859:79882  1000 * 10 ** decimals() */\n  tag_32\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n    /* \"Token_RY_flattened.sol\":79841:79846  _mint */\n  shl(0x20, tag_34)\n    /* \"Token_RY_flattened.sol\":79841:79883  _mint(msg.sender, 1000 * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"Token_RY_flattened.sol\":79705:79890  constructor(address initialOwner)... */\n  pop\n    /* \"Token_RY_flattened.sol\":79653:79991  contract Reyes is ERC20, Ownable, ERC20Permit {... */\n  jump(tag_35)\n    /* \"Token_RY_flattened.sol\":24923:25110  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"Token_RY_flattened.sol\":24996:25012  address oldOwner */\n  0x00\n    /* \"Token_RY_flattened.sol\":25015:25021  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Token_RY_flattened.sol\":24996:25021  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"Token_RY_flattened.sol\":25040:25048  newOwner */\n  dup2\n    /* \"Token_RY_flattened.sol\":25031:25037  _owner */\n  0x05\n  0x00\n    /* \"Token_RY_flattened.sol\":25031:25048  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Token_RY_flattened.sol\":25094:25102  newOwner */\n  dup2\n    /* \"Token_RY_flattened.sol\":25063:25103  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Token_RY_flattened.sol\":25084:25092  oldOwner */\n  dup2\n    /* \"Token_RY_flattened.sol\":25063:25103  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Token_RY_flattened.sol\":24986:25110  {... */\n  pop\n    /* \"Token_RY_flattened.sol\":24923:25110  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Token_RY_flattened.sol\":66806:67146  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_21:\n    /* \"Token_RY_flattened.sol\":66902:66913  ShortString */\n  0x00\n    /* \"Token_RY_flattened.sol\":66951:66953  32 */\n  0x20\n    /* \"Token_RY_flattened.sol\":66935:66940  value */\n  dup4\n    /* \"Token_RY_flattened.sol\":66929:66948  bytes(value).length */\n  mload\n    /* \"Token_RY_flattened.sol\":66929:66953  bytes(value).length < 32 */\n  lt\n    /* \"Token_RY_flattened.sol\":66925:67140  if (bytes(value).length < 32) {... */\n  iszero\n  tag_38\n  jumpi\n    /* \"Token_RY_flattened.sol\":66976:66996  toShortString(value) */\n  tag_39\n    /* \"Token_RY_flattened.sol\":66990:66995  value */\n  dup4\n    /* \"Token_RY_flattened.sol\":66976:66989  toShortString */\n  shl(0x20, tag_40)\n    /* \"Token_RY_flattened.sol\":66976:66996  toShortString(value) */\n  0x20\n  shr\n  jump\t// in\ntag_39:\n    /* \"Token_RY_flattened.sol\":66969:66996  return toShortString(value) */\n  swap1\n  pop\n  jump(tag_37)\n    /* \"Token_RY_flattened.sol\":66925:67140  if (bytes(value).length < 32) {... */\ntag_38:\n    /* \"Token_RY_flattened.sol\":67068:67073  value */\n  dup3\n    /* \"Token_RY_flattened.sol\":67027:67059  StorageSlot.getStringSlot(store) */\n  tag_42\n    /* \"Token_RY_flattened.sol\":67053:67058  store */\n  dup4\n    /* \"Token_RY_flattened.sol\":67027:67052  StorageSlot.getStringSlot */\n  shl(0x20, tag_43)\n    /* \"Token_RY_flattened.sol\":67027:67059  StorageSlot.getStringSlot(store) */\n  0x20\n  shr\n  jump\t// in\ntag_42:\n    /* \"Token_RY_flattened.sol\":67027:67065  StorageSlot.getStringSlot(store).value */\n  0x00\n  add\n    /* \"Token_RY_flattened.sol\":67027:67073  StorageSlot.getStringSlot(store).value = value */\n  swap1\n  dup2\n  tag_44\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_44:\n  pop\n    /* \"Token_RY_flattened.sol\":65282:65348  0x00000000000000000000000000000000000000000000000000000000000000FF */\n  0xff\n    /* \"Token_RY_flattened.sol\":67111:67128  FALLBACK_SENTINEL */\n  0x00\n  shl\n    /* \"Token_RY_flattened.sol\":67087:67129  return ShortString.wrap(FALLBACK_SENTINEL) */\n  swap1\n  pop\n    /* \"Token_RY_flattened.sol\":66806:67146  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_37:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Token_RY_flattened.sol\":72941:73120  function _buildDomainSeparator() private view returns (bytes32) {... */\ntag_24:\n    /* \"Token_RY_flattened.sol\":72996:73003  bytes32 */\n  0x00\n    /* \"Token_RY_flattened.sol\":70907:71002  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"Token_RY_flattened.sol\":73054:73065  _hashedName */\n  mload(0xe0)\n    /* \"Token_RY_flattened.sol\":73067:73081  _hashedVersion */\n  mload(0x0100)\n    /* \"Token_RY_flattened.sol\":73083:73096  block.chainid */\n  chainid\n    /* \"Token_RY_flattened.sol\":73106:73110  this */\n  address\n    /* \"Token_RY_flattened.sol\":73032:73112  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  add(0x20, mload(0x40))\n  tag_46\n  swap6\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_47\n  jump\t// in\ntag_46:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"Token_RY_flattened.sol\":73022:73113  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"Token_RY_flattened.sol\":73015:73113  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  swap1\n  pop\n    /* \"Token_RY_flattened.sol\":72941:73120  function _buildDomainSeparator() private view returns (bytes32) {... */\n  swap1\n  jump\t// out\n    /* \"Token_RY_flattened.sol\":13893:13975  function decimals() public view virtual returns (uint8) {... */\ntag_29:\n    /* \"Token_RY_flattened.sol\":13942:13947  uint8 */\n  0x00\n    /* \"Token_RY_flattened.sol\":13966:13968  18 */\n  0x12\n    /* \"Token_RY_flattened.sol\":13959:13968  return 18 */\n  swap1\n  pop\n    /* \"Token_RY_flattened.sol\":13893:13975  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"Token_RY_flattened.sol\":18612:18820  function _mint(address account, uint256 value) internal {... */\ntag_34:\n    /* \"Token_RY_flattened.sol\":18701:18702  0 */\n  0x00\n    /* \"Token_RY_flattened.sol\":18682:18703  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Token_RY_flattened.sol\":18682:18689  account */\n  dup3\n    /* \"Token_RY_flattened.sol\":18682:18703  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Token_RY_flattened.sol\":18678:18769  if (account == address(0)) {... */\n  tag_50\n  jumpi\n    /* \"Token_RY_flattened.sol\":18755:18756  0 */\n  0x00\n    /* \"Token_RY_flattened.sol\":18726:18758  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_51\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_51:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Token_RY_flattened.sol\":18678:18769  if (account == address(0)) {... */\ntag_50:\n    /* \"Token_RY_flattened.sol\":18778:18813  _update(address(0), account, value) */\n  tag_52\n    /* \"Token_RY_flattened.sol\":18794:18795  0 */\n  0x00\n    /* \"Token_RY_flattened.sol\":18798:18805  account */\n  dup4\n    /* \"Token_RY_flattened.sol\":18807:18812  value */\n  dup4\n    /* \"Token_RY_flattened.sol\":18778:18785  _update */\n  shl(0x20, tag_53)\n    /* \"Token_RY_flattened.sol\":18778:18813  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_52:\n    /* \"Token_RY_flattened.sol\":18612:18820  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"Token_RY_flattened.sol\":65600:65886  function toShortString(string memory str) internal pure returns (ShortString) {... */\ntag_40:\n    /* \"Token_RY_flattened.sol\":65665:65676  ShortString */\n  0x00\n    /* \"Token_RY_flattened.sol\":65688:65705  bytes memory bstr */\n  dup1\n    /* \"Token_RY_flattened.sol\":65714:65717  str */\n  dup3\n    /* \"Token_RY_flattened.sol\":65688:65718  bytes memory bstr = bytes(str) */\n  swap1\n  pop\n    /* \"Token_RY_flattened.sol\":65746:65748  31 */\n  0x1f\n    /* \"Token_RY_flattened.sol\":65732:65736  bstr */\n  dup2\n    /* \"Token_RY_flattened.sol\":65732:65743  bstr.length */\n  mload\n    /* \"Token_RY_flattened.sol\":65732:65748  bstr.length > 31 */\n  gt\n    /* \"Token_RY_flattened.sol\":65728:65800  if (bstr.length > 31) {... */\n  iszero\n  tag_55\n  jumpi\n    /* \"Token_RY_flattened.sol\":65785:65788  str */\n  dup3\n    /* \"Token_RY_flattened.sol\":65771:65789  StringTooLong(str) */\n  mload(0x40)\n  0x305a27a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_56\n  swap2\n  swap1\n  tag_57\n  jump\t// in\ntag_56:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Token_RY_flattened.sol\":65728:65800  if (bstr.length > 31) {... */\ntag_55:\n    /* \"Token_RY_flattened.sol\":65866:65870  bstr */\n  dup1\n    /* \"Token_RY_flattened.sol\":65866:65877  bstr.length */\n  mload\n    /* \"Token_RY_flattened.sol\":65857:65861  bstr */\n  dup2\n    /* \"Token_RY_flattened.sol\":65849:65862  bytes32(bstr) */\n  tag_58\n  swap1\n  tag_59\n  jump\t// in\ntag_58:\n    /* \"Token_RY_flattened.sol\":65841:65863  uint256(bytes32(bstr)) */\n  0x00\n  shr\n    /* \"Token_RY_flattened.sol\":65841:65877  uint256(bytes32(bstr)) | bstr.length */\n  or\n    /* \"Token_RY_flattened.sol\":65833:65878  bytes32(uint256(bytes32(bstr)) | bstr.length) */\n  0x00\n  shl\n    /* \"Token_RY_flattened.sol\":65809:65879  return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length)) */\n  swap2\n  pop\n  pop\n    /* \"Token_RY_flattened.sol\":65600:65886  function toShortString(string memory str) internal pure returns (ShortString) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"Token_RY_flattened.sol\":63116:63318  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\ntag_43:\n    /* \"Token_RY_flattened.sol\":63184:63204  StringSlot storage r */\n  0x00\n    /* \"Token_RY_flattened.sol\":63292:63302  store.slot */\n  dup2\n    /* \"Token_RY_flattened.sol\":63282:63302  r.slot := store.slot */\n  swap1\n  pop\n    /* \"Token_RY_flattened.sol\":63116:63318  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"Token_RY_flattened.sol\":17162:18269  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_53:\n    /* \"Token_RY_flattened.sol\":17267:17268  0 */\n  0x00\n    /* \"Token_RY_flattened.sol\":17251:17269  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Token_RY_flattened.sol\":17251:17255  from */\n  dup4\n    /* \"Token_RY_flattened.sol\":17251:17269  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Token_RY_flattened.sol\":17247:17787  if (from == address(0)) {... */\n  tag_62\n  jumpi\n    /* \"Token_RY_flattened.sol\":17403:17408  value */\n  dup1\n    /* \"Token_RY_flattened.sol\":17387:17399  _totalSupply */\n  0x02\n  0x00\n    /* \"Token_RY_flattened.sol\":17387:17408  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_63\n  swap2\n  swap1\n  tag_64\n  jump\t// in\ntag_63:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Token_RY_flattened.sol\":17247:17787  if (from == address(0)) {... */\n  jump(tag_65)\ntag_62:\n    /* \"Token_RY_flattened.sol\":17439:17458  uint256 fromBalance */\n  0x00\n    /* \"Token_RY_flattened.sol\":17461:17470  _balances */\n  dup1\n    /* \"Token_RY_flattened.sol\":17461:17476  _balances[from] */\n  0x00\n    /* \"Token_RY_flattened.sol\":17471:17475  from */\n  dup6\n    /* \"Token_RY_flattened.sol\":17461:17476  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"Token_RY_flattened.sol\":17439:17476  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"Token_RY_flattened.sol\":17508:17513  value */\n  dup2\n    /* \"Token_RY_flattened.sol\":17494:17505  fromBalance */\n  dup2\n    /* \"Token_RY_flattened.sol\":17494:17513  fromBalance < value */\n  lt\n    /* \"Token_RY_flattened.sol\":17490:17605  if (fromBalance < value) {... */\n  iszero\n  tag_66\n  jumpi\n    /* \"Token_RY_flattened.sol\":17565:17569  from */\n  dup4\n    /* \"Token_RY_flattened.sol\":17571:17582  fromBalance */\n  dup2\n    /* \"Token_RY_flattened.sol\":17584:17589  value */\n  dup4\n    /* \"Token_RY_flattened.sol\":17540:17590  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_67\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_68\n  jump\t// in\ntag_67:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Token_RY_flattened.sol\":17490:17605  if (fromBalance < value) {... */\ntag_66:\n    /* \"Token_RY_flattened.sol\":17757:17762  value */\n  dup2\n    /* \"Token_RY_flattened.sol\":17743:17754  fromBalance */\n  dup2\n    /* \"Token_RY_flattened.sol\":17743:17762  fromBalance - value */\n  sub\n    /* \"Token_RY_flattened.sol\":17725:17734  _balances */\n  0x00\n    /* \"Token_RY_flattened.sol\":17725:17740  _balances[from] */\n  dup1\n    /* \"Token_RY_flattened.sol\":17735:17739  from */\n  dup7\n    /* \"Token_RY_flattened.sol\":17725:17740  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"Token_RY_flattened.sol\":17725:17762  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Token_RY_flattened.sol\":17425:17787  {... */\n  pop\n    /* \"Token_RY_flattened.sol\":17247:17787  if (from == address(0)) {... */\ntag_65:\n    /* \"Token_RY_flattened.sol\":17815:17816  0 */\n  0x00\n    /* \"Token_RY_flattened.sol\":17801:17817  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Token_RY_flattened.sol\":17801:17803  to */\n  dup3\n    /* \"Token_RY_flattened.sol\":17801:17817  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Token_RY_flattened.sol\":17797:18222  if (to == address(0)) {... */\n  tag_69\n  jumpi\n    /* \"Token_RY_flattened.sol\":17980:17985  value */\n  dup1\n    /* \"Token_RY_flattened.sol\":17964:17976  _totalSupply */\n  0x02\n  0x00\n    /* \"Token_RY_flattened.sol\":17964:17985  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Token_RY_flattened.sol\":17797:18222  if (to == address(0)) {... */\n  jump(tag_70)\ntag_69:\n    /* \"Token_RY_flattened.sol\":18192:18197  value */\n  dup1\n    /* \"Token_RY_flattened.sol\":18175:18184  _balances */\n  0x00\n    /* \"Token_RY_flattened.sol\":18175:18188  _balances[to] */\n  dup1\n    /* \"Token_RY_flattened.sol\":18185:18187  to */\n  dup5\n    /* \"Token_RY_flattened.sol\":18175:18188  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"Token_RY_flattened.sol\":18175:18197  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Token_RY_flattened.sol\":17797:18222  if (to == address(0)) {... */\ntag_70:\n    /* \"Token_RY_flattened.sol\":18252:18254  to */\n  dup2\n    /* \"Token_RY_flattened.sol\":18237:18262  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Token_RY_flattened.sol\":18246:18250  from */\n  dup4\n    /* \"Token_RY_flattened.sol\":18237:18262  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"Token_RY_flattened.sol\":18256:18261  value */\n  dup4\n    /* \"Token_RY_flattened.sol\":18237:18262  Transfer(from, to, value) */\n  mload(0x40)\n  tag_71\n  swap2\n  swap1\n  tag_72\n  jump\t// in\ntag_71:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Token_RY_flattened.sol\":17162:18269  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_74:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_76:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_77:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_122\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_76\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_78:\n    /* \"#utility.yul\":641:665   */\n  tag_124\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_77\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_125\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_125:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_79:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_127\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_78\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_130\n  tag_74\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":932:1051   */\ntag_129:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_131\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_79\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_80:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_81:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_82:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_83:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_136\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_136:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_137\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_138\n  tag_82\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":1909:1993   */\ntag_137:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_84:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_85:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_86:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_87:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_143\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_86\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":2624:2663   */\n  tag_144\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_86\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_88:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_89:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_90:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_148\n    /* \"#utility.yul\":3013:3047   */\n  tag_149\n    /* \"#utility.yul\":3022:3046   */\n  tag_150\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_88\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":3013:3047   */\n  tag_89\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":2995:3048   */\n  tag_88\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_91:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_92:\n    /* \"#utility.yul\":3251:3290   */\n  tag_153\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_90\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":3312:3403   */\n  tag_154\n    /* \"#utility.yul\":3361:3402   */\n  tag_155\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_91\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_87\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_93:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_94:\n    /* \"#utility.yul\":3572:3604   */\n  tag_158\n  tag_93\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":3613:3678   */\n  tag_159\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_92\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_95:\n    /* \"#utility.yul\":3750:3870   */\ntag_161:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_164\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_94\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_161)\ntag_163:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_96:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_167\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_84\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":4101:4130   */\n  tag_168\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_85\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_169:\n    /* \"#utility.yul\":4328:4408   */\n  tag_170\n    /* \"#utility.yul\":4384:4406   */\n  tag_171\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_85\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_95\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_166:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_97:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_98:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_174\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_97\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_99:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_176\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_98\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_11:\n    /* \"#utility.yul\":5145:5182   */\n  tag_178\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_80\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_179\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_180\n  tag_81\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":5233:5289   */\ntag_179:\n    /* \"#utility.yul\":5313:5351   */\n  tag_181\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_83\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":5398:5465   */\n  tag_182\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_96\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_184\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_185:\n    /* \"#utility.yul\":6339:6406   */\n  tag_186\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_99\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_183)\n    /* \"#utility.yul\":5560:6178   */\ntag_184:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_187\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_84\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_188:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_190\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_188)\ntag_190:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_191\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_192\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_98\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_191:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_183:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_100:\n    /* \"#utility.yul\":6516:6540   */\n  tag_194\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_77\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_16:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_196\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_100\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:6961   */\ntag_101:\n    /* \"#utility.yul\":6829:6906   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6826:6827   */\n  0x00\n    /* \"#utility.yul\":6819:6907   */\n  mstore\n    /* \"#utility.yul\":6926:6930   */\n  0x11\n    /* \"#utility.yul\":6923:6924   */\n  0x04\n    /* \"#utility.yul\":6916:6931   */\n  mstore\n    /* \"#utility.yul\":6950:6954   */\n  0x24\n    /* \"#utility.yul\":6947:6948   */\n  0x00\n    /* \"#utility.yul\":6940:6955   */\n  revert\n    /* \"#utility.yul\":6967:7069   */\ntag_102:\n    /* \"#utility.yul\":7009:7017   */\n  0x00\n    /* \"#utility.yul\":7056:7061   */\n  dup2\n    /* \"#utility.yul\":7053:7054   */\n  0x01\n    /* \"#utility.yul\":7049:7062   */\n  shr\n    /* \"#utility.yul\":7028:7062   */\n  swap1\n  pop\n    /* \"#utility.yul\":6967:7069   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7075:7923   */\ntag_103:\n    /* \"#utility.yul\":7136:7141   */\n  0x00\n    /* \"#utility.yul\":7143:7147   */\n  dup1\n    /* \"#utility.yul\":7167:7173   */\n  dup3\n    /* \"#utility.yul\":7158:7173   */\n  swap2\n  pop\n    /* \"#utility.yul\":7191:7196   */\n  dup4\n    /* \"#utility.yul\":7182:7196   */\n  swap1\n  pop\n    /* \"#utility.yul\":7205:7917   */\ntag_200:\n    /* \"#utility.yul\":7226:7227   */\n  0x01\n    /* \"#utility.yul\":7216:7224   */\n  dup6\n    /* \"#utility.yul\":7213:7228   */\n  gt\n    /* \"#utility.yul\":7205:7917   */\n  iszero\n  tag_202\n  jumpi\n    /* \"#utility.yul\":7321:7325   */\n  dup1\n    /* \"#utility.yul\":7316:7319   */\n  dup7\n    /* \"#utility.yul\":7312:7326   */\n  div\n    /* \"#utility.yul\":7306:7310   */\n  dup2\n    /* \"#utility.yul\":7303:7327   */\n  gt\n    /* \"#utility.yul\":7300:7350   */\n  iszero\n  tag_203\n  jumpi\n    /* \"#utility.yul\":7330:7348   */\n  tag_204\n  tag_101\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":7300:7350   */\ntag_203:\n    /* \"#utility.yul\":7380:7381   */\n  0x01\n    /* \"#utility.yul\":7370:7378   */\n  dup6\n    /* \"#utility.yul\":7366:7382   */\n  and\n    /* \"#utility.yul\":7363:7814   */\n  iszero\n  tag_205\n  jumpi\n    /* \"#utility.yul\":7795:7799   */\n  dup1\n    /* \"#utility.yul\":7788:7793   */\n  dup3\n    /* \"#utility.yul\":7784:7800   */\n  mul\n    /* \"#utility.yul\":7775:7800   */\n  swap2\n  pop\n    /* \"#utility.yul\":7363:7814   */\ntag_205:\n    /* \"#utility.yul\":7845:7849   */\n  dup1\n    /* \"#utility.yul\":7839:7843   */\n  dup2\n    /* \"#utility.yul\":7835:7850   */\n  mul\n    /* \"#utility.yul\":7827:7850   */\n  swap1\n  pop\n    /* \"#utility.yul\":7875:7907   */\n  tag_206\n    /* \"#utility.yul\":7898:7906   */\n  dup6\n    /* \"#utility.yul\":7875:7907   */\n  tag_102\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":7863:7907   */\n  swap5\n  pop\n    /* \"#utility.yul\":7205:7917   */\n  jump(tag_200)\ntag_202:\n    /* \"#utility.yul\":7075:7923   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7929:9002   */\ntag_104:\n    /* \"#utility.yul\":7983:7988   */\n  0x00\n    /* \"#utility.yul\":8174:8182   */\n  dup3\n    /* \"#utility.yul\":8164:8204   */\n  tag_208\n  jumpi\n    /* \"#utility.yul\":8195:8196   */\n  0x01\n    /* \"#utility.yul\":8186:8196   */\n  swap1\n  pop\n    /* \"#utility.yul\":8197:8202   */\n  jump(tag_207)\n    /* \"#utility.yul\":8164:8204   */\ntag_208:\n    /* \"#utility.yul\":8223:8227   */\n  dup2\n    /* \"#utility.yul\":8213:8249   */\n  tag_209\n  jumpi\n    /* \"#utility.yul\":8240:8241   */\n  0x00\n    /* \"#utility.yul\":8231:8241   */\n  swap1\n  pop\n    /* \"#utility.yul\":8242:8247   */\n  jump(tag_207)\n    /* \"#utility.yul\":8213:8249   */\ntag_209:\n    /* \"#utility.yul\":8309:8313   */\n  dup2\n    /* \"#utility.yul\":8357:8358   */\n  0x01\n    /* \"#utility.yul\":8352:8379   */\n  dup2\n  eq\n  tag_211\n  jumpi\n    /* \"#utility.yul\":8393:8394   */\n  0x02\n    /* \"#utility.yul\":8388:8579   */\n  dup2\n  eq\n  tag_212\n  jumpi\n    /* \"#utility.yul\":8302:8579   */\n  jump(tag_210)\n    /* \"#utility.yul\":8352:8379   */\ntag_211:\n    /* \"#utility.yul\":8370:8371   */\n  0x01\n    /* \"#utility.yul\":8361:8371   */\n  swap2\n  pop\n    /* \"#utility.yul\":8372:8377   */\n  pop\n  jump(tag_207)\n    /* \"#utility.yul\":8388:8579   */\ntag_212:\n    /* \"#utility.yul\":8433:8436   */\n  0xff\n    /* \"#utility.yul\":8423:8431   */\n  dup5\n    /* \"#utility.yul\":8420:8437   */\n  gt\n    /* \"#utility.yul\":8417:8460   */\n  iszero\n  tag_213\n  jumpi\n    /* \"#utility.yul\":8440:8458   */\n  tag_214\n  tag_101\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":8417:8460   */\ntag_213:\n    /* \"#utility.yul\":8489:8497   */\n  dup4\n    /* \"#utility.yul\":8486:8487   */\n  0x02\n    /* \"#utility.yul\":8482:8498   */\n  exp\n    /* \"#utility.yul\":8473:8498   */\n  swap2\n  pop\n    /* \"#utility.yul\":8524:8527   */\n  dup5\n    /* \"#utility.yul\":8517:8522   */\n  dup3\n    /* \"#utility.yul\":8514:8528   */\n  gt\n    /* \"#utility.yul\":8511:8551   */\n  iszero\n  tag_215\n  jumpi\n    /* \"#utility.yul\":8531:8549   */\n  tag_216\n  tag_101\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":8511:8551   */\ntag_215:\n    /* \"#utility.yul\":8564:8569   */\n  pop\n  jump(tag_207)\n    /* \"#utility.yul\":8302:8579   */\ntag_210:\n  pop\n    /* \"#utility.yul\":8688:8690   */\n  0x20\n    /* \"#utility.yul\":8678:8686   */\n  dup4\n    /* \"#utility.yul\":8675:8691   */\n  lt\n    /* \"#utility.yul\":8669:8672   */\n  0x0133\n    /* \"#utility.yul\":8663:8667   */\n  dup4\n    /* \"#utility.yul\":8660:8673   */\n  lt\n    /* \"#utility.yul\":8656:8692   */\n  and\n    /* \"#utility.yul\":8638:8640   */\n  0x4e\n    /* \"#utility.yul\":8628:8636   */\n  dup5\n    /* \"#utility.yul\":8625:8641   */\n  lt\n    /* \"#utility.yul\":8620:8622   */\n  0x0b\n    /* \"#utility.yul\":8614:8618   */\n  dup5\n    /* \"#utility.yul\":8611:8623   */\n  lt\n    /* \"#utility.yul\":8607:8642   */\n  and\n    /* \"#utility.yul\":8591:8702   */\n  or\n    /* \"#utility.yul\":8588:8834   */\n  iszero\n  tag_217\n  jumpi\n    /* \"#utility.yul\":8744:8752   */\n  dup3\n    /* \"#utility.yul\":8738:8742   */\n  dup3\n    /* \"#utility.yul\":8734:8753   */\n  exp\n    /* \"#utility.yul\":8725:8753   */\n  swap1\n  pop\n    /* \"#utility.yul\":8779:8782   */\n  dup4\n    /* \"#utility.yul\":8772:8777   */\n  dup2\n    /* \"#utility.yul\":8769:8783   */\n  gt\n    /* \"#utility.yul\":8766:8806   */\n  iszero\n  tag_218\n  jumpi\n    /* \"#utility.yul\":8786:8804   */\n  tag_219\n  tag_101\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":8766:8806   */\ntag_218:\n    /* \"#utility.yul\":8819:8824   */\n  jump(tag_207)\n    /* \"#utility.yul\":8588:8834   */\ntag_217:\n    /* \"#utility.yul\":8859:8901   */\n  tag_220\n    /* \"#utility.yul\":8897:8900   */\n  dup5\n    /* \"#utility.yul\":8887:8895   */\n  dup5\n    /* \"#utility.yul\":8881:8885   */\n  dup5\n    /* \"#utility.yul\":8878:8879   */\n  0x01\n    /* \"#utility.yul\":8859:8901   */\n  tag_103\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":8844:8901   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":8933:8937   */\n  dup2\n    /* \"#utility.yul\":8928:8931   */\n  dup5\n    /* \"#utility.yul\":8924:8938   */\n  div\n    /* \"#utility.yul\":8917:8922   */\n  dup2\n    /* \"#utility.yul\":8914:8939   */\n  gt\n    /* \"#utility.yul\":8911:8962   */\n  iszero\n  tag_221\n  jumpi\n    /* \"#utility.yul\":8942:8960   */\n  tag_222\n  tag_101\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":8911:8962   */\ntag_221:\n    /* \"#utility.yul\":8991:8995   */\n  dup2\n    /* \"#utility.yul\":8984:8989   */\n  dup2\n    /* \"#utility.yul\":8980:8996   */\n  mul\n    /* \"#utility.yul\":8971:8996   */\n  swap1\n  pop\n    /* \"#utility.yul\":7929:9002   */\ntag_207:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9008:9094   */\ntag_105:\n    /* \"#utility.yul\":9043:9050   */\n  0x00\n    /* \"#utility.yul\":9083:9087   */\n  0xff\n    /* \"#utility.yul\":9076:9081   */\n  dup3\n    /* \"#utility.yul\":9072:9088   */\n  and\n    /* \"#utility.yul\":9061:9088   */\n  swap1\n  pop\n    /* \"#utility.yul\":9008:9094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9100:9381   */\ntag_31:\n    /* \"#utility.yul\":9158:9163   */\n  0x00\n    /* \"#utility.yul\":9182:9205   */\n  tag_225\n    /* \"#utility.yul\":9200:9204   */\n  dup3\n    /* \"#utility.yul\":9182:9205   */\n  tag_88\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":9174:9205   */\n  swap2\n  pop\n    /* \"#utility.yul\":9226:9251   */\n  tag_226\n    /* \"#utility.yul\":9242:9250   */\n  dup4\n    /* \"#utility.yul\":9226:9251   */\n  tag_105\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":9214:9251   */\n  swap3\n  pop\n    /* \"#utility.yul\":9270:9374   */\n  tag_227\n    /* \"#utility.yul\":9307:9373   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9297:9305   */\n  dup5\n    /* \"#utility.yul\":9291:9295   */\n  dup5\n    /* \"#utility.yul\":9270:9374   */\n  tag_104\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":9261:9374   */\n  swap1\n  pop\n    /* \"#utility.yul\":9100:9381   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9387:9797   */\ntag_33:\n    /* \"#utility.yul\":9427:9434   */\n  0x00\n    /* \"#utility.yul\":9450:9470   */\n  tag_229\n    /* \"#utility.yul\":9468:9469   */\n  dup3\n    /* \"#utility.yul\":9450:9470   */\n  tag_88\n  jump\t// in\ntag_229:\n    /* \"#utility.yul\":9445:9470   */\n  swap2\n  pop\n    /* \"#utility.yul\":9484:9504   */\n  tag_230\n    /* \"#utility.yul\":9502:9503   */\n  dup4\n    /* \"#utility.yul\":9484:9504   */\n  tag_88\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":9479:9504   */\n  swap3\n  pop\n    /* \"#utility.yul\":9539:9540   */\n  dup3\n    /* \"#utility.yul\":9536:9537   */\n  dup3\n    /* \"#utility.yul\":9532:9541   */\n  mul\n    /* \"#utility.yul\":9561:9591   */\n  tag_231\n    /* \"#utility.yul\":9579:9590   */\n  dup2\n    /* \"#utility.yul\":9561:9591   */\n  tag_88\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":9550:9591   */\n  swap2\n  pop\n    /* \"#utility.yul\":9740:9741   */\n  dup3\n    /* \"#utility.yul\":9731:9738   */\n  dup3\n    /* \"#utility.yul\":9727:9742   */\n  div\n    /* \"#utility.yul\":9724:9725   */\n  dup5\n    /* \"#utility.yul\":9721:9743   */\n  eq\n    /* \"#utility.yul\":9701:9702   */\n  dup4\n    /* \"#utility.yul\":9694:9703   */\n  iszero\n    /* \"#utility.yul\":9674:9757   */\n  or\n    /* \"#utility.yul\":9651:9790   */\n  tag_232\n  jumpi\n    /* \"#utility.yul\":9770:9788   */\n  tag_233\n  tag_101\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":9651:9790   */\ntag_232:\n    /* \"#utility.yul\":9435:9797   */\n  pop\n    /* \"#utility.yul\":9387:9797   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9803:9880   */\ntag_106:\n    /* \"#utility.yul\":9840:9847   */\n  0x00\n    /* \"#utility.yul\":9869:9874   */\n  dup2\n    /* \"#utility.yul\":9858:9874   */\n  swap1\n  pop\n    /* \"#utility.yul\":9803:9880   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9886:10004   */\ntag_107:\n    /* \"#utility.yul\":9973:9997   */\n  tag_236\n    /* \"#utility.yul\":9991:9996   */\n  dup2\n    /* \"#utility.yul\":9973:9997   */\n  tag_106\n  jump\t// in\ntag_236:\n    /* \"#utility.yul\":9968:9971   */\n  dup3\n    /* \"#utility.yul\":9961:9998   */\n  mstore\n    /* \"#utility.yul\":9886:10004   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10010:10128   */\ntag_108:\n    /* \"#utility.yul\":10097:10121   */\n  tag_238\n    /* \"#utility.yul\":10115:10120   */\n  dup2\n    /* \"#utility.yul\":10097:10121   */\n  tag_88\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":10092:10095   */\n  dup3\n    /* \"#utility.yul\":10085:10122   */\n  mstore\n    /* \"#utility.yul\":10010:10128   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10134:10798   */\ntag_47:\n    /* \"#utility.yul\":10339:10343   */\n  0x00\n    /* \"#utility.yul\":10377:10380   */\n  0xa0\n    /* \"#utility.yul\":10366:10375   */\n  dup3\n    /* \"#utility.yul\":10362:10381   */\n  add\n    /* \"#utility.yul\":10354:10381   */\n  swap1\n  pop\n    /* \"#utility.yul\":10391:10462   */\n  tag_240\n    /* \"#utility.yul\":10459:10460   */\n  0x00\n    /* \"#utility.yul\":10448:10457   */\n  dup4\n    /* \"#utility.yul\":10444:10461   */\n  add\n    /* \"#utility.yul\":10435:10441   */\n  dup9\n    /* \"#utility.yul\":10391:10462   */\n  tag_107\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":10472:10544   */\n  tag_241\n    /* \"#utility.yul\":10540:10542   */\n  0x20\n    /* \"#utility.yul\":10529:10538   */\n  dup4\n    /* \"#utility.yul\":10525:10543   */\n  add\n    /* \"#utility.yul\":10516:10522   */\n  dup8\n    /* \"#utility.yul\":10472:10544   */\n  tag_107\n  jump\t// in\ntag_241:\n    /* \"#utility.yul\":10554:10626   */\n  tag_242\n    /* \"#utility.yul\":10622:10624   */\n  0x40\n    /* \"#utility.yul\":10611:10620   */\n  dup4\n    /* \"#utility.yul\":10607:10625   */\n  add\n    /* \"#utility.yul\":10598:10604   */\n  dup7\n    /* \"#utility.yul\":10554:10626   */\n  tag_107\n  jump\t// in\ntag_242:\n    /* \"#utility.yul\":10636:10708   */\n  tag_243\n    /* \"#utility.yul\":10704:10706   */\n  0x60\n    /* \"#utility.yul\":10693:10702   */\n  dup4\n    /* \"#utility.yul\":10689:10707   */\n  add\n    /* \"#utility.yul\":10680:10686   */\n  dup6\n    /* \"#utility.yul\":10636:10708   */\n  tag_108\n  jump\t// in\ntag_243:\n    /* \"#utility.yul\":10718:10791   */\n  tag_244\n    /* \"#utility.yul\":10786:10789   */\n  0x80\n    /* \"#utility.yul\":10775:10784   */\n  dup4\n    /* \"#utility.yul\":10771:10790   */\n  add\n    /* \"#utility.yul\":10762:10768   */\n  dup5\n    /* \"#utility.yul\":10718:10791   */\n  tag_100\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":10134:10798   */\n  swap7\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10804:10973   */\ntag_109:\n    /* \"#utility.yul\":10888:10899   */\n  0x00\n    /* \"#utility.yul\":10922:10928   */\n  dup3\n    /* \"#utility.yul\":10917:10920   */\n  dup3\n    /* \"#utility.yul\":10910:10929   */\n  mstore\n    /* \"#utility.yul\":10962:10966   */\n  0x20\n    /* \"#utility.yul\":10957:10960   */\n  dup3\n    /* \"#utility.yul\":10953:10967   */\n  add\n    /* \"#utility.yul\":10938:10967   */\n  swap1\n  pop\n    /* \"#utility.yul\":10804:10973   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10979:11225   */\ntag_110:\n    /* \"#utility.yul\":11060:11061   */\n  0x00\n    /* \"#utility.yul\":11070:11183   */\ntag_247:\n    /* \"#utility.yul\":11084:11090   */\n  dup4\n    /* \"#utility.yul\":11081:11082   */\n  dup2\n    /* \"#utility.yul\":11078:11091   */\n  lt\n    /* \"#utility.yul\":11070:11183   */\n  iszero\n  tag_249\n  jumpi\n    /* \"#utility.yul\":11169:11170   */\n  dup1\n    /* \"#utility.yul\":11164:11167   */\n  dup3\n    /* \"#utility.yul\":11160:11171   */\n  add\n    /* \"#utility.yul\":11154:11172   */\n  mload\n    /* \"#utility.yul\":11150:11151   */\n  dup2\n    /* \"#utility.yul\":11145:11148   */\n  dup5\n    /* \"#utility.yul\":11141:11152   */\n  add\n    /* \"#utility.yul\":11134:11173   */\n  mstore\n    /* \"#utility.yul\":11106:11108   */\n  0x20\n    /* \"#utility.yul\":11103:11104   */\n  dup2\n    /* \"#utility.yul\":11099:11109   */\n  add\n    /* \"#utility.yul\":11094:11109   */\n  swap1\n  pop\n    /* \"#utility.yul\":11070:11183   */\n  jump(tag_247)\ntag_249:\n    /* \"#utility.yul\":11217:11218   */\n  0x00\n    /* \"#utility.yul\":11208:11214   */\n  dup5\n    /* \"#utility.yul\":11203:11206   */\n  dup5\n    /* \"#utility.yul\":11199:11215   */\n  add\n    /* \"#utility.yul\":11192:11219   */\n  mstore\n    /* \"#utility.yul\":11041:11225   */\n  pop\n    /* \"#utility.yul\":10979:11225   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11231:11333   */\ntag_111:\n    /* \"#utility.yul\":11272:11278   */\n  0x00\n    /* \"#utility.yul\":11323:11325   */\n  0x1f\n    /* \"#utility.yul\":11319:11326   */\n  not\n    /* \"#utility.yul\":11314:11316   */\n  0x1f\n    /* \"#utility.yul\":11307:11312   */\n  dup4\n    /* \"#utility.yul\":11303:11317   */\n  add\n    /* \"#utility.yul\":11299:11327   */\n  and\n    /* \"#utility.yul\":11289:11327   */\n  swap1\n  pop\n    /* \"#utility.yul\":11231:11333   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11339:11716   */\ntag_112:\n    /* \"#utility.yul\":11427:11430   */\n  0x00\n    /* \"#utility.yul\":11455:11494   */\n  tag_252\n    /* \"#utility.yul\":11488:11493   */\n  dup3\n    /* \"#utility.yul\":11455:11494   */\n  tag_80\n  jump\t// in\ntag_252:\n    /* \"#utility.yul\":11510:11581   */\n  tag_253\n    /* \"#utility.yul\":11574:11580   */\n  dup2\n    /* \"#utility.yul\":11569:11572   */\n  dup6\n    /* \"#utility.yul\":11510:11581   */\n  tag_109\n  jump\t// in\ntag_253:\n    /* \"#utility.yul\":11503:11581   */\n  swap4\n  pop\n    /* \"#utility.yul\":11590:11655   */\n  tag_254\n    /* \"#utility.yul\":11648:11654   */\n  dup2\n    /* \"#utility.yul\":11643:11646   */\n  dup6\n    /* \"#utility.yul\":11636:11640   */\n  0x20\n    /* \"#utility.yul\":11629:11634   */\n  dup7\n    /* \"#utility.yul\":11625:11641   */\n  add\n    /* \"#utility.yul\":11590:11655   */\n  tag_110\n  jump\t// in\ntag_254:\n    /* \"#utility.yul\":11680:11709   */\n  tag_255\n    /* \"#utility.yul\":11702:11708   */\n  dup2\n    /* \"#utility.yul\":11680:11709   */\n  tag_111\n  jump\t// in\ntag_255:\n    /* \"#utility.yul\":11675:11678   */\n  dup5\n    /* \"#utility.yul\":11671:11710   */\n  add\n    /* \"#utility.yul\":11664:11710   */\n  swap2\n  pop\n    /* \"#utility.yul\":11431:11716   */\n  pop\n    /* \"#utility.yul\":11339:11716   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11722:12035   */\ntag_57:\n    /* \"#utility.yul\":11835:11839   */\n  0x00\n    /* \"#utility.yul\":11873:11875   */\n  0x20\n    /* \"#utility.yul\":11862:11871   */\n  dup3\n    /* \"#utility.yul\":11858:11876   */\n  add\n    /* \"#utility.yul\":11850:11876   */\n  swap1\n  pop\n    /* \"#utility.yul\":11922:11931   */\n  dup2\n    /* \"#utility.yul\":11916:11920   */\n  dup2\n    /* \"#utility.yul\":11912:11932   */\n  sub\n    /* \"#utility.yul\":11908:11909   */\n  0x00\n    /* \"#utility.yul\":11897:11906   */\n  dup4\n    /* \"#utility.yul\":11893:11910   */\n  add\n    /* \"#utility.yul\":11886:11933   */\n  mstore\n    /* \"#utility.yul\":11950:12028   */\n  tag_257\n    /* \"#utility.yul\":12023:12027   */\n  dup2\n    /* \"#utility.yul\":12014:12020   */\n  dup5\n    /* \"#utility.yul\":11950:12028   */\n  tag_112\n  jump\t// in\ntag_257:\n    /* \"#utility.yul\":11942:12028   */\n  swap1\n  pop\n    /* \"#utility.yul\":11722:12035   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12041:12139   */\ntag_113:\n    /* \"#utility.yul\":12092:12098   */\n  0x00\n    /* \"#utility.yul\":12126:12131   */\n  dup2\n    /* \"#utility.yul\":12120:12132   */\n  mload\n    /* \"#utility.yul\":12110:12132   */\n  swap1\n  pop\n    /* \"#utility.yul\":12041:12139   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12145:12261   */\ntag_114:\n    /* \"#utility.yul\":12196:12200   */\n  0x00\n    /* \"#utility.yul\":12219:12222   */\n  dup2\n    /* \"#utility.yul\":12211:12222   */\n  swap1\n  pop\n    /* \"#utility.yul\":12249:12253   */\n  0x20\n    /* \"#utility.yul\":12244:12247   */\n  dup3\n    /* \"#utility.yul\":12240:12254   */\n  add\n    /* \"#utility.yul\":12232:12254   */\n  swap1\n  pop\n    /* \"#utility.yul\":12145:12261   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12267:12421   */\ntag_115:\n    /* \"#utility.yul\":12310:12321   */\n  0x00\n    /* \"#utility.yul\":12346:12375   */\n  tag_261\n    /* \"#utility.yul\":12370:12373   */\n  dup3\n    /* \"#utility.yul\":12364:12374   */\n  mload\n    /* \"#utility.yul\":12346:12375   */\n  tag_106\n  jump\t// in\ntag_261:\n    /* \"#utility.yul\":12409:12414   */\n  dup1\n    /* \"#utility.yul\":12385:12414   */\n  swap2\n  pop\n    /* \"#utility.yul\":12322:12421   */\n  pop\n    /* \"#utility.yul\":12267:12421   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12427:13021   */\ntag_59:\n    /* \"#utility.yul\":12511:12516   */\n  0x00\n    /* \"#utility.yul\":12542:12580   */\n  tag_263\n    /* \"#utility.yul\":12574:12579   */\n  dup3\n    /* \"#utility.yul\":12542:12580   */\n  tag_113\n  jump\t// in\ntag_263:\n    /* \"#utility.yul\":12605:12610   */\n  dup3\n    /* \"#utility.yul\":12632:12672   */\n  tag_264\n    /* \"#utility.yul\":12666:12671   */\n  dup5\n    /* \"#utility.yul\":12632:12672   */\n  tag_114\n  jump\t// in\ntag_264:\n    /* \"#utility.yul\":12620:12672   */\n  swap1\n  pop\n    /* \"#utility.yul\":12691:12726   */\n  tag_265\n    /* \"#utility.yul\":12717:12725   */\n  dup2\n    /* \"#utility.yul\":12691:12726   */\n  tag_115\n  jump\t// in\ntag_265:\n    /* \"#utility.yul\":12682:12726   */\n  swap3\n  pop\n    /* \"#utility.yul\":12750:12752   */\n  0x20\n    /* \"#utility.yul\":12742:12748   */\n  dup3\n    /* \"#utility.yul\":12739:12753   */\n  lt\n    /* \"#utility.yul\":12736:13014   */\n  iszero\n  tag_266\n  jumpi\n    /* \"#utility.yul\":12821:12990   */\n  tag_267\n    /* \"#utility.yul\":12906:12972   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":12876:12882   */\n  dup4\n    /* \"#utility.yul\":12872:12874   */\n  0x20\n    /* \"#utility.yul\":12868:12883   */\n  sub\n    /* \"#utility.yul\":12865:12866   */\n  0x08\n    /* \"#utility.yul\":12861:12884   */\n  mul\n    /* \"#utility.yul\":12821:12990   */\n  tag_86\n  jump\t// in\ntag_267:\n    /* \"#utility.yul\":12798:12803   */\n  dup4\n    /* \"#utility.yul\":12777:13004   */\n  and\n    /* \"#utility.yul\":12768:13004   */\n  swap3\n  pop\n    /* \"#utility.yul\":12736:13014   */\ntag_266:\n    /* \"#utility.yul\":12517:13021   */\n  pop\n  pop\n    /* \"#utility.yul\":12427:13021   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13027:13218   */\ntag_64:\n    /* \"#utility.yul\":13067:13070   */\n  0x00\n    /* \"#utility.yul\":13086:13106   */\n  tag_269\n    /* \"#utility.yul\":13104:13105   */\n  dup3\n    /* \"#utility.yul\":13086:13106   */\n  tag_88\n  jump\t// in\ntag_269:\n    /* \"#utility.yul\":13081:13106   */\n  swap2\n  pop\n    /* \"#utility.yul\":13120:13140   */\n  tag_270\n    /* \"#utility.yul\":13138:13139   */\n  dup4\n    /* \"#utility.yul\":13120:13140   */\n  tag_88\n  jump\t// in\ntag_270:\n    /* \"#utility.yul\":13115:13140   */\n  swap3\n  pop\n    /* \"#utility.yul\":13163:13164   */\n  dup3\n    /* \"#utility.yul\":13160:13161   */\n  dup3\n    /* \"#utility.yul\":13156:13165   */\n  add\n    /* \"#utility.yul\":13149:13165   */\n  swap1\n  pop\n    /* \"#utility.yul\":13184:13187   */\n  dup1\n    /* \"#utility.yul\":13181:13182   */\n  dup3\n    /* \"#utility.yul\":13178:13188   */\n  gt\n    /* \"#utility.yul\":13175:13211   */\n  iszero\n  tag_271\n  jumpi\n    /* \"#utility.yul\":13191:13209   */\n  tag_272\n  tag_101\n  jump\t// in\ntag_272:\n    /* \"#utility.yul\":13175:13211   */\ntag_271:\n    /* \"#utility.yul\":13027:13218   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13224:13666   */\ntag_68:\n    /* \"#utility.yul\":13373:13377   */\n  0x00\n    /* \"#utility.yul\":13411:13413   */\n  0x60\n    /* \"#utility.yul\":13400:13409   */\n  dup3\n    /* \"#utility.yul\":13396:13414   */\n  add\n    /* \"#utility.yul\":13388:13414   */\n  swap1\n  pop\n    /* \"#utility.yul\":13424:13495   */\n  tag_274\n    /* \"#utility.yul\":13492:13493   */\n  0x00\n    /* \"#utility.yul\":13481:13490   */\n  dup4\n    /* \"#utility.yul\":13477:13494   */\n  add\n    /* \"#utility.yul\":13468:13474   */\n  dup7\n    /* \"#utility.yul\":13424:13495   */\n  tag_100\n  jump\t// in\ntag_274:\n    /* \"#utility.yul\":13505:13577   */\n  tag_275\n    /* \"#utility.yul\":13573:13575   */\n  0x20\n    /* \"#utility.yul\":13562:13571   */\n  dup4\n    /* \"#utility.yul\":13558:13576   */\n  add\n    /* \"#utility.yul\":13549:13555   */\n  dup6\n    /* \"#utility.yul\":13505:13577   */\n  tag_108\n  jump\t// in\ntag_275:\n    /* \"#utility.yul\":13587:13659   */\n  tag_276\n    /* \"#utility.yul\":13655:13657   */\n  0x40\n    /* \"#utility.yul\":13644:13653   */\n  dup4\n    /* \"#utility.yul\":13640:13658   */\n  add\n    /* \"#utility.yul\":13631:13637   */\n  dup5\n    /* \"#utility.yul\":13587:13659   */\n  tag_108\n  jump\t// in\ntag_276:\n    /* \"#utility.yul\":13224:13666   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13672:13894   */\ntag_72:\n    /* \"#utility.yul\":13765:13769   */\n  0x00\n    /* \"#utility.yul\":13803:13805   */\n  0x20\n    /* \"#utility.yul\":13792:13801   */\n  dup3\n    /* \"#utility.yul\":13788:13806   */\n  add\n    /* \"#utility.yul\":13780:13806   */\n  swap1\n  pop\n    /* \"#utility.yul\":13816:13887   */\n  tag_278\n    /* \"#utility.yul\":13884:13885   */\n  0x00\n    /* \"#utility.yul\":13873:13882   */\n  dup4\n    /* \"#utility.yul\":13869:13886   */\n  add\n    /* \"#utility.yul\":13860:13866   */\n  dup5\n    /* \"#utility.yul\":13816:13887   */\n  tag_108\n  jump\t// in\ntag_278:\n    /* \"#utility.yul\":13672:13894   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Token_RY_flattened.sol\":79653:79991  contract Reyes is ERC20, Ownable, ERC20Permit {... */\ntag_35:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x6a27fd8b4e034345f821626e478d5e1624295ad016c351a1e0a3d60e930e4e52\")\n  0x00\n  assignImmutable(\"0x94a6815ac3f39ee0f691137327eba74e351a039ac093f36725d81460ae04f412\")\n  0x00\n  assignImmutable(\"0x957b8855a729b67dc028ca49cb97b10aca21a5ff5ddcb5f61d4444c005a9b1c2\")\n  0x00\n  assignImmutable(\"0xd7540fe9b6cfec114ef69b9a5e37f0df0cc41a7a00237e8b74bf5a92c0da8102\")\n  0x00\n  assignImmutable(\"0xa19d718480110222d22b6d2951f2fd7e402bb541199804c801e8efc2019fa5ca\")\n  0x00\n  assignImmutable(\"0x8e6edc2e6718e67f653228e7ef9c7cb13217a05d4dce88c9b22917701f7f0736\")\n  0x00\n  assignImmutable(\"0xccfc0c959b119ee28d407ea161eaeb170333879869a337b808d1b575d1b25cde\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"Token_RY_flattened.sol\":79653:79991  contract Reyes is ERC20, Ownable, ERC20Permit {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x84b0196e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x313ce567\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Token_RY_flattened.sol\":12965:13054  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token_RY_flattened.sol\":15184:15370  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token_RY_flattened.sol\":14035:14132  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token_RY_flattened.sol\":15930:16174  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token_RY_flattened.sol\":13893:13975  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token_RY_flattened.sol\":79394:79506  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_8:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token_RY_flattened.sol\":79896:79989  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"Token_RY_flattened.sol\":14190:14306  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token_RY_flattened.sol\":24304:24405  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      stop\n        /* \"Token_RY_flattened.sol\":79144:79287  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_12:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token_RY_flattened.sol\":73972:74529  function eip712Domain()... */\n    tag_13:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token_RY_flattened.sol\":23649:23734  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token_RY_flattened.sol\":13167:13260  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token_RY_flattened.sol\":14501:14679  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token_RY_flattened.sol\":78418:79090  function permit(... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"Token_RY_flattened.sol\":14737:14877  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token_RY_flattened.sol\":24554:24769  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"Token_RY_flattened.sol\":12965:13054  function name() public view virtual returns (string memory) {... */\n    tag_24:\n        /* \"Token_RY_flattened.sol\":13010:13023  string memory */\n      0x60\n        /* \"Token_RY_flattened.sol\":13042:13047  _name */\n      0x03\n        /* \"Token_RY_flattened.sol\":13035:13047  return _name */\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_94\n      swap1\n      tag_93\n      jump\t// in\n    tag_94:\n      dup1\n      iszero\n      tag_95\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_96\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_95)\n    tag_96:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_97:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_97\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":12965:13054  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":15184:15370  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"Token_RY_flattened.sol\":15257:15261  bool */\n      0x00\n        /* \"Token_RY_flattened.sol\":15273:15286  address owner */\n      dup1\n        /* \"Token_RY_flattened.sol\":15289:15301  _msgSender() */\n      tag_99\n        /* \"Token_RY_flattened.sol\":15289:15299  _msgSender */\n      tag_100\n        /* \"Token_RY_flattened.sol\":15289:15301  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"Token_RY_flattened.sol\":15273:15301  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":15311:15342  _approve(owner, spender, value) */\n      tag_101\n        /* \"Token_RY_flattened.sol\":15320:15325  owner */\n      dup2\n        /* \"Token_RY_flattened.sol\":15327:15334  spender */\n      dup6\n        /* \"Token_RY_flattened.sol\":15336:15341  value */\n      dup6\n        /* \"Token_RY_flattened.sol\":15311:15319  _approve */\n      tag_102\n        /* \"Token_RY_flattened.sol\":15311:15342  _approve(owner, spender, value) */\n      jump\t// in\n    tag_101:\n        /* \"Token_RY_flattened.sol\":15359:15363  true */\n      0x01\n        /* \"Token_RY_flattened.sol\":15352:15363  return true */\n      swap2\n      pop\n      pop\n        /* \"Token_RY_flattened.sol\":15184:15370  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":14035:14132  function totalSupply() public view virtual returns (uint256) {... */\n    tag_34:\n        /* \"Token_RY_flattened.sol\":14087:14094  uint256 */\n      0x00\n        /* \"Token_RY_flattened.sol\":14113:14125  _totalSupply */\n      sload(0x02)\n        /* \"Token_RY_flattened.sol\":14106:14125  return _totalSupply */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":14035:14132  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":15930:16174  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_40:\n        /* \"Token_RY_flattened.sol\":16017:16021  bool */\n      0x00\n        /* \"Token_RY_flattened.sol\":16033:16048  address spender */\n      dup1\n        /* \"Token_RY_flattened.sol\":16051:16063  _msgSender() */\n      tag_105\n        /* \"Token_RY_flattened.sol\":16051:16061  _msgSender */\n      tag_100\n        /* \"Token_RY_flattened.sol\":16051:16063  _msgSender() */\n      jump\t// in\n    tag_105:\n        /* \"Token_RY_flattened.sol\":16033:16063  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":16073:16110  _spendAllowance(from, spender, value) */\n      tag_106\n        /* \"Token_RY_flattened.sol\":16089:16093  from */\n      dup6\n        /* \"Token_RY_flattened.sol\":16095:16102  spender */\n      dup3\n        /* \"Token_RY_flattened.sol\":16104:16109  value */\n      dup6\n        /* \"Token_RY_flattened.sol\":16073:16088  _spendAllowance */\n      tag_107\n        /* \"Token_RY_flattened.sol\":16073:16110  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_106:\n        /* \"Token_RY_flattened.sol\":16120:16146  _transfer(from, to, value) */\n      tag_108\n        /* \"Token_RY_flattened.sol\":16130:16134  from */\n      dup6\n        /* \"Token_RY_flattened.sol\":16136:16138  to */\n      dup6\n        /* \"Token_RY_flattened.sol\":16140:16145  value */\n      dup6\n        /* \"Token_RY_flattened.sol\":16120:16129  _transfer */\n      tag_109\n        /* \"Token_RY_flattened.sol\":16120:16146  _transfer(from, to, value) */\n      jump\t// in\n    tag_108:\n        /* \"Token_RY_flattened.sol\":16163:16167  true */\n      0x01\n        /* \"Token_RY_flattened.sol\":16156:16167  return true */\n      swap2\n      pop\n      pop\n        /* \"Token_RY_flattened.sol\":15930:16174  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":13893:13975  function decimals() public view virtual returns (uint8) {... */\n    tag_43:\n        /* \"Token_RY_flattened.sol\":13942:13947  uint8 */\n      0x00\n        /* \"Token_RY_flattened.sol\":13966:13968  18 */\n      0x12\n        /* \"Token_RY_flattened.sol\":13959:13968  return 18 */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":13893:13975  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":79394:79506  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_47:\n        /* \"Token_RY_flattened.sol\":79453:79460  bytes32 */\n      0x00\n        /* \"Token_RY_flattened.sol\":79479:79499  _domainSeparatorV4() */\n      tag_112\n        /* \"Token_RY_flattened.sol\":79479:79497  _domainSeparatorV4 */\n      tag_113\n        /* \"Token_RY_flattened.sol\":79479:79499  _domainSeparatorV4() */\n      jump\t// in\n    tag_112:\n        /* \"Token_RY_flattened.sol\":79472:79499  return _domainSeparatorV4() */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":79394:79506  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":79896:79989  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_52:\n        /* \"Token_RY_flattened.sol\":23542:23555  _checkOwner() */\n      tag_115\n        /* \"Token_RY_flattened.sol\":23542:23553  _checkOwner */\n      tag_116\n        /* \"Token_RY_flattened.sol\":23542:23555  _checkOwner() */\n      jump\t// in\n    tag_115:\n        /* \"Token_RY_flattened.sol\":79965:79982  _mint(to, amount) */\n      tag_118\n        /* \"Token_RY_flattened.sol\":79971:79973  to */\n      dup3\n        /* \"Token_RY_flattened.sol\":79975:79981  amount */\n      dup3\n        /* \"Token_RY_flattened.sol\":79965:79970  _mint */\n      tag_119\n        /* \"Token_RY_flattened.sol\":79965:79982  _mint(to, amount) */\n      jump\t// in\n    tag_118:\n        /* \"Token_RY_flattened.sol\":79896:79989  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":14190:14306  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_56:\n        /* \"Token_RY_flattened.sol\":14255:14262  uint256 */\n      0x00\n        /* \"Token_RY_flattened.sol\":14281:14290  _balances */\n      dup1\n        /* \"Token_RY_flattened.sol\":14281:14299  _balances[account] */\n      0x00\n        /* \"Token_RY_flattened.sol\":14291:14298  account */\n      dup4\n        /* \"Token_RY_flattened.sol\":14281:14299  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Token_RY_flattened.sol\":14274:14299  return _balances[account] */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":14190:14306  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":24304:24405  function renounceOwnership() public virtual onlyOwner {... */\n    tag_59:\n        /* \"Token_RY_flattened.sol\":23542:23555  _checkOwner() */\n      tag_122\n        /* \"Token_RY_flattened.sol\":23542:23553  _checkOwner */\n      tag_116\n        /* \"Token_RY_flattened.sol\":23542:23555  _checkOwner() */\n      jump\t// in\n    tag_122:\n        /* \"Token_RY_flattened.sol\":24368:24398  _transferOwnership(address(0)) */\n      tag_124\n        /* \"Token_RY_flattened.sol\":24395:24396  0 */\n      0x00\n        /* \"Token_RY_flattened.sol\":24368:24386  _transferOwnership */\n      tag_125\n        /* \"Token_RY_flattened.sol\":24368:24398  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_124:\n        /* \"Token_RY_flattened.sol\":24304:24405  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":79144:79287  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_62:\n        /* \"Token_RY_flattened.sol\":79235:79242  uint256 */\n      0x00\n        /* \"Token_RY_flattened.sol\":79261:79280  super.nonces(owner) */\n      tag_127\n        /* \"Token_RY_flattened.sol\":79274:79279  owner */\n      dup3\n        /* \"Token_RY_flattened.sol\":79261:79273  super.nonces */\n      tag_128\n        /* \"Token_RY_flattened.sol\":79261:79280  super.nonces(owner) */\n      jump\t// in\n    tag_127:\n        /* \"Token_RY_flattened.sol\":79254:79280  return super.nonces(owner) */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":79144:79287  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":73972:74529  function eip712Domain()... */\n    tag_65:\n        /* \"Token_RY_flattened.sol\":74070:74083  bytes1 fields */\n      0x00\n        /* \"Token_RY_flattened.sol\":74097:74115  string memory name */\n      0x60\n        /* \"Token_RY_flattened.sol\":74129:74150  string memory version */\n      dup1\n        /* \"Token_RY_flattened.sol\":74164:74179  uint256 chainId */\n      0x00\n        /* \"Token_RY_flattened.sol\":74193:74218  address verifyingContract */\n      dup1\n        /* \"Token_RY_flattened.sol\":74232:74244  bytes32 salt */\n      0x00\n        /* \"Token_RY_flattened.sol\":74258:74285  uint256[] memory extensions */\n      0x60\n        /* \"Token_RY_flattened.sol\":74361:74374  _EIP712Name() */\n      tag_130\n        /* \"Token_RY_flattened.sol\":74361:74372  _EIP712Name */\n      tag_131\n        /* \"Token_RY_flattened.sol\":74361:74374  _EIP712Name() */\n      jump\t// in\n    tag_130:\n        /* \"Token_RY_flattened.sol\":74388:74404  _EIP712Version() */\n      tag_132\n        /* \"Token_RY_flattened.sol\":74388:74402  _EIP712Version */\n      tag_133\n        /* \"Token_RY_flattened.sol\":74388:74404  _EIP712Version() */\n      jump\t// in\n    tag_132:\n        /* \"Token_RY_flattened.sol\":74418:74431  block.chainid */\n      chainid\n        /* \"Token_RY_flattened.sol\":74453:74457  this */\n      address\n        /* \"Token_RY_flattened.sol\":74480:74481  0 */\n      0x00\n        /* \"Token_RY_flattened.sol\":74472:74482  bytes32(0) */\n      dup1\n      shl\n        /* \"Token_RY_flattened.sol\":74510:74511  0 */\n      0x00\n        /* \"Token_RY_flattened.sol\":74496:74512  new uint256[](0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_134\n      jumpi\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n    tag_134:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_137\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_137:\n      pop\n        /* \"Token_RY_flattened.sol\":74310:74522  return (... */\n      0x0f00000000000000000000000000000000000000000000000000000000000000\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n        /* \"Token_RY_flattened.sol\":73972:74529  function eip712Domain()... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":23649:23734  function owner() public view virtual returns (address) {... */\n    tag_69:\n        /* \"Token_RY_flattened.sol\":23695:23702  address */\n      0x00\n        /* \"Token_RY_flattened.sol\":23721:23727  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token_RY_flattened.sol\":23714:23727  return _owner */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":23649:23734  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":13167:13260  function symbol() public view virtual returns (string memory) {... */\n    tag_73:\n        /* \"Token_RY_flattened.sol\":13214:13227  string memory */\n      0x60\n        /* \"Token_RY_flattened.sol\":13246:13253  _symbol */\n      0x04\n        /* \"Token_RY_flattened.sol\":13239:13253  return _symbol */\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_93\n      jump\t// in\n    tag_140:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_141\n      swap1\n      tag_93\n      jump\t// in\n    tag_141:\n      dup1\n      iszero\n      tag_142\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_143\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_142)\n    tag_143:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_144:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_144\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_142:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":13167:13260  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":14501:14679  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_77:\n        /* \"Token_RY_flattened.sol\":14570:14574  bool */\n      0x00\n        /* \"Token_RY_flattened.sol\":14586:14599  address owner */\n      dup1\n        /* \"Token_RY_flattened.sol\":14602:14614  _msgSender() */\n      tag_146\n        /* \"Token_RY_flattened.sol\":14602:14612  _msgSender */\n      tag_100\n        /* \"Token_RY_flattened.sol\":14602:14614  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"Token_RY_flattened.sol\":14586:14614  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":14624:14651  _transfer(owner, to, value) */\n      tag_147\n        /* \"Token_RY_flattened.sol\":14634:14639  owner */\n      dup2\n        /* \"Token_RY_flattened.sol\":14641:14643  to */\n      dup6\n        /* \"Token_RY_flattened.sol\":14645:14650  value */\n      dup6\n        /* \"Token_RY_flattened.sol\":14624:14633  _transfer */\n      tag_109\n        /* \"Token_RY_flattened.sol\":14624:14651  _transfer(owner, to, value) */\n      jump\t// in\n    tag_147:\n        /* \"Token_RY_flattened.sol\":14668:14672  true */\n      0x01\n        /* \"Token_RY_flattened.sol\":14661:14672  return true */\n      swap2\n      pop\n      pop\n        /* \"Token_RY_flattened.sol\":14501:14679  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":78418:79090  function permit(... */\n    tag_82:\n        /* \"Token_RY_flattened.sol\":78639:78647  deadline */\n      dup4\n        /* \"Token_RY_flattened.sol\":78621:78636  block.timestamp */\n      timestamp\n        /* \"Token_RY_flattened.sol\":78621:78647  block.timestamp > deadline */\n      gt\n        /* \"Token_RY_flattened.sol\":78617:78714  if (block.timestamp > deadline) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"Token_RY_flattened.sol\":78694:78702  deadline */\n      dup4\n        /* \"Token_RY_flattened.sol\":78670:78703  ERC2612ExpiredSignature(deadline) */\n      mload(0x40)\n      0x6279130200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Token_RY_flattened.sol\":78617:78714  if (block.timestamp > deadline) {... */\n    tag_149:\n        /* \"Token_RY_flattened.sol\":78724:78742  bytes32 structHash */\n      0x00\n        /* \"Token_RY_flattened.sol\":77760:77855  keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"Token_RY_flattened.sol\":78783:78788  owner */\n      dup9\n        /* \"Token_RY_flattened.sol\":78790:78797  spender */\n      dup9\n        /* \"Token_RY_flattened.sol\":78799:78804  value */\n      dup9\n        /* \"Token_RY_flattened.sol\":78806:78822  _useNonce(owner) */\n      tag_151\n        /* \"Token_RY_flattened.sol\":78816:78821  owner */\n      dup13\n        /* \"Token_RY_flattened.sol\":78806:78815  _useNonce */\n      tag_152\n        /* \"Token_RY_flattened.sol\":78806:78822  _useNonce(owner) */\n      jump\t// in\n    tag_151:\n        /* \"Token_RY_flattened.sol\":78824:78832  deadline */\n      dup10\n        /* \"Token_RY_flattened.sol\":78755:78833  abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */\n      add(0x20, mload(0x40))\n      tag_153\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Token_RY_flattened.sol\":78745:78834  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Token_RY_flattened.sol\":78724:78834  bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":78845:78857  bytes32 hash */\n      0x00\n        /* \"Token_RY_flattened.sol\":78860:78888  _hashTypedDataV4(structHash) */\n      tag_155\n        /* \"Token_RY_flattened.sol\":78877:78887  structHash */\n      dup3\n        /* \"Token_RY_flattened.sol\":78860:78876  _hashTypedDataV4 */\n      tag_156\n        /* \"Token_RY_flattened.sol\":78860:78888  _hashTypedDataV4(structHash) */\n      jump\t// in\n    tag_155:\n        /* \"Token_RY_flattened.sol\":78845:78888  bytes32 hash = _hashTypedDataV4(structHash) */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":78899:78913  address signer */\n      0x00\n        /* \"Token_RY_flattened.sol\":78916:78944  ECDSA.recover(hash, v, r, s) */\n      tag_157\n        /* \"Token_RY_flattened.sol\":78930:78934  hash */\n      dup3\n        /* \"Token_RY_flattened.sol\":78936:78937  v */\n      dup8\n        /* \"Token_RY_flattened.sol\":78939:78940  r */\n      dup8\n        /* \"Token_RY_flattened.sol\":78942:78943  s */\n      dup8\n        /* \"Token_RY_flattened.sol\":78916:78929  ECDSA.recover */\n      tag_158\n        /* \"Token_RY_flattened.sol\":78916:78944  ECDSA.recover(hash, v, r, s) */\n      jump\t// in\n    tag_157:\n        /* \"Token_RY_flattened.sol\":78899:78944  address signer = ECDSA.recover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":78968:78973  owner */\n      dup10\n        /* \"Token_RY_flattened.sol\":78958:78973  signer != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token_RY_flattened.sol\":78958:78964  signer */\n      dup2\n        /* \"Token_RY_flattened.sol\":78958:78973  signer != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Token_RY_flattened.sol\":78954:79042  if (signer != owner) {... */\n      tag_159\n      jumpi\n        /* \"Token_RY_flattened.sol\":79017:79023  signer */\n      dup1\n        /* \"Token_RY_flattened.sol\":79025:79030  owner */\n      dup11\n        /* \"Token_RY_flattened.sol\":78996:79031  ERC2612InvalidSigner(signer, owner) */\n      mload(0x40)\n      0x4b800e4600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap3\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Token_RY_flattened.sol\":78954:79042  if (signer != owner) {... */\n    tag_159:\n        /* \"Token_RY_flattened.sol\":79052:79083  _approve(owner, spender, value) */\n      tag_162\n        /* \"Token_RY_flattened.sol\":79061:79066  owner */\n      dup11\n        /* \"Token_RY_flattened.sol\":79068:79075  spender */\n      dup11\n        /* \"Token_RY_flattened.sol\":79077:79082  value */\n      dup11\n        /* \"Token_RY_flattened.sol\":79052:79060  _approve */\n      tag_102\n        /* \"Token_RY_flattened.sol\":79052:79083  _approve(owner, spender, value) */\n      jump\t// in\n    tag_162:\n        /* \"Token_RY_flattened.sol\":78607:79090  {... */\n      pop\n      pop\n      pop\n        /* \"Token_RY_flattened.sol\":78418:79090  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":14737:14877  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_86:\n        /* \"Token_RY_flattened.sol\":14817:14824  uint256 */\n      0x00\n        /* \"Token_RY_flattened.sol\":14843:14854  _allowances */\n      0x01\n        /* \"Token_RY_flattened.sol\":14843:14861  _allowances[owner] */\n      0x00\n        /* \"Token_RY_flattened.sol\":14855:14860  owner */\n      dup5\n        /* \"Token_RY_flattened.sol\":14843:14861  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Token_RY_flattened.sol\":14843:14870  _allowances[owner][spender] */\n      0x00\n        /* \"Token_RY_flattened.sol\":14862:14869  spender */\n      dup4\n        /* \"Token_RY_flattened.sol\":14843:14870  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Token_RY_flattened.sol\":14836:14870  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":14737:14877  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":24554:24769  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_90:\n        /* \"Token_RY_flattened.sol\":23542:23555  _checkOwner() */\n      tag_165\n        /* \"Token_RY_flattened.sol\":23542:23553  _checkOwner */\n      tag_116\n        /* \"Token_RY_flattened.sol\":23542:23555  _checkOwner() */\n      jump\t// in\n    tag_165:\n        /* \"Token_RY_flattened.sol\":24658:24659  0 */\n      0x00\n        /* \"Token_RY_flattened.sol\":24638:24660  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token_RY_flattened.sol\":24638:24646  newOwner */\n      dup2\n        /* \"Token_RY_flattened.sol\":24638:24660  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Token_RY_flattened.sol\":24634:24725  if (newOwner == address(0)) {... */\n      tag_167\n      jumpi\n        /* \"Token_RY_flattened.sol\":24711:24712  0 */\n      0x00\n        /* \"Token_RY_flattened.sol\":24683:24714  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Token_RY_flattened.sol\":24634:24725  if (newOwner == address(0)) {... */\n    tag_167:\n        /* \"Token_RY_flattened.sol\":24734:24762  _transferOwnership(newOwner) */\n      tag_169\n        /* \"Token_RY_flattened.sol\":24753:24761  newOwner */\n      dup2\n        /* \"Token_RY_flattened.sol\":24734:24752  _transferOwnership */\n      tag_125\n        /* \"Token_RY_flattened.sol\":24734:24762  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_169:\n        /* \"Token_RY_flattened.sol\":24554:24769  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":4205:4301  function _msgSender() internal view virtual returns (address) {... */\n    tag_100:\n        /* \"Token_RY_flattened.sol\":4258:4265  address */\n      0x00\n        /* \"Token_RY_flattened.sol\":4284:4294  msg.sender */\n      caller\n        /* \"Token_RY_flattened.sol\":4277:4294  return msg.sender */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":4205:4301  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":19880:20008  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_102:\n        /* \"Token_RY_flattened.sol\":19964:20001  _approve(owner, spender, value, true) */\n      tag_172\n        /* \"Token_RY_flattened.sol\":19973:19978  owner */\n      dup4\n        /* \"Token_RY_flattened.sol\":19980:19987  spender */\n      dup4\n        /* \"Token_RY_flattened.sol\":19989:19994  value */\n      dup4\n        /* \"Token_RY_flattened.sol\":19996:20000  true */\n      0x01\n        /* \"Token_RY_flattened.sol\":19964:19972  _approve */\n      tag_173\n        /* \"Token_RY_flattened.sol\":19964:20001  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_172:\n        /* \"Token_RY_flattened.sol\":19880:20008  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":21554:22031  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_107:\n        /* \"Token_RY_flattened.sol\":21653:21677  uint256 currentAllowance */\n      0x00\n        /* \"Token_RY_flattened.sol\":21680:21705  allowance(owner, spender) */\n      tag_175\n        /* \"Token_RY_flattened.sol\":21690:21695  owner */\n      dup5\n        /* \"Token_RY_flattened.sol\":21697:21704  spender */\n      dup5\n        /* \"Token_RY_flattened.sol\":21680:21689  allowance */\n      tag_86\n        /* \"Token_RY_flattened.sol\":21680:21705  allowance(owner, spender) */\n      jump\t// in\n    tag_175:\n        /* \"Token_RY_flattened.sol\":21653:21705  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":21739:21756  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Token_RY_flattened.sol\":21719:21735  currentAllowance */\n      dup2\n        /* \"Token_RY_flattened.sol\":21719:21756  currentAllowance != type(uint256).max */\n      eq\n        /* \"Token_RY_flattened.sol\":21715:22025  if (currentAllowance != type(uint256).max) {... */\n      tag_176\n      jumpi\n        /* \"Token_RY_flattened.sol\":21795:21800  value */\n      dup2\n        /* \"Token_RY_flattened.sol\":21776:21792  currentAllowance */\n      dup2\n        /* \"Token_RY_flattened.sol\":21776:21800  currentAllowance < value */\n      lt\n        /* \"Token_RY_flattened.sol\":21772:21902  if (currentAllowance < value) {... */\n      iszero\n      tag_177\n      jumpi\n        /* \"Token_RY_flattened.sol\":21854:21861  spender */\n      dup3\n        /* \"Token_RY_flattened.sol\":21863:21879  currentAllowance */\n      dup2\n        /* \"Token_RY_flattened.sol\":21881:21886  value */\n      dup4\n        /* \"Token_RY_flattened.sol\":21827:21887  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Token_RY_flattened.sol\":21772:21902  if (currentAllowance < value) {... */\n    tag_177:\n        /* \"Token_RY_flattened.sol\":21943:22000  _approve(owner, spender, currentAllowance - value, false) */\n      tag_180\n        /* \"Token_RY_flattened.sol\":21952:21957  owner */\n      dup5\n        /* \"Token_RY_flattened.sol\":21959:21966  spender */\n      dup5\n        /* \"Token_RY_flattened.sol\":21987:21992  value */\n      dup5\n        /* \"Token_RY_flattened.sol\":21968:21984  currentAllowance */\n      dup5\n        /* \"Token_RY_flattened.sol\":21968:21992  currentAllowance - value */\n      sub\n        /* \"Token_RY_flattened.sol\":21994:21999  false */\n      0x00\n        /* \"Token_RY_flattened.sol\":21943:21951  _approve */\n      tag_173\n        /* \"Token_RY_flattened.sol\":21943:22000  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_180:\n        /* \"Token_RY_flattened.sol\":21715:22025  if (currentAllowance != type(uint256).max) {... */\n    tag_176:\n        /* \"Token_RY_flattened.sol\":21643:22031  {... */\n      pop\n        /* \"Token_RY_flattened.sol\":21554:22031  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":16547:16847  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_109:\n        /* \"Token_RY_flattened.sol\":16646:16647  0 */\n      0x00\n        /* \"Token_RY_flattened.sol\":16630:16648  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token_RY_flattened.sol\":16630:16634  from */\n      dup4\n        /* \"Token_RY_flattened.sol\":16630:16648  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Token_RY_flattened.sol\":16626:16712  if (from == address(0)) {... */\n      tag_182\n      jumpi\n        /* \"Token_RY_flattened.sol\":16698:16699  0 */\n      0x00\n        /* \"Token_RY_flattened.sol\":16671:16701  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Token_RY_flattened.sol\":16626:16712  if (from == address(0)) {... */\n    tag_182:\n        /* \"Token_RY_flattened.sol\":16739:16740  0 */\n      0x00\n        /* \"Token_RY_flattened.sol\":16725:16741  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token_RY_flattened.sol\":16725:16727  to */\n      dup3\n        /* \"Token_RY_flattened.sol\":16725:16741  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Token_RY_flattened.sol\":16721:16807  if (to == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"Token_RY_flattened.sol\":16793:16794  0 */\n      0x00\n        /* \"Token_RY_flattened.sol\":16764:16796  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Token_RY_flattened.sol\":16721:16807  if (to == address(0)) {... */\n    tag_184:\n        /* \"Token_RY_flattened.sol\":16816:16840  _update(from, to, value) */\n      tag_186\n        /* \"Token_RY_flattened.sol\":16824:16828  from */\n      dup4\n        /* \"Token_RY_flattened.sol\":16830:16832  to */\n      dup4\n        /* \"Token_RY_flattened.sol\":16834:16839  value */\n      dup4\n        /* \"Token_RY_flattened.sol\":16816:16823  _update */\n      tag_187\n        /* \"Token_RY_flattened.sol\":16816:16840  _update(from, to, value) */\n      jump\t// in\n    tag_186:\n        /* \"Token_RY_flattened.sol\":16547:16847  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":72673:72935  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_113:\n        /* \"Token_RY_flattened.sol\":72726:72733  bytes32 */\n      0x00\n        /* \"Token_RY_flattened.sol\":72766:72777  _cachedThis */\n      immutable(\"0xa19d718480110222d22b6d2951f2fd7e402bb541199804c801e8efc2019fa5ca\")\n        /* \"Token_RY_flattened.sol\":72749:72777  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token_RY_flattened.sol\":72757:72761  this */\n      address\n        /* \"Token_RY_flattened.sol\":72749:72777  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Token_RY_flattened.sol\":72749:72812  address(this) == _cachedThis && block.chainid == _cachedChainId */\n      dup1\n      iszero\n      tag_189\n      jumpi\n      pop\n        /* \"Token_RY_flattened.sol\":72798:72812  _cachedChainId */\n      immutable(\"0x8e6edc2e6718e67f653228e7ef9c7cb13217a05d4dce88c9b22917701f7f0736\")\n        /* \"Token_RY_flattened.sol\":72781:72794  block.chainid */\n      chainid\n        /* \"Token_RY_flattened.sol\":72781:72812  block.chainid == _cachedChainId */\n      eq\n        /* \"Token_RY_flattened.sol\":72749:72812  address(this) == _cachedThis && block.chainid == _cachedChainId */\n    tag_189:\n        /* \"Token_RY_flattened.sol\":72745:72929  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n      iszero\n      tag_190\n      jumpi\n        /* \"Token_RY_flattened.sol\":72835:72857  _cachedDomainSeparator */\n      immutable(\"0xccfc0c959b119ee28d407ea161eaeb170333879869a337b808d1b575d1b25cde\")\n        /* \"Token_RY_flattened.sol\":72828:72857  return _cachedDomainSeparator */\n      swap1\n      pop\n      jump(tag_188)\n        /* \"Token_RY_flattened.sol\":72745:72929  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n    tag_190:\n        /* \"Token_RY_flattened.sol\":72895:72918  _buildDomainSeparator() */\n      tag_192\n        /* \"Token_RY_flattened.sol\":72895:72916  _buildDomainSeparator */\n      tag_193\n        /* \"Token_RY_flattened.sol\":72895:72918  _buildDomainSeparator() */\n      jump\t// in\n    tag_192:\n        /* \"Token_RY_flattened.sol\":72888:72918  return _buildDomainSeparator() */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":72673:72935  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_188:\n      swap1\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":23807:23969  function _checkOwner() internal view virtual {... */\n    tag_116:\n        /* \"Token_RY_flattened.sol\":23877:23889  _msgSender() */\n      tag_195\n        /* \"Token_RY_flattened.sol\":23877:23887  _msgSender */\n      tag_100\n        /* \"Token_RY_flattened.sol\":23877:23889  _msgSender() */\n      jump\t// in\n    tag_195:\n        /* \"Token_RY_flattened.sol\":23866:23889  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token_RY_flattened.sol\":23866:23873  owner() */\n      tag_196\n        /* \"Token_RY_flattened.sol\":23866:23871  owner */\n      tag_69\n        /* \"Token_RY_flattened.sol\":23866:23873  owner() */\n      jump\t// in\n    tag_196:\n        /* \"Token_RY_flattened.sol\":23866:23889  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Token_RY_flattened.sol\":23862:23963  if (owner() != _msgSender()) {... */\n      tag_197\n      jumpi\n        /* \"Token_RY_flattened.sol\":23939:23951  _msgSender() */\n      tag_198\n        /* \"Token_RY_flattened.sol\":23939:23949  _msgSender */\n      tag_100\n        /* \"Token_RY_flattened.sol\":23939:23951  _msgSender() */\n      jump\t// in\n    tag_198:\n        /* \"Token_RY_flattened.sol\":23912:23952  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Token_RY_flattened.sol\":23862:23963  if (owner() != _msgSender()) {... */\n    tag_197:\n        /* \"Token_RY_flattened.sol\":23807:23969  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":18612:18820  function _mint(address account, uint256 value) internal {... */\n    tag_119:\n        /* \"Token_RY_flattened.sol\":18701:18702  0 */\n      0x00\n        /* \"Token_RY_flattened.sol\":18682:18703  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token_RY_flattened.sol\":18682:18689  account */\n      dup3\n        /* \"Token_RY_flattened.sol\":18682:18703  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Token_RY_flattened.sol\":18678:18769  if (account == address(0)) {... */\n      tag_201\n      jumpi\n        /* \"Token_RY_flattened.sol\":18755:18756  0 */\n      0x00\n        /* \"Token_RY_flattened.sol\":18726:18758  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Token_RY_flattened.sol\":18678:18769  if (account == address(0)) {... */\n    tag_201:\n        /* \"Token_RY_flattened.sol\":18778:18813  _update(address(0), account, value) */\n      tag_203\n        /* \"Token_RY_flattened.sol\":18794:18795  0 */\n      0x00\n        /* \"Token_RY_flattened.sol\":18798:18805  account */\n      dup4\n        /* \"Token_RY_flattened.sol\":18807:18812  value */\n      dup4\n        /* \"Token_RY_flattened.sol\":18778:18785  _update */\n      tag_187\n        /* \"Token_RY_flattened.sol\":18778:18813  _update(address(0), account, value) */\n      jump\t// in\n    tag_203:\n        /* \"Token_RY_flattened.sol\":18612:18820  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":24923:25110  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_125:\n        /* \"Token_RY_flattened.sol\":24996:25012  address oldOwner */\n      0x00\n        /* \"Token_RY_flattened.sol\":25015:25021  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token_RY_flattened.sol\":24996:25021  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":25040:25048  newOwner */\n      dup2\n        /* \"Token_RY_flattened.sol\":25031:25037  _owner */\n      0x05\n      0x00\n        /* \"Token_RY_flattened.sol\":25031:25048  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Token_RY_flattened.sol\":25094:25102  newOwner */\n      dup2\n        /* \"Token_RY_flattened.sol\":25063:25103  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token_RY_flattened.sol\":25084:25092  oldOwner */\n      dup2\n        /* \"Token_RY_flattened.sol\":25063:25103  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Token_RY_flattened.sol\":24986:25110  {... */\n      pop\n        /* \"Token_RY_flattened.sol\":24923:25110  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":75998:76105  function nonces(address owner) public view virtual returns (uint256) {... */\n    tag_128:\n        /* \"Token_RY_flattened.sol\":76058:76065  uint256 */\n      0x00\n        /* \"Token_RY_flattened.sol\":76084:76091  _nonces */\n      0x08\n        /* \"Token_RY_flattened.sol\":76084:76098  _nonces[owner] */\n      0x00\n        /* \"Token_RY_flattened.sol\":76092:76097  owner */\n      dup4\n        /* \"Token_RY_flattened.sol\":76084:76098  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Token_RY_flattened.sol\":76077:76098  return _nonces[owner] */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":75998:76105  function nonces(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":74849:74975  function _EIP712Name() internal view returns (string memory) {... */\n    tag_131:\n        /* \"Token_RY_flattened.sol\":74895:74908  string memory */\n      0x60\n        /* \"Token_RY_flattened.sol\":74927:74968  _name.toStringWithFallback(_nameFallback) */\n      tag_207\n        /* \"Token_RY_flattened.sol\":74954:74967  _nameFallback */\n      0x06\n        /* \"Token_RY_flattened.sol\":74927:74932  _name */\n      immutable(\"0x94a6815ac3f39ee0f691137327eba74e351a039ac093f36725d81460ae04f412\")\n        /* \"Token_RY_flattened.sol\":74927:74953  _name.toStringWithFallback */\n      tag_208\n      swap1\n        /* \"Token_RY_flattened.sol\":74927:74968  _name.toStringWithFallback(_nameFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_207:\n        /* \"Token_RY_flattened.sol\":74920:74968  return _name.toStringWithFallback(_nameFallback) */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":74849:74975  function _EIP712Name() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":75301:75436  function _EIP712Version() internal view returns (string memory) {... */\n    tag_133:\n        /* \"Token_RY_flattened.sol\":75350:75363  string memory */\n      0x60\n        /* \"Token_RY_flattened.sol\":75382:75429  _version.toStringWithFallback(_versionFallback) */\n      tag_210\n        /* \"Token_RY_flattened.sol\":75412:75428  _versionFallback */\n      0x07\n        /* \"Token_RY_flattened.sol\":75382:75390  _version */\n      immutable(\"0x6a27fd8b4e034345f821626e478d5e1624295ad016c351a1e0a3d60e930e4e52\")\n        /* \"Token_RY_flattened.sol\":75382:75411  _version.toStringWithFallback */\n      tag_208\n      swap1\n        /* \"Token_RY_flattened.sol\":75382:75429  _version.toStringWithFallback(_versionFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_210:\n        /* \"Token_RY_flattened.sol\":75375:75429  return _version.toStringWithFallback(_versionFallback) */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":75301:75436  function _EIP712Version() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":76219:76614  function _useNonce(address owner) internal virtual returns (uint256) {... */\n    tag_152:\n        /* \"Token_RY_flattened.sol\":76279:76286  uint256 */\n      0x00\n        /* \"Token_RY_flattened.sol\":76581:76588  _nonces */\n      0x08\n        /* \"Token_RY_flattened.sol\":76581:76595  _nonces[owner] */\n      0x00\n        /* \"Token_RY_flattened.sol\":76589:76594  owner */\n      dup4\n        /* \"Token_RY_flattened.sol\":76581:76595  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Token_RY_flattened.sol\":76581:76597  _nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"Token_RY_flattened.sol\":76574:76597  return _nonces[owner]++ */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":76219:76614  function _useNonce(address owner) internal virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":73745:73921  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n    tag_156:\n        /* \"Token_RY_flattened.sol\":73822:73829  bytes32 */\n      0x00\n        /* \"Token_RY_flattened.sol\":73848:73914  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      tag_213\n        /* \"Token_RY_flattened.sol\":73881:73901  _domainSeparatorV4() */\n      tag_214\n        /* \"Token_RY_flattened.sol\":73881:73899  _domainSeparatorV4 */\n      tag_113\n        /* \"Token_RY_flattened.sol\":73881:73901  _domainSeparatorV4() */\n      jump\t// in\n    tag_214:\n        /* \"Token_RY_flattened.sol\":73903:73913  structHash */\n      dup4\n        /* \"Token_RY_flattened.sol\":73848:73880  MessageHashUtils.toTypedDataHash */\n      tag_215\n        /* \"Token_RY_flattened.sol\":73848:73914  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      jump\t// in\n    tag_213:\n        /* \"Token_RY_flattened.sol\":73841:73914  return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":73745:73921  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":35796:36056  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n    tag_158:\n        /* \"Token_RY_flattened.sol\":35881:35888  address */\n      0x00\n        /* \"Token_RY_flattened.sol\":35901:35918  address recovered */\n      dup1\n        /* \"Token_RY_flattened.sol\":35920:35938  RecoverError error */\n      0x00\n        /* \"Token_RY_flattened.sol\":35940:35956  bytes32 errorArg */\n      dup1\n        /* \"Token_RY_flattened.sol\":35960:35985  tryRecover(hash, v, r, s) */\n      tag_217\n        /* \"Token_RY_flattened.sol\":35971:35975  hash */\n      dup9\n        /* \"Token_RY_flattened.sol\":35977:35978  v */\n      dup9\n        /* \"Token_RY_flattened.sol\":35980:35981  r */\n      dup9\n        /* \"Token_RY_flattened.sol\":35983:35984  s */\n      dup9\n        /* \"Token_RY_flattened.sol\":35960:35970  tryRecover */\n      tag_218\n        /* \"Token_RY_flattened.sol\":35960:35985  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_217:\n        /* \"Token_RY_flattened.sol\":35900:35985  (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"Token_RY_flattened.sol\":35995:36023  _throwError(error, errorArg) */\n      tag_219\n        /* \"Token_RY_flattened.sol\":36007:36012  error */\n      dup3\n        /* \"Token_RY_flattened.sol\":36014:36022  errorArg */\n      dup3\n        /* \"Token_RY_flattened.sol\":35995:36006  _throwError */\n      tag_220\n        /* \"Token_RY_flattened.sol\":35995:36023  _throwError(error, errorArg) */\n      jump\t// in\n    tag_219:\n        /* \"Token_RY_flattened.sol\":36040:36049  recovered */\n      dup3\n        /* \"Token_RY_flattened.sol\":36033:36049  return recovered */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Token_RY_flattened.sol\":35796:36056  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":20840:21272  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_173:\n        /* \"Token_RY_flattened.sol\":20969:20970  0 */\n      0x00\n        /* \"Token_RY_flattened.sol\":20952:20971  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token_RY_flattened.sol\":20952:20957  owner */\n      dup5\n        /* \"Token_RY_flattened.sol\":20952:20971  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Token_RY_flattened.sol\":20948:21037  if (owner == address(0)) {... */\n      tag_222\n      jumpi\n        /* \"Token_RY_flattened.sol\":21023:21024  0 */\n      0x00\n        /* \"Token_RY_flattened.sol\":20994:21026  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Token_RY_flattened.sol\":20948:21037  if (owner == address(0)) {... */\n    tag_222:\n        /* \"Token_RY_flattened.sol\":21069:21070  0 */\n      0x00\n        /* \"Token_RY_flattened.sol\":21050:21071  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token_RY_flattened.sol\":21050:21057  spender */\n      dup4\n        /* \"Token_RY_flattened.sol\":21050:21071  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Token_RY_flattened.sol\":21046:21136  if (spender == address(0)) {... */\n      tag_224\n      jumpi\n        /* \"Token_RY_flattened.sol\":21122:21123  0 */\n      0x00\n        /* \"Token_RY_flattened.sol\":21094:21125  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Token_RY_flattened.sol\":21046:21136  if (spender == address(0)) {... */\n    tag_224:\n        /* \"Token_RY_flattened.sol\":21175:21180  value */\n      dup2\n        /* \"Token_RY_flattened.sol\":21145:21156  _allowances */\n      0x01\n        /* \"Token_RY_flattened.sol\":21145:21163  _allowances[owner] */\n      0x00\n        /* \"Token_RY_flattened.sol\":21157:21162  owner */\n      dup7\n        /* \"Token_RY_flattened.sol\":21145:21163  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Token_RY_flattened.sol\":21145:21172  _allowances[owner][spender] */\n      0x00\n        /* \"Token_RY_flattened.sol\":21164:21171  spender */\n      dup6\n        /* \"Token_RY_flattened.sol\":21145:21172  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Token_RY_flattened.sol\":21145:21180  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Token_RY_flattened.sol\":21194:21203  emitEvent */\n      dup1\n        /* \"Token_RY_flattened.sol\":21190:21266  if (emitEvent) {... */\n      iszero\n      tag_226\n      jumpi\n        /* \"Token_RY_flattened.sol\":21240:21247  spender */\n      dup3\n        /* \"Token_RY_flattened.sol\":21224:21255  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token_RY_flattened.sol\":21233:21238  owner */\n      dup5\n        /* \"Token_RY_flattened.sol\":21224:21255  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"Token_RY_flattened.sol\":21249:21254  value */\n      dup5\n        /* \"Token_RY_flattened.sol\":21224:21255  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_227\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Token_RY_flattened.sol\":21190:21266  if (emitEvent) {... */\n    tag_226:\n        /* \"Token_RY_flattened.sol\":20840:21272  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":17162:18269  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_187:\n        /* \"Token_RY_flattened.sol\":17267:17268  0 */\n      0x00\n        /* \"Token_RY_flattened.sol\":17251:17269  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token_RY_flattened.sol\":17251:17255  from */\n      dup4\n        /* \"Token_RY_flattened.sol\":17251:17269  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Token_RY_flattened.sol\":17247:17787  if (from == address(0)) {... */\n      tag_229\n      jumpi\n        /* \"Token_RY_flattened.sol\":17403:17408  value */\n      dup1\n        /* \"Token_RY_flattened.sol\":17387:17399  _totalSupply */\n      0x02\n      0x00\n        /* \"Token_RY_flattened.sol\":17387:17408  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_230\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Token_RY_flattened.sol\":17247:17787  if (from == address(0)) {... */\n      jump(tag_232)\n    tag_229:\n        /* \"Token_RY_flattened.sol\":17439:17458  uint256 fromBalance */\n      0x00\n        /* \"Token_RY_flattened.sol\":17461:17470  _balances */\n      dup1\n        /* \"Token_RY_flattened.sol\":17461:17476  _balances[from] */\n      0x00\n        /* \"Token_RY_flattened.sol\":17471:17475  from */\n      dup6\n        /* \"Token_RY_flattened.sol\":17461:17476  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Token_RY_flattened.sol\":17439:17476  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":17508:17513  value */\n      dup2\n        /* \"Token_RY_flattened.sol\":17494:17505  fromBalance */\n      dup2\n        /* \"Token_RY_flattened.sol\":17494:17513  fromBalance < value */\n      lt\n        /* \"Token_RY_flattened.sol\":17490:17605  if (fromBalance < value) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"Token_RY_flattened.sol\":17565:17569  from */\n      dup4\n        /* \"Token_RY_flattened.sol\":17571:17582  fromBalance */\n      dup2\n        /* \"Token_RY_flattened.sol\":17584:17589  value */\n      dup4\n        /* \"Token_RY_flattened.sol\":17540:17590  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Token_RY_flattened.sol\":17490:17605  if (fromBalance < value) {... */\n    tag_233:\n        /* \"Token_RY_flattened.sol\":17757:17762  value */\n      dup2\n        /* \"Token_RY_flattened.sol\":17743:17754  fromBalance */\n      dup2\n        /* \"Token_RY_flattened.sol\":17743:17762  fromBalance - value */\n      sub\n        /* \"Token_RY_flattened.sol\":17725:17734  _balances */\n      0x00\n        /* \"Token_RY_flattened.sol\":17725:17740  _balances[from] */\n      dup1\n        /* \"Token_RY_flattened.sol\":17735:17739  from */\n      dup7\n        /* \"Token_RY_flattened.sol\":17725:17740  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Token_RY_flattened.sol\":17725:17762  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Token_RY_flattened.sol\":17425:17787  {... */\n      pop\n        /* \"Token_RY_flattened.sol\":17247:17787  if (from == address(0)) {... */\n    tag_232:\n        /* \"Token_RY_flattened.sol\":17815:17816  0 */\n      0x00\n        /* \"Token_RY_flattened.sol\":17801:17817  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token_RY_flattened.sol\":17801:17803  to */\n      dup3\n        /* \"Token_RY_flattened.sol\":17801:17817  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Token_RY_flattened.sol\":17797:18222  if (to == address(0)) {... */\n      tag_235\n      jumpi\n        /* \"Token_RY_flattened.sol\":17980:17985  value */\n      dup1\n        /* \"Token_RY_flattened.sol\":17964:17976  _totalSupply */\n      0x02\n      0x00\n        /* \"Token_RY_flattened.sol\":17964:17985  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Token_RY_flattened.sol\":17797:18222  if (to == address(0)) {... */\n      jump(tag_236)\n    tag_235:\n        /* \"Token_RY_flattened.sol\":18192:18197  value */\n      dup1\n        /* \"Token_RY_flattened.sol\":18175:18184  _balances */\n      0x00\n        /* \"Token_RY_flattened.sol\":18175:18188  _balances[to] */\n      dup1\n        /* \"Token_RY_flattened.sol\":18185:18187  to */\n      dup5\n        /* \"Token_RY_flattened.sol\":18175:18188  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Token_RY_flattened.sol\":18175:18197  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Token_RY_flattened.sol\":17797:18222  if (to == address(0)) {... */\n    tag_236:\n        /* \"Token_RY_flattened.sol\":18252:18254  to */\n      dup2\n        /* \"Token_RY_flattened.sol\":18237:18262  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token_RY_flattened.sol\":18246:18250  from */\n      dup4\n        /* \"Token_RY_flattened.sol\":18237:18262  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Token_RY_flattened.sol\":18256:18261  value */\n      dup4\n        /* \"Token_RY_flattened.sol\":18237:18262  Transfer(from, to, value) */\n      mload(0x40)\n      tag_237\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Token_RY_flattened.sol\":17162:18269  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":72941:73120  function _buildDomainSeparator() private view returns (bytes32) {... */\n    tag_193:\n        /* \"Token_RY_flattened.sol\":72996:73003  bytes32 */\n      0x00\n        /* \"Token_RY_flattened.sol\":70907:71002  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"Token_RY_flattened.sol\":73054:73065  _hashedName */\n      immutable(\"0xd7540fe9b6cfec114ef69b9a5e37f0df0cc41a7a00237e8b74bf5a92c0da8102\")\n        /* \"Token_RY_flattened.sol\":73067:73081  _hashedVersion */\n      immutable(\"0x957b8855a729b67dc028ca49cb97b10aca21a5ff5ddcb5f61d4444c005a9b1c2\")\n        /* \"Token_RY_flattened.sol\":73083:73096  block.chainid */\n      chainid\n        /* \"Token_RY_flattened.sol\":73106:73110  this */\n      address\n        /* \"Token_RY_flattened.sol\":73032:73112  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      add(0x20, mload(0x40))\n      tag_239\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Token_RY_flattened.sol\":73022:73113  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Token_RY_flattened.sol\":73015:73113  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":72941:73120  function _buildDomainSeparator() private view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":67277:67544  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_208:\n        /* \"Token_RY_flattened.sol\":67371:67384  string memory */\n      0x60\n        /* \"Token_RY_flattened.sol\":65282:65348  0x00000000000000000000000000000000000000000000000000000000000000FF */\n      0xff\n        /* \"Token_RY_flattened.sol\":67429:67446  FALLBACK_SENTINEL */\n      0x00\n      shl\n        /* \"Token_RY_flattened.sol\":67419:67424  value */\n      dup4\n        /* \"Token_RY_flattened.sol\":67400:67446  ShortString.unwrap(value) != FALLBACK_SENTINEL */\n      eq\n        /* \"Token_RY_flattened.sol\":67396:67538  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n      tag_242\n      jumpi\n        /* \"Token_RY_flattened.sol\":67469:67484  toString(value) */\n      tag_243\n        /* \"Token_RY_flattened.sol\":67478:67483  value */\n      dup4\n        /* \"Token_RY_flattened.sol\":67469:67477  toString */\n      tag_244\n        /* \"Token_RY_flattened.sol\":67469:67484  toString(value) */\n      jump\t// in\n    tag_243:\n        /* \"Token_RY_flattened.sol\":67462:67484  return toString(value) */\n      swap1\n      pop\n      jump(tag_241)\n        /* \"Token_RY_flattened.sol\":67396:67538  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n    tag_242:\n        /* \"Token_RY_flattened.sol\":67522:67527  store */\n      dup2\n        /* \"Token_RY_flattened.sol\":67515:67527  return store */\n      dup1\n      sload\n      tag_246\n      swap1\n      tag_93\n      jump\t// in\n    tag_246:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_247\n      swap1\n      tag_93\n      jump\t// in\n    tag_247:\n      dup1\n      iszero\n      tag_248\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_249\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_248)\n    tag_249:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_250:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_250\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_248:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":67277:67544  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_241:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":59551:59952  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n    tag_215:\n        /* \"Token_RY_flattened.sol\":59644:59658  bytes32 digest */\n      0x00\n        /* \"Token_RY_flattened.sol\":59753:59757  0x40 */\n      0x40\n        /* \"Token_RY_flattened.sol\":59747:59758  mload(0x40) */\n      mload\n        /* \"Token_RY_flattened.sol\":59783:59793  hex\"19_01\" */\n      0x1901000000000000000000000000000000000000000000000000000000000000\n        /* \"Token_RY_flattened.sol\":59778:59781  ptr */\n      dup2\n        /* \"Token_RY_flattened.sol\":59771:59794  mstore(ptr, hex\"19_01\") */\n      mstore\n        /* \"Token_RY_flattened.sol\":59830:59845  domainSeparator */\n      dup4\n        /* \"Token_RY_flattened.sol\":59823:59827  0x02 */\n      0x02\n        /* \"Token_RY_flattened.sol\":59818:59821  ptr */\n      dup3\n        /* \"Token_RY_flattened.sol\":59814:59828  add(ptr, 0x02) */\n      add\n        /* \"Token_RY_flattened.sol\":59807:59846  mstore(add(ptr, 0x02), domainSeparator) */\n      mstore\n        /* \"Token_RY_flattened.sol\":59882:59892  structHash */\n      dup3\n        /* \"Token_RY_flattened.sol\":59875:59879  0x22 */\n      0x22\n        /* \"Token_RY_flattened.sol\":59870:59873  ptr */\n      dup3\n        /* \"Token_RY_flattened.sol\":59866:59880  add(ptr, 0x22) */\n      add\n        /* \"Token_RY_flattened.sol\":59859:59893  mstore(add(ptr, 0x22), structHash) */\n      mstore\n        /* \"Token_RY_flattened.sol\":59931:59935  0x42 */\n      0x42\n        /* \"Token_RY_flattened.sol\":59926:59929  ptr */\n      dup2\n        /* \"Token_RY_flattened.sol\":59916:59936  keccak256(ptr, 0x42) */\n      keccak256\n        /* \"Token_RY_flattened.sol\":59906:59936  digest := keccak256(ptr, 0x42) */\n      swap2\n      pop\n        /* \"Token_RY_flattened.sol\":59722:59946  {... */\n      pop\n        /* \"Token_RY_flattened.sol\":59551:59952  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":34133:35663  function tryRecover(... */\n    tag_218:\n        /* \"Token_RY_flattened.sol\":34259:34266  address */\n      0x00\n        /* \"Token_RY_flattened.sol\":34268:34280  RecoverError */\n      dup1\n        /* \"Token_RY_flattened.sol\":34282:34289  bytes32 */\n      0x00\n        /* \"Token_RY_flattened.sol\":35192:35258  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"Token_RY_flattened.sol\":35187:35188  s */\n      dup5\n        /* \"Token_RY_flattened.sol\":35179:35189  uint256(s) */\n      0x00\n      shr\n        /* \"Token_RY_flattened.sol\":35179:35258  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      gt\n        /* \"Token_RY_flattened.sol\":35175:35339  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_253\n      jumpi\n        /* \"Token_RY_flattened.sol\":35290:35291  0 */\n      0x00\n        /* \"Token_RY_flattened.sol\":35294:35324  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"Token_RY_flattened.sol\":35326:35327  s */\n      dup6\n        /* \"Token_RY_flattened.sol\":35274:35328  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      jump(tag_252)\n        /* \"Token_RY_flattened.sol\":35175:35339  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_253:\n        /* \"Token_RY_flattened.sol\":35433:35447  address signer */\n      0x00\n        /* \"Token_RY_flattened.sol\":35450:35474  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"Token_RY_flattened.sol\":35460:35464  hash */\n      dup9\n        /* \"Token_RY_flattened.sol\":35466:35467  v */\n      dup9\n        /* \"Token_RY_flattened.sol\":35469:35470  r */\n      dup9\n        /* \"Token_RY_flattened.sol\":35472:35473  s */\n      dup9\n        /* \"Token_RY_flattened.sol\":35450:35474  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_254\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_257\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_257:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"Token_RY_flattened.sol\":35433:35474  address signer = ecrecover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":35506:35507  0 */\n      0x00\n        /* \"Token_RY_flattened.sol\":35488:35508  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Token_RY_flattened.sol\":35488:35494  signer */\n      dup2\n        /* \"Token_RY_flattened.sol\":35488:35508  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Token_RY_flattened.sol\":35484:35597  if (signer == address(0)) {... */\n      tag_258\n      jumpi\n        /* \"Token_RY_flattened.sol\":35540:35541  0 */\n      0x00\n        /* \"Token_RY_flattened.sol\":35544:35573  RecoverError.InvalidSignature */\n      0x01\n        /* \"Token_RY_flattened.sol\":35583:35584  0 */\n      0x00\n        /* \"Token_RY_flattened.sol\":35575:35585  bytes32(0) */\n      dup1\n      shl\n        /* \"Token_RY_flattened.sol\":35524:35586  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      jump(tag_252)\n        /* \"Token_RY_flattened.sol\":35484:35597  if (signer == address(0)) {... */\n    tag_258:\n        /* \"Token_RY_flattened.sol\":35615:35621  signer */\n      dup1\n        /* \"Token_RY_flattened.sol\":35623:35643  RecoverError.NoError */\n      0x00\n        /* \"Token_RY_flattened.sol\":35653:35654  0 */\n      dup1\n        /* \"Token_RY_flattened.sol\":35645:35655  bytes32(0) */\n      0x00\n      shl\n        /* \"Token_RY_flattened.sol\":35607:35656  return (signer, RecoverError.NoError, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"Token_RY_flattened.sol\":34133:35663  function tryRecover(... */\n    tag_252:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":36189:36721  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_220:\n        /* \"Token_RY_flattened.sol\":36284:36304  RecoverError.NoError */\n      0x00\n        /* \"Token_RY_flattened.sol\":36275:36304  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_260\n      jumpi\n      tag_261\n      tag_262\n      jump\t// in\n    tag_261:\n    tag_260:\n        /* \"Token_RY_flattened.sol\":36275:36280  error */\n      dup3\n        /* \"Token_RY_flattened.sol\":36275:36304  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_263\n      jumpi\n      tag_264\n      tag_262\n      jump\t// in\n    tag_264:\n    tag_263:\n      sub\n        /* \"Token_RY_flattened.sol\":36271:36715  if (error == RecoverError.NoError) {... */\n      iszero\n        /* \"Token_RY_flattened.sol\":36320:36327  return; */\n      tag_259\n        /* \"Token_RY_flattened.sol\":36271:36715  if (error == RecoverError.NoError) {... */\n      jumpi\n        /* \"Token_RY_flattened.sol\":36380:36409  RecoverError.InvalidSignature */\n      0x01\n        /* \"Token_RY_flattened.sol\":36371:36409  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_267\n      jumpi\n      tag_268\n      tag_262\n      jump\t// in\n    tag_268:\n    tag_267:\n        /* \"Token_RY_flattened.sol\":36371:36376  error */\n      dup3\n        /* \"Token_RY_flattened.sol\":36371:36409  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_269\n      jumpi\n      tag_270\n      tag_262\n      jump\t// in\n    tag_270:\n    tag_269:\n      sub\n        /* \"Token_RY_flattened.sol\":36367:36715  if (error == RecoverError.InvalidSignature) {... */\n      tag_271\n      jumpi\n        /* \"Token_RY_flattened.sol\":36432:36455  ECDSAInvalidSignature() */\n      mload(0x40)\n      0xf645eedf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Token_RY_flattened.sol\":36367:36715  if (error == RecoverError.InvalidSignature) {... */\n    tag_271:\n        /* \"Token_RY_flattened.sol\":36485:36520  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"Token_RY_flattened.sol\":36476:36520  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_273\n      jumpi\n      tag_274\n      tag_262\n      jump\t// in\n    tag_274:\n    tag_273:\n        /* \"Token_RY_flattened.sol\":36476:36481  error */\n      dup3\n        /* \"Token_RY_flattened.sol\":36476:36520  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_275\n      jumpi\n      tag_276\n      tag_262\n      jump\t// in\n    tag_276:\n    tag_275:\n      sub\n        /* \"Token_RY_flattened.sol\":36472:36715  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_277\n      jumpi\n        /* \"Token_RY_flattened.sol\":36579:36587  errorArg */\n      dup1\n        /* \"Token_RY_flattened.sol\":36571:36588  uint256(errorArg) */\n      0x00\n      shr\n        /* \"Token_RY_flattened.sol\":36543:36589  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      mload(0x40)\n      0xfce698f700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Token_RY_flattened.sol\":36472:36715  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_277:\n        /* \"Token_RY_flattened.sol\":36619:36649  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"Token_RY_flattened.sol\":36610:36649  error == RecoverError.InvalidSignatureS */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_280\n      jumpi\n      tag_281\n      tag_262\n      jump\t// in\n    tag_281:\n    tag_280:\n        /* \"Token_RY_flattened.sol\":36610:36615  error */\n      dup3\n        /* \"Token_RY_flattened.sol\":36610:36649  error == RecoverError.InvalidSignatureS */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_282\n      jumpi\n      tag_283\n      tag_262\n      jump\t// in\n    tag_283:\n    tag_282:\n      sub\n        /* \"Token_RY_flattened.sol\":36606:36715  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_284\n      jumpi\n        /* \"Token_RY_flattened.sol\":36695:36703  errorArg */\n      dup1\n        /* \"Token_RY_flattened.sol\":36672:36704  ECDSAInvalidSignatureS(errorArg) */\n      mload(0x40)\n      0xd78bce0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Token_RY_flattened.sol\":36606:36715  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_284:\n        /* \"Token_RY_flattened.sol\":36189:36721  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_259:\n      pop\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":65970:66375  function toString(ShortString sstr) internal pure returns (string memory) {... */\n    tag_244:\n        /* \"Token_RY_flattened.sol\":66029:66042  string memory */\n      0x60\n        /* \"Token_RY_flattened.sol\":66054:66065  uint256 len */\n      0x00\n        /* \"Token_RY_flattened.sol\":66068:66084  byteLength(sstr) */\n      tag_287\n        /* \"Token_RY_flattened.sol\":66079:66083  sstr */\n      dup4\n        /* \"Token_RY_flattened.sol\":66068:66078  byteLength */\n      tag_288\n        /* \"Token_RY_flattened.sol\":66068:66084  byteLength(sstr) */\n      jump\t// in\n    tag_287:\n        /* \"Token_RY_flattened.sol\":66054:66084  uint256 len = byteLength(sstr) */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":66172:66189  string memory str */\n      0x00\n        /* \"Token_RY_flattened.sol\":66203:66205  32 */\n      0x20\n        /* \"Token_RY_flattened.sol\":66192:66206  new string(32) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_289\n      jumpi\n      tag_290\n      tag_136\n      jump\t// in\n    tag_290:\n    tag_289:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_291\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_291:\n      pop\n        /* \"Token_RY_flattened.sol\":66172:66206  string memory str = new string(32) */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":66294:66297  len */\n      dup2\n        /* \"Token_RY_flattened.sol\":66289:66292  str */\n      dup2\n        /* \"Token_RY_flattened.sol\":66282:66298  mstore(str, len) */\n      mstore\n        /* \"Token_RY_flattened.sol\":66334:66338  sstr */\n      dup4\n        /* \"Token_RY_flattened.sol\":66327:66331  0x20 */\n      0x20\n        /* \"Token_RY_flattened.sol\":66322:66325  str */\n      dup3\n        /* \"Token_RY_flattened.sol\":66318:66332  add(str, 0x20) */\n      add\n        /* \"Token_RY_flattened.sol\":66311:66339  mstore(add(str, 0x20), sstr) */\n      mstore\n        /* \"Token_RY_flattened.sol\":66365:66368  str */\n      dup1\n        /* \"Token_RY_flattened.sol\":66358:66368  return str */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Token_RY_flattened.sol\":65970:66375  function toString(ShortString sstr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Token_RY_flattened.sol\":66447:66692  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n    tag_288:\n        /* \"Token_RY_flattened.sol\":66508:66515  uint256 */\n      0x00\n        /* \"Token_RY_flattened.sol\":66527:66541  uint256 result */\n      dup1\n        /* \"Token_RY_flattened.sol\":66580:66584  0xFF */\n      0xff\n        /* \"Token_RY_flattened.sol\":66571:66575  sstr */\n      dup4\n        /* \"Token_RY_flattened.sol\":66544:66577  uint256(ShortString.unwrap(sstr)) */\n      0x00\n      shr\n        /* \"Token_RY_flattened.sol\":66544:66584  uint256(ShortString.unwrap(sstr)) & 0xFF */\n      and\n        /* \"Token_RY_flattened.sol\":66527:66584  uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF */\n      swap1\n      pop\n        /* \"Token_RY_flattened.sol\":66607:66609  31 */\n      0x1f\n        /* \"Token_RY_flattened.sol\":66598:66604  result */\n      dup2\n        /* \"Token_RY_flattened.sol\":66598:66609  result > 31 */\n      gt\n        /* \"Token_RY_flattened.sol\":66594:66663  if (result > 31) {... */\n      iszero\n      tag_293\n      jumpi\n        /* \"Token_RY_flattened.sol\":66632:66652  InvalidShortString() */\n      mload(0x40)\n      0xb3512b0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Token_RY_flattened.sol\":66594:66663  if (result > 31) {... */\n    tag_293:\n        /* \"Token_RY_flattened.sol\":66679:66685  result */\n      dup1\n        /* \"Token_RY_flattened.sol\":66672:66685  return result */\n      swap2\n      pop\n      pop\n        /* \"Token_RY_flattened.sol\":66447:66692  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_294:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_295:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_296:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_336:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_336)\n    tag_338:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_297:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_298:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_341\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_294\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":818:889   */\n      tag_342\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_295\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_343\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_296\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":988:1017   */\n      tag_344\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_297\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_26:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_346\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_298\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_300:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_302:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_303:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_352\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_302\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_304:\n        /* \"#utility.yul\":1983:2007   */\n      tag_354\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_303\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_355\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_355:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_305:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_357\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_304\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_306:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_307:\n        /* \"#utility.yul\":2339:2363   */\n      tag_360\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_306\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_361\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_361:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_308:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_363\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_307\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_29:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_366\n      tag_300\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":2632:2751   */\n    tag_365:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_367\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_305\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_368\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_308\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_309:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_310:\n        /* \"#utility.yul\":3196:3217   */\n      tag_371\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_309\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_32:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_373\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_310\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_311:\n        /* \"#utility.yul\":3533:3557   */\n      tag_375\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_306\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_36:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_377\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_311\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_39:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_380\n      tag_300\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":3908:4027   */\n    tag_379:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_381\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_305\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_382\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_305\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_383\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_308\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_312:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_313:\n        /* \"#utility.yul\":4598:4620   */\n      tag_386\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_312\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_45:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_388\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_313\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:4930   */\n    tag_314:\n        /* \"#utility.yul\":4890:4897   */\n      0x00\n        /* \"#utility.yul\":4919:4924   */\n      dup2\n        /* \"#utility.yul\":4908:4924   */\n      swap1\n      pop\n        /* \"#utility.yul\":4853:4930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4936:5054   */\n    tag_315:\n        /* \"#utility.yul\":5023:5047   */\n      tag_391\n        /* \"#utility.yul\":5041:5046   */\n      dup2\n        /* \"#utility.yul\":5023:5047   */\n      tag_314\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":5018:5021   */\n      dup3\n        /* \"#utility.yul\":5011:5048   */\n      mstore\n        /* \"#utility.yul\":4936:5054   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5060:5282   */\n    tag_49:\n        /* \"#utility.yul\":5153:5157   */\n      0x00\n        /* \"#utility.yul\":5191:5193   */\n      0x20\n        /* \"#utility.yul\":5180:5189   */\n      dup3\n        /* \"#utility.yul\":5176:5194   */\n      add\n        /* \"#utility.yul\":5168:5194   */\n      swap1\n      pop\n        /* \"#utility.yul\":5204:5275   */\n      tag_393\n        /* \"#utility.yul\":5272:5273   */\n      0x00\n        /* \"#utility.yul\":5261:5270   */\n      dup4\n        /* \"#utility.yul\":5257:5274   */\n      add\n        /* \"#utility.yul\":5248:5254   */\n      dup5\n        /* \"#utility.yul\":5204:5275   */\n      tag_315\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":5060:5282   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5288:5617   */\n    tag_55:\n        /* \"#utility.yul\":5347:5353   */\n      0x00\n        /* \"#utility.yul\":5396:5398   */\n      0x20\n        /* \"#utility.yul\":5384:5393   */\n      dup3\n        /* \"#utility.yul\":5375:5382   */\n      dup5\n        /* \"#utility.yul\":5371:5394   */\n      sub\n        /* \"#utility.yul\":5367:5399   */\n      slt\n        /* \"#utility.yul\":5364:5483   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":5402:5481   */\n      tag_396\n      tag_300\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":5364:5483   */\n    tag_395:\n        /* \"#utility.yul\":5522:5523   */\n      0x00\n        /* \"#utility.yul\":5547:5600   */\n      tag_397\n        /* \"#utility.yul\":5592:5599   */\n      dup5\n        /* \"#utility.yul\":5583:5589   */\n      dup3\n        /* \"#utility.yul\":5572:5581   */\n      dup6\n        /* \"#utility.yul\":5568:5590   */\n      add\n        /* \"#utility.yul\":5547:5600   */\n      tag_305\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":5537:5600   */\n      swap2\n      pop\n        /* \"#utility.yul\":5493:5610   */\n      pop\n        /* \"#utility.yul\":5288:5617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5623:5772   */\n    tag_316:\n        /* \"#utility.yul\":5659:5666   */\n      0x00\n        /* \"#utility.yul\":5699:5765   */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5692:5697   */\n      dup3\n        /* \"#utility.yul\":5688:5766   */\n      and\n        /* \"#utility.yul\":5677:5766   */\n      swap1\n      pop\n        /* \"#utility.yul\":5623:5772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5778:5893   */\n    tag_317:\n        /* \"#utility.yul\":5863:5886   */\n      tag_400\n        /* \"#utility.yul\":5880:5885   */\n      dup2\n        /* \"#utility.yul\":5863:5886   */\n      tag_316\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":5858:5861   */\n      dup3\n        /* \"#utility.yul\":5851:5887   */\n      mstore\n        /* \"#utility.yul\":5778:5893   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5899:6017   */\n    tag_318:\n        /* \"#utility.yul\":5986:6010   */\n      tag_402\n        /* \"#utility.yul\":6004:6009   */\n      dup2\n        /* \"#utility.yul\":5986:6010   */\n      tag_303\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":5981:5984   */\n      dup3\n        /* \"#utility.yul\":5974:6011   */\n      mstore\n        /* \"#utility.yul\":5899:6017   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6023:6137   */\n    tag_319:\n        /* \"#utility.yul\":6090:6096   */\n      0x00\n        /* \"#utility.yul\":6124:6129   */\n      dup2\n        /* \"#utility.yul\":6118:6130   */\n      mload\n        /* \"#utility.yul\":6108:6130   */\n      swap1\n      pop\n        /* \"#utility.yul\":6023:6137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6143:6327   */\n    tag_320:\n        /* \"#utility.yul\":6242:6253   */\n      0x00\n        /* \"#utility.yul\":6276:6282   */\n      dup3\n        /* \"#utility.yul\":6271:6274   */\n      dup3\n        /* \"#utility.yul\":6264:6283   */\n      mstore\n        /* \"#utility.yul\":6316:6320   */\n      0x20\n        /* \"#utility.yul\":6311:6314   */\n      dup3\n        /* \"#utility.yul\":6307:6321   */\n      add\n        /* \"#utility.yul\":6292:6321   */\n      swap1\n      pop\n        /* \"#utility.yul\":6143:6327   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6333:6465   */\n    tag_321:\n        /* \"#utility.yul\":6400:6404   */\n      0x00\n        /* \"#utility.yul\":6423:6426   */\n      dup2\n        /* \"#utility.yul\":6415:6426   */\n      swap1\n      pop\n        /* \"#utility.yul\":6453:6457   */\n      0x20\n        /* \"#utility.yul\":6448:6451   */\n      dup3\n        /* \"#utility.yul\":6444:6458   */\n      add\n        /* \"#utility.yul\":6436:6458   */\n      swap1\n      pop\n        /* \"#utility.yul\":6333:6465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6471:6579   */\n    tag_322:\n        /* \"#utility.yul\":6548:6572   */\n      tag_407\n        /* \"#utility.yul\":6566:6571   */\n      dup2\n        /* \"#utility.yul\":6548:6572   */\n      tag_306\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":6543:6546   */\n      dup3\n        /* \"#utility.yul\":6536:6573   */\n      mstore\n        /* \"#utility.yul\":6471:6579   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6585:6764   */\n    tag_323:\n        /* \"#utility.yul\":6654:6664   */\n      0x00\n        /* \"#utility.yul\":6675:6721   */\n      tag_409\n        /* \"#utility.yul\":6717:6720   */\n      dup4\n        /* \"#utility.yul\":6709:6715   */\n      dup4\n        /* \"#utility.yul\":6675:6721   */\n      tag_322\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":6753:6757   */\n      0x20\n        /* \"#utility.yul\":6748:6751   */\n      dup4\n        /* \"#utility.yul\":6744:6758   */\n      add\n        /* \"#utility.yul\":6730:6758   */\n      swap1\n      pop\n        /* \"#utility.yul\":6585:6764   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6770:6883   */\n    tag_324:\n        /* \"#utility.yul\":6840:6844   */\n      0x00\n        /* \"#utility.yul\":6872:6876   */\n      0x20\n        /* \"#utility.yul\":6867:6870   */\n      dup3\n        /* \"#utility.yul\":6863:6877   */\n      add\n        /* \"#utility.yul\":6855:6877   */\n      swap1\n      pop\n        /* \"#utility.yul\":6770:6883   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6919:7651   */\n    tag_325:\n        /* \"#utility.yul\":7038:7041   */\n      0x00\n        /* \"#utility.yul\":7067:7121   */\n      tag_412\n        /* \"#utility.yul\":7115:7120   */\n      dup3\n        /* \"#utility.yul\":7067:7121   */\n      tag_319\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":7137:7223   */\n      tag_413\n        /* \"#utility.yul\":7216:7222   */\n      dup2\n        /* \"#utility.yul\":7211:7214   */\n      dup6\n        /* \"#utility.yul\":7137:7223   */\n      tag_320\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":7130:7223   */\n      swap4\n      pop\n        /* \"#utility.yul\":7247:7303   */\n      tag_414\n        /* \"#utility.yul\":7297:7302   */\n      dup4\n        /* \"#utility.yul\":7247:7303   */\n      tag_321\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":7326:7333   */\n      dup1\n        /* \"#utility.yul\":7357:7358   */\n      0x00\n        /* \"#utility.yul\":7342:7626   */\n    tag_415:\n        /* \"#utility.yul\":7367:7373   */\n      dup4\n        /* \"#utility.yul\":7364:7365   */\n      dup2\n        /* \"#utility.yul\":7361:7374   */\n      lt\n        /* \"#utility.yul\":7342:7626   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":7443:7449   */\n      dup2\n        /* \"#utility.yul\":7437:7450   */\n      mload\n        /* \"#utility.yul\":7470:7533   */\n      tag_418\n        /* \"#utility.yul\":7529:7532   */\n      dup9\n        /* \"#utility.yul\":7514:7527   */\n      dup3\n        /* \"#utility.yul\":7470:7533   */\n      tag_323\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":7463:7533   */\n      swap8\n      pop\n        /* \"#utility.yul\":7556:7616   */\n      tag_419\n        /* \"#utility.yul\":7609:7615   */\n      dup4\n        /* \"#utility.yul\":7556:7616   */\n      tag_324\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":7546:7616   */\n      swap3\n      pop\n        /* \"#utility.yul\":7402:7626   */\n      pop\n        /* \"#utility.yul\":7389:7390   */\n      0x01\n        /* \"#utility.yul\":7386:7387   */\n      dup2\n        /* \"#utility.yul\":7382:7391   */\n      add\n        /* \"#utility.yul\":7377:7391   */\n      swap1\n      pop\n        /* \"#utility.yul\":7342:7626   */\n      jump(tag_415)\n    tag_417:\n        /* \"#utility.yul\":7346:7360   */\n      pop\n        /* \"#utility.yul\":7642:7645   */\n      dup6\n        /* \"#utility.yul\":7635:7645   */\n      swap4\n      pop\n        /* \"#utility.yul\":7043:7651   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6919:7651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7657:8872   */\n    tag_67:\n        /* \"#utility.yul\":8006:8010   */\n      0x00\n        /* \"#utility.yul\":8044:8047   */\n      0xe0\n        /* \"#utility.yul\":8033:8042   */\n      dup3\n        /* \"#utility.yul\":8029:8048   */\n      add\n        /* \"#utility.yul\":8021:8048   */\n      swap1\n      pop\n        /* \"#utility.yul\":8058:8127   */\n      tag_421\n        /* \"#utility.yul\":8124:8125   */\n      0x00\n        /* \"#utility.yul\":8113:8122   */\n      dup4\n        /* \"#utility.yul\":8109:8126   */\n      add\n        /* \"#utility.yul\":8100:8106   */\n      dup11\n        /* \"#utility.yul\":8058:8127   */\n      tag_317\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8174:8183   */\n      dup2\n        /* \"#utility.yul\":8168:8172   */\n      dup2\n        /* \"#utility.yul\":8164:8184   */\n      sub\n        /* \"#utility.yul\":8159:8161   */\n      0x20\n        /* \"#utility.yul\":8148:8157   */\n      dup4\n        /* \"#utility.yul\":8144:8162   */\n      add\n        /* \"#utility.yul\":8137:8185   */\n      mstore\n        /* \"#utility.yul\":8202:8280   */\n      tag_422\n        /* \"#utility.yul\":8275:8279   */\n      dup2\n        /* \"#utility.yul\":8266:8272   */\n      dup10\n        /* \"#utility.yul\":8202:8280   */\n      tag_298\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":8194:8280   */\n      swap1\n      pop\n        /* \"#utility.yul\":8327:8336   */\n      dup2\n        /* \"#utility.yul\":8321:8325   */\n      dup2\n        /* \"#utility.yul\":8317:8337   */\n      sub\n        /* \"#utility.yul\":8312:8314   */\n      0x40\n        /* \"#utility.yul\":8301:8310   */\n      dup4\n        /* \"#utility.yul\":8297:8315   */\n      add\n        /* \"#utility.yul\":8290:8338   */\n      mstore\n        /* \"#utility.yul\":8355:8433   */\n      tag_423\n        /* \"#utility.yul\":8428:8432   */\n      dup2\n        /* \"#utility.yul\":8419:8425   */\n      dup9\n        /* \"#utility.yul\":8355:8433   */\n      tag_298\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":8347:8433   */\n      swap1\n      pop\n        /* \"#utility.yul\":8443:8515   */\n      tag_424\n        /* \"#utility.yul\":8511:8513   */\n      0x60\n        /* \"#utility.yul\":8500:8509   */\n      dup4\n        /* \"#utility.yul\":8496:8514   */\n      add\n        /* \"#utility.yul\":8487:8493   */\n      dup8\n        /* \"#utility.yul\":8443:8515   */\n      tag_311\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":8525:8598   */\n      tag_425\n        /* \"#utility.yul\":8593:8596   */\n      0x80\n        /* \"#utility.yul\":8582:8591   */\n      dup4\n        /* \"#utility.yul\":8578:8597   */\n      add\n        /* \"#utility.yul\":8569:8575   */\n      dup7\n        /* \"#utility.yul\":8525:8598   */\n      tag_318\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":8608:8681   */\n      tag_426\n        /* \"#utility.yul\":8676:8679   */\n      0xa0\n        /* \"#utility.yul\":8665:8674   */\n      dup4\n        /* \"#utility.yul\":8661:8680   */\n      add\n        /* \"#utility.yul\":8652:8658   */\n      dup6\n        /* \"#utility.yul\":8608:8681   */\n      tag_315\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":8729:8738   */\n      dup2\n        /* \"#utility.yul\":8723:8727   */\n      dup2\n        /* \"#utility.yul\":8719:8739   */\n      sub\n        /* \"#utility.yul\":8713:8716   */\n      0xc0\n        /* \"#utility.yul\":8702:8711   */\n      dup4\n        /* \"#utility.yul\":8698:8717   */\n      add\n        /* \"#utility.yul\":8691:8740   */\n      mstore\n        /* \"#utility.yul\":8757:8865   */\n      tag_427\n        /* \"#utility.yul\":8860:8864   */\n      dup2\n        /* \"#utility.yul\":8851:8857   */\n      dup5\n        /* \"#utility.yul\":8757:8865   */\n      tag_325\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":8749:8865   */\n      swap1\n      pop\n        /* \"#utility.yul\":7657:8872   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8878:9100   */\n    tag_71:\n        /* \"#utility.yul\":8971:8975   */\n      0x00\n        /* \"#utility.yul\":9009:9011   */\n      0x20\n        /* \"#utility.yul\":8998:9007   */\n      dup3\n        /* \"#utility.yul\":8994:9012   */\n      add\n        /* \"#utility.yul\":8986:9012   */\n      swap1\n      pop\n        /* \"#utility.yul\":9022:9093   */\n      tag_429\n        /* \"#utility.yul\":9090:9091   */\n      0x00\n        /* \"#utility.yul\":9079:9088   */\n      dup4\n        /* \"#utility.yul\":9075:9092   */\n      add\n        /* \"#utility.yul\":9066:9072   */\n      dup5\n        /* \"#utility.yul\":9022:9093   */\n      tag_318\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":8878:9100   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9106:9224   */\n    tag_326:\n        /* \"#utility.yul\":9177:9199   */\n      tag_431\n        /* \"#utility.yul\":9193:9198   */\n      dup2\n        /* \"#utility.yul\":9177:9199   */\n      tag_312\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":9170:9175   */\n      dup2\n        /* \"#utility.yul\":9167:9200   */\n      eq\n        /* \"#utility.yul\":9157:9218   */\n      tag_432\n      jumpi\n        /* \"#utility.yul\":9214:9215   */\n      0x00\n        /* \"#utility.yul\":9211:9212   */\n      dup1\n        /* \"#utility.yul\":9204:9216   */\n      revert\n        /* \"#utility.yul\":9157:9218   */\n    tag_432:\n        /* \"#utility.yul\":9106:9224   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9230:9365   */\n    tag_327:\n        /* \"#utility.yul\":9274:9279   */\n      0x00\n        /* \"#utility.yul\":9312:9318   */\n      dup2\n        /* \"#utility.yul\":9299:9319   */\n      calldataload\n        /* \"#utility.yul\":9290:9319   */\n      swap1\n      pop\n        /* \"#utility.yul\":9328:9359   */\n      tag_434\n        /* \"#utility.yul\":9353:9358   */\n      dup2\n        /* \"#utility.yul\":9328:9359   */\n      tag_326\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":9230:9365   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9371:9493   */\n    tag_328:\n        /* \"#utility.yul\":9444:9468   */\n      tag_436\n        /* \"#utility.yul\":9462:9467   */\n      dup2\n        /* \"#utility.yul\":9444:9468   */\n      tag_314\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":9437:9442   */\n      dup2\n        /* \"#utility.yul\":9434:9469   */\n      eq\n        /* \"#utility.yul\":9424:9487   */\n      tag_437\n      jumpi\n        /* \"#utility.yul\":9483:9484   */\n      0x00\n        /* \"#utility.yul\":9480:9481   */\n      dup1\n        /* \"#utility.yul\":9473:9485   */\n      revert\n        /* \"#utility.yul\":9424:9487   */\n    tag_437:\n        /* \"#utility.yul\":9371:9493   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9499:9638   */\n    tag_329:\n        /* \"#utility.yul\":9545:9550   */\n      0x00\n        /* \"#utility.yul\":9583:9589   */\n      dup2\n        /* \"#utility.yul\":9570:9590   */\n      calldataload\n        /* \"#utility.yul\":9561:9590   */\n      swap1\n      pop\n        /* \"#utility.yul\":9599:9632   */\n      tag_439\n        /* \"#utility.yul\":9626:9631   */\n      dup2\n        /* \"#utility.yul\":9599:9632   */\n      tag_328\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":9499:9638   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9644:10843   */\n    tag_81:\n        /* \"#utility.yul\":9755:9761   */\n      0x00\n        /* \"#utility.yul\":9763:9769   */\n      dup1\n        /* \"#utility.yul\":9771:9777   */\n      0x00\n        /* \"#utility.yul\":9779:9785   */\n      dup1\n        /* \"#utility.yul\":9787:9793   */\n      0x00\n        /* \"#utility.yul\":9795:9801   */\n      dup1\n        /* \"#utility.yul\":9803:9809   */\n      0x00\n        /* \"#utility.yul\":9852:9855   */\n      0xe0\n        /* \"#utility.yul\":9840:9849   */\n      dup9\n        /* \"#utility.yul\":9831:9838   */\n      dup11\n        /* \"#utility.yul\":9827:9850   */\n      sub\n        /* \"#utility.yul\":9823:9856   */\n      slt\n        /* \"#utility.yul\":9820:9940   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":9859:9938   */\n      tag_442\n      tag_300\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":9820:9940   */\n    tag_441:\n        /* \"#utility.yul\":9979:9980   */\n      0x00\n        /* \"#utility.yul\":10004:10057   */\n      tag_443\n        /* \"#utility.yul\":10049:10056   */\n      dup11\n        /* \"#utility.yul\":10040:10046   */\n      dup3\n        /* \"#utility.yul\":10029:10038   */\n      dup12\n        /* \"#utility.yul\":10025:10047   */\n      add\n        /* \"#utility.yul\":10004:10057   */\n      tag_305\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":9994:10057   */\n      swap8\n      pop\n        /* \"#utility.yul\":9950:10067   */\n      pop\n        /* \"#utility.yul\":10106:10108   */\n      0x20\n        /* \"#utility.yul\":10132:10185   */\n      tag_444\n        /* \"#utility.yul\":10177:10184   */\n      dup11\n        /* \"#utility.yul\":10168:10174   */\n      dup3\n        /* \"#utility.yul\":10157:10166   */\n      dup12\n        /* \"#utility.yul\":10153:10175   */\n      add\n        /* \"#utility.yul\":10132:10185   */\n      tag_305\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":10122:10185   */\n      swap7\n      pop\n        /* \"#utility.yul\":10077:10195   */\n      pop\n        /* \"#utility.yul\":10234:10236   */\n      0x40\n        /* \"#utility.yul\":10260:10313   */\n      tag_445\n        /* \"#utility.yul\":10305:10312   */\n      dup11\n        /* \"#utility.yul\":10296:10302   */\n      dup3\n        /* \"#utility.yul\":10285:10294   */\n      dup12\n        /* \"#utility.yul\":10281:10303   */\n      add\n        /* \"#utility.yul\":10260:10313   */\n      tag_308\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":10250:10313   */\n      swap6\n      pop\n        /* \"#utility.yul\":10205:10323   */\n      pop\n        /* \"#utility.yul\":10362:10364   */\n      0x60\n        /* \"#utility.yul\":10388:10441   */\n      tag_446\n        /* \"#utility.yul\":10433:10440   */\n      dup11\n        /* \"#utility.yul\":10424:10430   */\n      dup3\n        /* \"#utility.yul\":10413:10422   */\n      dup12\n        /* \"#utility.yul\":10409:10431   */\n      add\n        /* \"#utility.yul\":10388:10441   */\n      tag_308\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":10378:10441   */\n      swap5\n      pop\n        /* \"#utility.yul\":10333:10451   */\n      pop\n        /* \"#utility.yul\":10490:10493   */\n      0x80\n        /* \"#utility.yul\":10517:10568   */\n      tag_447\n        /* \"#utility.yul\":10560:10567   */\n      dup11\n        /* \"#utility.yul\":10551:10557   */\n      dup3\n        /* \"#utility.yul\":10540:10549   */\n      dup12\n        /* \"#utility.yul\":10536:10558   */\n      add\n        /* \"#utility.yul\":10517:10568   */\n      tag_327\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":10507:10568   */\n      swap4\n      pop\n        /* \"#utility.yul\":10461:10578   */\n      pop\n        /* \"#utility.yul\":10617:10620   */\n      0xa0\n        /* \"#utility.yul\":10644:10697   */\n      tag_448\n        /* \"#utility.yul\":10689:10696   */\n      dup11\n        /* \"#utility.yul\":10680:10686   */\n      dup3\n        /* \"#utility.yul\":10669:10678   */\n      dup12\n        /* \"#utility.yul\":10665:10687   */\n      add\n        /* \"#utility.yul\":10644:10697   */\n      tag_329\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":10634:10697   */\n      swap3\n      pop\n        /* \"#utility.yul\":10588:10707   */\n      pop\n        /* \"#utility.yul\":10746:10749   */\n      0xc0\n        /* \"#utility.yul\":10773:10826   */\n      tag_449\n        /* \"#utility.yul\":10818:10825   */\n      dup11\n        /* \"#utility.yul\":10809:10815   */\n      dup3\n        /* \"#utility.yul\":10798:10807   */\n      dup12\n        /* \"#utility.yul\":10794:10816   */\n      add\n        /* \"#utility.yul\":10773:10826   */\n      tag_329\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":10763:10826   */\n      swap2\n      pop\n        /* \"#utility.yul\":10717:10836   */\n      pop\n        /* \"#utility.yul\":9644:10843   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10849:11323   */\n    tag_85:\n        /* \"#utility.yul\":10917:10923   */\n      0x00\n        /* \"#utility.yul\":10925:10931   */\n      dup1\n        /* \"#utility.yul\":10974:10976   */\n      0x40\n        /* \"#utility.yul\":10962:10971   */\n      dup4\n        /* \"#utility.yul\":10953:10960   */\n      dup6\n        /* \"#utility.yul\":10949:10972   */\n      sub\n        /* \"#utility.yul\":10945:10977   */\n      slt\n        /* \"#utility.yul\":10942:11061   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":10980:11059   */\n      tag_452\n      tag_300\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":10942:11061   */\n    tag_451:\n        /* \"#utility.yul\":11100:11101   */\n      0x00\n        /* \"#utility.yul\":11125:11178   */\n      tag_453\n        /* \"#utility.yul\":11170:11177   */\n      dup6\n        /* \"#utility.yul\":11161:11167   */\n      dup3\n        /* \"#utility.yul\":11150:11159   */\n      dup7\n        /* \"#utility.yul\":11146:11168   */\n      add\n        /* \"#utility.yul\":11125:11178   */\n      tag_305\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":11115:11178   */\n      swap3\n      pop\n        /* \"#utility.yul\":11071:11188   */\n      pop\n        /* \"#utility.yul\":11227:11229   */\n      0x20\n        /* \"#utility.yul\":11253:11306   */\n      tag_454\n        /* \"#utility.yul\":11298:11305   */\n      dup6\n        /* \"#utility.yul\":11289:11295   */\n      dup3\n        /* \"#utility.yul\":11278:11287   */\n      dup7\n        /* \"#utility.yul\":11274:11296   */\n      add\n        /* \"#utility.yul\":11253:11306   */\n      tag_305\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":11243:11306   */\n      swap2\n      pop\n        /* \"#utility.yul\":11198:11316   */\n      pop\n        /* \"#utility.yul\":10849:11323   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11329:11509   */\n    tag_330:\n        /* \"#utility.yul\":11377:11454   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11374:11375   */\n      0x00\n        /* \"#utility.yul\":11367:11455   */\n      mstore\n        /* \"#utility.yul\":11474:11478   */\n      0x22\n        /* \"#utility.yul\":11471:11472   */\n      0x04\n        /* \"#utility.yul\":11464:11479   */\n      mstore\n        /* \"#utility.yul\":11498:11502   */\n      0x24\n        /* \"#utility.yul\":11495:11496   */\n      0x00\n        /* \"#utility.yul\":11488:11503   */\n      revert\n        /* \"#utility.yul\":11515:11835   */\n    tag_93:\n        /* \"#utility.yul\":11559:11565   */\n      0x00\n        /* \"#utility.yul\":11596:11597   */\n      0x02\n        /* \"#utility.yul\":11590:11594   */\n      dup3\n        /* \"#utility.yul\":11586:11598   */\n      div\n        /* \"#utility.yul\":11576:11598   */\n      swap1\n      pop\n        /* \"#utility.yul\":11643:11644   */\n      0x01\n        /* \"#utility.yul\":11637:11641   */\n      dup3\n        /* \"#utility.yul\":11633:11645   */\n      and\n        /* \"#utility.yul\":11664:11682   */\n      dup1\n        /* \"#utility.yul\":11654:11735   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":11720:11724   */\n      0x7f\n        /* \"#utility.yul\":11712:11718   */\n      dup3\n        /* \"#utility.yul\":11708:11725   */\n      and\n        /* \"#utility.yul\":11698:11725   */\n      swap2\n      pop\n        /* \"#utility.yul\":11654:11735   */\n    tag_457:\n        /* \"#utility.yul\":11782:11784   */\n      0x20\n        /* \"#utility.yul\":11774:11780   */\n      dup3\n        /* \"#utility.yul\":11771:11785   */\n      lt\n        /* \"#utility.yul\":11751:11769   */\n      dup2\n        /* \"#utility.yul\":11748:11786   */\n      sub\n        /* \"#utility.yul\":11745:11829   */\n      tag_458\n      jumpi\n        /* \"#utility.yul\":11801:11819   */\n      tag_459\n      tag_330\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":11745:11829   */\n    tag_458:\n        /* \"#utility.yul\":11566:11835   */\n      pop\n        /* \"#utility.yul\":11515:11835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11841:12021   */\n    tag_136:\n        /* \"#utility.yul\":11889:11966   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11886:11887   */\n      0x00\n        /* \"#utility.yul\":11879:11967   */\n      mstore\n        /* \"#utility.yul\":11986:11990   */\n      0x41\n        /* \"#utility.yul\":11983:11984   */\n      0x04\n        /* \"#utility.yul\":11976:11991   */\n      mstore\n        /* \"#utility.yul\":12010:12014   */\n      0x24\n        /* \"#utility.yul\":12007:12008   */\n      0x00\n        /* \"#utility.yul\":12000:12015   */\n      revert\n        /* \"#utility.yul\":12027:12802   */\n    tag_154:\n        /* \"#utility.yul\":12260:12264   */\n      0x00\n        /* \"#utility.yul\":12298:12301   */\n      0xc0\n        /* \"#utility.yul\":12287:12296   */\n      dup3\n        /* \"#utility.yul\":12283:12302   */\n      add\n        /* \"#utility.yul\":12275:12302   */\n      swap1\n      pop\n        /* \"#utility.yul\":12312:12383   */\n      tag_462\n        /* \"#utility.yul\":12380:12381   */\n      0x00\n        /* \"#utility.yul\":12369:12378   */\n      dup4\n        /* \"#utility.yul\":12365:12382   */\n      add\n        /* \"#utility.yul\":12356:12362   */\n      dup10\n        /* \"#utility.yul\":12312:12383   */\n      tag_315\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":12393:12465   */\n      tag_463\n        /* \"#utility.yul\":12461:12463   */\n      0x20\n        /* \"#utility.yul\":12450:12459   */\n      dup4\n        /* \"#utility.yul\":12446:12464   */\n      add\n        /* \"#utility.yul\":12437:12443   */\n      dup9\n        /* \"#utility.yul\":12393:12465   */\n      tag_318\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":12475:12547   */\n      tag_464\n        /* \"#utility.yul\":12543:12545   */\n      0x40\n        /* \"#utility.yul\":12532:12541   */\n      dup4\n        /* \"#utility.yul\":12528:12546   */\n      add\n        /* \"#utility.yul\":12519:12525   */\n      dup8\n        /* \"#utility.yul\":12475:12547   */\n      tag_318\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":12557:12629   */\n      tag_465\n        /* \"#utility.yul\":12625:12627   */\n      0x60\n        /* \"#utility.yul\":12614:12623   */\n      dup4\n        /* \"#utility.yul\":12610:12628   */\n      add\n        /* \"#utility.yul\":12601:12607   */\n      dup7\n        /* \"#utility.yul\":12557:12629   */\n      tag_311\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":12639:12712   */\n      tag_466\n        /* \"#utility.yul\":12707:12710   */\n      0x80\n        /* \"#utility.yul\":12696:12705   */\n      dup4\n        /* \"#utility.yul\":12692:12711   */\n      add\n        /* \"#utility.yul\":12683:12689   */\n      dup6\n        /* \"#utility.yul\":12639:12712   */\n      tag_311\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":12722:12795   */\n      tag_467\n        /* \"#utility.yul\":12790:12793   */\n      0xa0\n        /* \"#utility.yul\":12779:12788   */\n      dup4\n        /* \"#utility.yul\":12775:12794   */\n      add\n        /* \"#utility.yul\":12766:12772   */\n      dup5\n        /* \"#utility.yul\":12722:12795   */\n      tag_311\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":12027:12802   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12808:13140   */\n    tag_161:\n        /* \"#utility.yul\":12929:12933   */\n      0x00\n        /* \"#utility.yul\":12967:12969   */\n      0x40\n        /* \"#utility.yul\":12956:12965   */\n      dup3\n        /* \"#utility.yul\":12952:12970   */\n      add\n        /* \"#utility.yul\":12944:12970   */\n      swap1\n      pop\n        /* \"#utility.yul\":12980:13051   */\n      tag_469\n        /* \"#utility.yul\":13048:13049   */\n      0x00\n        /* \"#utility.yul\":13037:13046   */\n      dup4\n        /* \"#utility.yul\":13033:13050   */\n      add\n        /* \"#utility.yul\":13024:13030   */\n      dup6\n        /* \"#utility.yul\":12980:13051   */\n      tag_318\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":13061:13133   */\n      tag_470\n        /* \"#utility.yul\":13129:13131   */\n      0x20\n        /* \"#utility.yul\":13118:13127   */\n      dup4\n        /* \"#utility.yul\":13114:13132   */\n      add\n        /* \"#utility.yul\":13105:13111   */\n      dup5\n        /* \"#utility.yul\":13061:13133   */\n      tag_318\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":12808:13140   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13146:13588   */\n    tag_179:\n        /* \"#utility.yul\":13295:13299   */\n      0x00\n        /* \"#utility.yul\":13333:13335   */\n      0x60\n        /* \"#utility.yul\":13322:13331   */\n      dup3\n        /* \"#utility.yul\":13318:13336   */\n      add\n        /* \"#utility.yul\":13310:13336   */\n      swap1\n      pop\n        /* \"#utility.yul\":13346:13417   */\n      tag_472\n        /* \"#utility.yul\":13414:13415   */\n      0x00\n        /* \"#utility.yul\":13403:13412   */\n      dup4\n        /* \"#utility.yul\":13399:13416   */\n      add\n        /* \"#utility.yul\":13390:13396   */\n      dup7\n        /* \"#utility.yul\":13346:13417   */\n      tag_318\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":13427:13499   */\n      tag_473\n        /* \"#utility.yul\":13495:13497   */\n      0x20\n        /* \"#utility.yul\":13484:13493   */\n      dup4\n        /* \"#utility.yul\":13480:13498   */\n      add\n        /* \"#utility.yul\":13471:13477   */\n      dup6\n        /* \"#utility.yul\":13427:13499   */\n      tag_311\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":13509:13581   */\n      tag_474\n        /* \"#utility.yul\":13577:13579   */\n      0x40\n        /* \"#utility.yul\":13566:13575   */\n      dup4\n        /* \"#utility.yul\":13562:13580   */\n      add\n        /* \"#utility.yul\":13553:13559   */\n      dup5\n        /* \"#utility.yul\":13509:13581   */\n      tag_311\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":13146:13588   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13594:13774   */\n    tag_331:\n        /* \"#utility.yul\":13642:13719   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13639:13640   */\n      0x00\n        /* \"#utility.yul\":13632:13720   */\n      mstore\n        /* \"#utility.yul\":13739:13743   */\n      0x11\n        /* \"#utility.yul\":13736:13737   */\n      0x04\n        /* \"#utility.yul\":13729:13744   */\n      mstore\n        /* \"#utility.yul\":13763:13767   */\n      0x24\n        /* \"#utility.yul\":13760:13761   */\n      0x00\n        /* \"#utility.yul\":13753:13768   */\n      revert\n        /* \"#utility.yul\":13780:13971   */\n    tag_231:\n        /* \"#utility.yul\":13820:13823   */\n      0x00\n        /* \"#utility.yul\":13839:13859   */\n      tag_477\n        /* \"#utility.yul\":13857:13858   */\n      dup3\n        /* \"#utility.yul\":13839:13859   */\n      tag_306\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":13834:13859   */\n      swap2\n      pop\n        /* \"#utility.yul\":13873:13893   */\n      tag_478\n        /* \"#utility.yul\":13891:13892   */\n      dup4\n        /* \"#utility.yul\":13873:13893   */\n      tag_306\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":13868:13893   */\n      swap3\n      pop\n        /* \"#utility.yul\":13916:13917   */\n      dup3\n        /* \"#utility.yul\":13913:13914   */\n      dup3\n        /* \"#utility.yul\":13909:13918   */\n      add\n        /* \"#utility.yul\":13902:13918   */\n      swap1\n      pop\n        /* \"#utility.yul\":13937:13940   */\n      dup1\n        /* \"#utility.yul\":13934:13935   */\n      dup3\n        /* \"#utility.yul\":13931:13941   */\n      gt\n        /* \"#utility.yul\":13928:13964   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":13944:13962   */\n      tag_480\n      tag_331\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":13928:13964   */\n    tag_479:\n        /* \"#utility.yul\":13780:13971   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13977:14641   */\n    tag_240:\n        /* \"#utility.yul\":14182:14186   */\n      0x00\n        /* \"#utility.yul\":14220:14223   */\n      0xa0\n        /* \"#utility.yul\":14209:14218   */\n      dup3\n        /* \"#utility.yul\":14205:14224   */\n      add\n        /* \"#utility.yul\":14197:14224   */\n      swap1\n      pop\n        /* \"#utility.yul\":14234:14305   */\n      tag_482\n        /* \"#utility.yul\":14302:14303   */\n      0x00\n        /* \"#utility.yul\":14291:14300   */\n      dup4\n        /* \"#utility.yul\":14287:14304   */\n      add\n        /* \"#utility.yul\":14278:14284   */\n      dup9\n        /* \"#utility.yul\":14234:14305   */\n      tag_315\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":14315:14387   */\n      tag_483\n        /* \"#utility.yul\":14383:14385   */\n      0x20\n        /* \"#utility.yul\":14372:14381   */\n      dup4\n        /* \"#utility.yul\":14368:14386   */\n      add\n        /* \"#utility.yul\":14359:14365   */\n      dup8\n        /* \"#utility.yul\":14315:14387   */\n      tag_315\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":14397:14469   */\n      tag_484\n        /* \"#utility.yul\":14465:14467   */\n      0x40\n        /* \"#utility.yul\":14454:14463   */\n      dup4\n        /* \"#utility.yul\":14450:14468   */\n      add\n        /* \"#utility.yul\":14441:14447   */\n      dup7\n        /* \"#utility.yul\":14397:14469   */\n      tag_315\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":14479:14551   */\n      tag_485\n        /* \"#utility.yul\":14547:14549   */\n      0x60\n        /* \"#utility.yul\":14536:14545   */\n      dup4\n        /* \"#utility.yul\":14532:14550   */\n      add\n        /* \"#utility.yul\":14523:14529   */\n      dup6\n        /* \"#utility.yul\":14479:14551   */\n      tag_311\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":14561:14634   */\n      tag_486\n        /* \"#utility.yul\":14629:14632   */\n      0x80\n        /* \"#utility.yul\":14618:14627   */\n      dup4\n        /* \"#utility.yul\":14614:14633   */\n      add\n        /* \"#utility.yul\":14605:14611   */\n      dup5\n        /* \"#utility.yul\":14561:14634   */\n      tag_318\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":13977:14641   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14647:15192   */\n    tag_255:\n        /* \"#utility.yul\":14820:14824   */\n      0x00\n        /* \"#utility.yul\":14858:14861   */\n      0x80\n        /* \"#utility.yul\":14847:14856   */\n      dup3\n        /* \"#utility.yul\":14843:14862   */\n      add\n        /* \"#utility.yul\":14835:14862   */\n      swap1\n      pop\n        /* \"#utility.yul\":14872:14943   */\n      tag_488\n        /* \"#utility.yul\":14940:14941   */\n      0x00\n        /* \"#utility.yul\":14929:14938   */\n      dup4\n        /* \"#utility.yul\":14925:14942   */\n      add\n        /* \"#utility.yul\":14916:14922   */\n      dup8\n        /* \"#utility.yul\":14872:14943   */\n      tag_315\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":14953:15021   */\n      tag_489\n        /* \"#utility.yul\":15017:15019   */\n      0x20\n        /* \"#utility.yul\":15006:15015   */\n      dup4\n        /* \"#utility.yul\":15002:15020   */\n      add\n        /* \"#utility.yul\":14993:14999   */\n      dup7\n        /* \"#utility.yul\":14953:15021   */\n      tag_313\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":15031:15103   */\n      tag_490\n        /* \"#utility.yul\":15099:15101   */\n      0x40\n        /* \"#utility.yul\":15088:15097   */\n      dup4\n        /* \"#utility.yul\":15084:15102   */\n      add\n        /* \"#utility.yul\":15075:15081   */\n      dup6\n        /* \"#utility.yul\":15031:15103   */\n      tag_315\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":15113:15185   */\n      tag_491\n        /* \"#utility.yul\":15181:15183   */\n      0x60\n        /* \"#utility.yul\":15170:15179   */\n      dup4\n        /* \"#utility.yul\":15166:15184   */\n      add\n        /* \"#utility.yul\":15157:15163   */\n      dup5\n        /* \"#utility.yul\":15113:15185   */\n      tag_315\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":14647:15192   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15198:15378   */\n    tag_262:\n        /* \"#utility.yul\":15246:15323   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15243:15244   */\n      0x00\n        /* \"#utility.yul\":15236:15324   */\n      mstore\n        /* \"#utility.yul\":15343:15347   */\n      0x21\n        /* \"#utility.yul\":15340:15341   */\n      0x04\n        /* \"#utility.yul\":15333:15348   */\n      mstore\n        /* \"#utility.yul\":15367:15371   */\n      0x24\n        /* \"#utility.yul\":15364:15365   */\n      0x00\n        /* \"#utility.yul\":15357:15372   */\n      revert\n\n    auxdata: 0xa2646970667358221220d38e418eb5a98eda0e98c637a865f7559745e4b3e403bdca14fb94741b2559ef64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3212": {
									"entryPoint": null,
									"id": 3212,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3447": {
									"entryPoint": null,
									"id": 3447,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_3587": {
									"entryPoint": null,
									"id": 3587,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_819": {
									"entryPoint": null,
									"id": 819,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_3259": {
									"entryPoint": 970,
									"id": 3259,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_611": {
									"entryPoint": 1070,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_915": {
									"entryPoint": 690,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 1323,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_335": {
									"entryPoint": 1062,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStringSlot_2862": {
									"entryPoint": 1314,
									"id": 2862,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toShortStringWithFallback_3040": {
									"entryPoint": 885,
									"id": 3040,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toShortString_2942": {
									"entryPoint": 1208,
									"id": 2942,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 3460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3973,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 3494,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_bytes_memory_ptr": {
									"entryPoint": 3767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2961,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 3051,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2481,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 3451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32": {
									"entryPoint": 3804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3601,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2904,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2075,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2030,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_memoryt_bytes32": {
									"entryPoint": 3782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1871,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2217,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2368,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2411,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13897:1",
										"nodeType": "YulBlock",
										"src": "0:13897:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "759:80:1",
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nativeSrc": "769:22:1",
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nativeSrc": "778:13:1",
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nativeSrc": "800:33:1",
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nativeSrc": "800:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:1",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:1",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:1",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nativeSrc": "922:274:1",
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:1",
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nativeSrc": "970:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nativeSrc": "970:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nativeSrc": "939:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:1",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nativeSrc": "935:32:1",
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nativeSrc": "932:119:1",
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nativeSrc": "1061:128:1",
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nativeSrc": "1076:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nativeSrc": "1147:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nativeSrc": "1115:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:1",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:1",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:1",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											},
											{
												"body": {
													"nativeSrc": "1261:40:1",
													"nodeType": "YulBlock",
													"src": "1261:40:1",
													"statements": [
														{
															"nativeSrc": "1272:22:1",
															"nodeType": "YulAssignment",
															"src": "1272:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:1"
																},
																"nativeSrc": "1282:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:1",
														"nodeType": "YulTypedName",
														"src": "1244:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:1",
														"nodeType": "YulTypedName",
														"src": "1254:6:1",
														"type": ""
													}
												],
												"src": "1202:99:1"
											},
											{
												"body": {
													"nativeSrc": "1335:152:1",
													"nodeType": "YulBlock",
													"src": "1335:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:1"
																},
																"nativeSrc": "1345:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:1"
															},
															"nativeSrc": "1345:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:1"
																},
																"nativeSrc": "1442:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:1"
															},
															"nativeSrc": "1442:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:1"
																},
																"nativeSrc": "1466:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:1"
															},
															"nativeSrc": "1466:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:1"
											},
											{
												"body": {
													"nativeSrc": "1521:152:1",
													"nodeType": "YulBlock",
													"src": "1521:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:1"
																},
																"nativeSrc": "1531:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:1"
															},
															"nativeSrc": "1531:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:1"
																},
																"nativeSrc": "1628:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:1"
															},
															"nativeSrc": "1628:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:1"
																},
																"nativeSrc": "1652:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:1"
															},
															"nativeSrc": "1652:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:1"
											},
											{
												"body": {
													"nativeSrc": "1730:269:1",
													"nodeType": "YulBlock",
													"src": "1730:269:1",
													"statements": [
														{
															"nativeSrc": "1740:22:1",
															"nodeType": "YulAssignment",
															"src": "1740:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:1"
																},
																"nativeSrc": "1750:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:1"
																}
															]
														},
														{
															"nativeSrc": "1771:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:1"
																},
																"nativeSrc": "1797:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:1",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:1",
																"nodeType": "YulBlock",
																"src": "1848:51:1",
																"statements": [
																	{
																		"nativeSrc": "1862:27:1",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:1"
																			},
																			"nativeSrc": "1872:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:1"
																},
																"nativeSrc": "1821:26:1",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:1"
															},
															"nativeSrc": "1818:81:1",
															"nodeType": "YulIf",
															"src": "1818:81:1"
														},
														{
															"body": {
																"nativeSrc": "1951:42:1",
																"nodeType": "YulBlock",
																"src": "1951:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:1"
																			},
																			"nativeSrc": "1965:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:1"
																		},
																		"nativeSrc": "1965:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:1"
																		},
																		"nativeSrc": "1935:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:1"
																},
																"nativeSrc": "1912:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:1"
															},
															"nativeSrc": "1909:84:1",
															"nodeType": "YulIf",
															"src": "1909:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:1",
														"nodeType": "YulTypedName",
														"src": "1714:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:1",
														"nodeType": "YulTypedName",
														"src": "1723:6:1",
														"type": ""
													}
												],
												"src": "1679:320:1"
											},
											{
												"body": {
													"nativeSrc": "2059:87:1",
													"nodeType": "YulBlock",
													"src": "2059:87:1",
													"statements": [
														{
															"nativeSrc": "2069:11:1",
															"nodeType": "YulAssignment",
															"src": "2069:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:1",
																"nodeType": "YulIdentifier",
																"src": "2077:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																},
																"nativeSrc": "2090:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:1"
															},
															"nativeSrc": "2090:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:1"
														},
														{
															"nativeSrc": "2113:26:1",
															"nodeType": "YulAssignment",
															"src": "2113:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:1"
																},
																"nativeSrc": "2121:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:1",
														"nodeType": "YulTypedName",
														"src": "2046:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:1",
														"nodeType": "YulTypedName",
														"src": "2054:4:1",
														"type": ""
													}
												],
												"src": "2005:141:1"
											},
											{
												"body": {
													"nativeSrc": "2196:49:1",
													"nodeType": "YulBlock",
													"src": "2196:49:1",
													"statements": [
														{
															"nativeSrc": "2206:33:1",
															"nodeType": "YulAssignment",
															"src": "2206:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:1"
																		},
																		"nativeSrc": "2220:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:1"
																},
																"nativeSrc": "2216:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:1",
														"nodeType": "YulTypedName",
														"src": "2179:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:1",
														"nodeType": "YulTypedName",
														"src": "2189:6:1",
														"type": ""
													}
												],
												"src": "2152:93:1"
											},
											{
												"body": {
													"nativeSrc": "2304:54:1",
													"nodeType": "YulBlock",
													"src": "2304:54:1",
													"statements": [
														{
															"nativeSrc": "2314:37:1",
															"nodeType": "YulAssignment",
															"src": "2314:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:1"
																},
																"nativeSrc": "2335:16:1",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:1",
														"nodeType": "YulTypedName",
														"src": "2279:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:1",
														"nodeType": "YulTypedName",
														"src": "2285:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:1",
														"nodeType": "YulTypedName",
														"src": "2295:8:1",
														"type": ""
													}
												],
												"src": "2251:107:1"
											},
											{
												"body": {
													"nativeSrc": "2440:317:1",
													"nodeType": "YulBlock",
													"src": "2440:317:1",
													"statements": [
														{
															"nativeSrc": "2450:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:1"
																},
																"nativeSrc": "2467:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:1",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:1",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:1"
																},
																"nativeSrc": "2506:97:1",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:1",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:1",
															"nodeType": "YulAssignment",
															"src": "2612:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:1"
																},
																"nativeSrc": "2624:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:1"
																}
															]
														},
														{
															"nativeSrc": "2672:30:1",
															"nodeType": "YulAssignment",
															"src": "2672:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:1"
																		},
																		"nativeSrc": "2692:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:1"
																},
																"nativeSrc": "2681:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:1"
																}
															]
														},
														{
															"nativeSrc": "2711:40:1",
															"nodeType": "YulAssignment",
															"src": "2711:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:1"
																		},
																		"nativeSrc": "2731:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:1"
																},
																"nativeSrc": "2721:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:1",
														"nodeType": "YulTypedName",
														"src": "2401:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:1",
														"nodeType": "YulTypedName",
														"src": "2408:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:1",
														"nodeType": "YulTypedName",
														"src": "2420:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:1",
														"nodeType": "YulTypedName",
														"src": "2433:6:1",
														"type": ""
													}
												],
												"src": "2364:393:1"
											},
											{
												"body": {
													"nativeSrc": "2808:32:1",
													"nodeType": "YulBlock",
													"src": "2808:32:1",
													"statements": [
														{
															"nativeSrc": "2818:16:1",
															"nodeType": "YulAssignment",
															"src": "2818:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:1",
																"nodeType": "YulIdentifier",
																"src": "2829:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:1",
														"nodeType": "YulTypedName",
														"src": "2790:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:1",
														"nodeType": "YulTypedName",
														"src": "2800:7:1",
														"type": ""
													}
												],
												"src": "2763:77:1"
											},
											{
												"body": {
													"nativeSrc": "2878:28:1",
													"nodeType": "YulBlock",
													"src": "2878:28:1",
													"statements": [
														{
															"nativeSrc": "2888:12:1",
															"nodeType": "YulAssignment",
															"src": "2888:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:1",
																"nodeType": "YulIdentifier",
																"src": "2895:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:1",
														"nodeType": "YulTypedName",
														"src": "2864:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:1",
														"nodeType": "YulTypedName",
														"src": "2874:3:1",
														"type": ""
													}
												],
												"src": "2846:60:1"
											},
											{
												"body": {
													"nativeSrc": "2972:82:1",
													"nodeType": "YulBlock",
													"src": "2972:82:1",
													"statements": [
														{
															"nativeSrc": "2982:66:1",
															"nodeType": "YulAssignment",
															"src": "2982:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:1"
																				},
																				"nativeSrc": "3022:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:1"
																		},
																		"nativeSrc": "3013:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:1"
																},
																"nativeSrc": "2995:53:1",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:1",
														"nodeType": "YulTypedName",
														"src": "2952:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:1",
														"nodeType": "YulTypedName",
														"src": "2962:9:1",
														"type": ""
													}
												],
												"src": "2912:142:1"
											},
											{
												"body": {
													"nativeSrc": "3107:28:1",
													"nodeType": "YulBlock",
													"src": "3107:28:1",
													"statements": [
														{
															"nativeSrc": "3117:12:1",
															"nodeType": "YulAssignment",
															"src": "3117:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:1",
																"nodeType": "YulIdentifier",
																"src": "3124:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:1",
														"nodeType": "YulTypedName",
														"src": "3093:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:1",
														"nodeType": "YulTypedName",
														"src": "3103:3:1",
														"type": ""
													}
												],
												"src": "3060:75:1"
											},
											{
												"body": {
													"nativeSrc": "3217:193:1",
													"nodeType": "YulBlock",
													"src": "3217:193:1",
													"statements": [
														{
															"nativeSrc": "3227:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:1"
																},
																"nativeSrc": "3251:39:1",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:1",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:1"
																				},
																				"nativeSrc": "3340:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:1"
																				},
																				"nativeSrc": "3361:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:1"
																		},
																		"nativeSrc": "3312:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:1"
																},
																"nativeSrc": "3299:105:1",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:1"
															},
															"nativeSrc": "3299:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:1",
														"nodeType": "YulTypedName",
														"src": "3194:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:1",
														"nodeType": "YulTypedName",
														"src": "3200:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:1",
														"nodeType": "YulTypedName",
														"src": "3208:7:1",
														"type": ""
													}
												],
												"src": "3141:269:1"
											},
											{
												"body": {
													"nativeSrc": "3465:24:1",
													"nodeType": "YulBlock",
													"src": "3465:24:1",
													"statements": [
														{
															"nativeSrc": "3475:8:1",
															"nodeType": "YulAssignment",
															"src": "3475:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:1",
																"nodeType": "YulLiteral",
																"src": "3482:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:1",
														"nodeType": "YulTypedName",
														"src": "3461:3:1",
														"type": ""
													}
												],
												"src": "3416:73:1"
											},
											{
												"body": {
													"nativeSrc": "3548:136:1",
													"nodeType": "YulBlock",
													"src": "3548:136:1",
													"statements": [
														{
															"nativeSrc": "3558:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:1"
																},
																"nativeSrc": "3572:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:1"
																},
																"nativeSrc": "3613:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:1"
															},
															"nativeSrc": "3613:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:1",
														"nodeType": "YulTypedName",
														"src": "3534:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:1",
														"nodeType": "YulTypedName",
														"src": "3540:6:1",
														"type": ""
													}
												],
												"src": "3495:189:1"
											},
											{
												"body": {
													"nativeSrc": "3740:136:1",
													"nodeType": "YulBlock",
													"src": "3740:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:1",
																"nodeType": "YulBlock",
																"src": "3807:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:1"
																			},
																			"nativeSrc": "3821:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:1"
																		},
																		"nativeSrc": "3821:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:1"
																},
																"nativeSrc": "3757:14:1",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:1"
															},
															"nativeSrc": "3750:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:1",
																"nodeType": "YulBlock",
																"src": "3772:26:1",
																"statements": [
																	{
																		"nativeSrc": "3774:22:1",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:1"
																			},
																			"nativeSrc": "3783:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:1",
																"nodeType": "YulBlock",
																"src": "3754:2:1",
																"statements": []
															},
															"src": "3750:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:1",
														"nodeType": "YulTypedName",
														"src": "3728:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:1",
														"nodeType": "YulTypedName",
														"src": "3735:3:1",
														"type": ""
													}
												],
												"src": "3690:186:1"
											},
											{
												"body": {
													"nativeSrc": "3961:464:1",
													"nodeType": "YulBlock",
													"src": "3961:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:1",
																"nodeType": "YulBlock",
																"src": "3987:431:1",
																"statements": [
																	{
																		"nativeSrc": "4001:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:1"
																			},
																			"nativeSrc": "4017:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:1",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:1"
																					},
																					"nativeSrc": "4101:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:1"
																			},
																			"nativeSrc": "4087:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:1",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:1",
																			"nodeType": "YulBlock",
																			"src": "4288:27:1",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:1",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:1",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:1"
																			},
																			"nativeSrc": "4269:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:1"
																		},
																		"nativeSrc": "4266:49:1",
																		"nodeType": "YulIf",
																		"src": "4266:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:1"
																							},
																							"nativeSrc": "4384:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:1"
																					},
																					"nativeSrc": "4370:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:1"
																			},
																			"nativeSrc": "4328:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:1"
																		},
																		"nativeSrc": "4328:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:1"
																},
																"nativeSrc": "3975:11:1",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:1"
															},
															"nativeSrc": "3972:446:1",
															"nodeType": "YulIf",
															"src": "3972:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:1",
														"nodeType": "YulTypedName",
														"src": "3937:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:1",
														"nodeType": "YulTypedName",
														"src": "3944:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:1",
														"nodeType": "YulTypedName",
														"src": "3949:10:1",
														"type": ""
													}
												],
												"src": "3882:543:1"
											},
											{
												"body": {
													"nativeSrc": "4494:54:1",
													"nodeType": "YulBlock",
													"src": "4494:54:1",
													"statements": [
														{
															"nativeSrc": "4504:37:1",
															"nodeType": "YulAssignment",
															"src": "4504:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:1"
																},
																"nativeSrc": "4525:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:1",
														"nodeType": "YulTypedName",
														"src": "4469:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:1",
														"nodeType": "YulTypedName",
														"src": "4475:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:1",
														"nodeType": "YulTypedName",
														"src": "4485:8:1",
														"type": ""
													}
												],
												"src": "4431:117:1"
											},
											{
												"body": {
													"nativeSrc": "4605:118:1",
													"nodeType": "YulBlock",
													"src": "4605:118:1",
													"statements": [
														{
															"nativeSrc": "4615:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:1"
																				},
																				"nativeSrc": "4660:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:1"
																				},
																				"nativeSrc": "4675:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:1"
																		},
																		"nativeSrc": "4631:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:1"
																},
																"nativeSrc": "4627:56:1",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:1",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:1",
															"nodeType": "YulAssignment",
															"src": "4692:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:1"
																},
																"nativeSrc": "4702:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:1",
														"nodeType": "YulTypedName",
														"src": "4582:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:1",
														"nodeType": "YulTypedName",
														"src": "4588:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:1",
														"nodeType": "YulTypedName",
														"src": "4598:6:1",
														"type": ""
													}
												],
												"src": "4554:169:1"
											},
											{
												"body": {
													"nativeSrc": "4809:214:1",
													"nodeType": "YulBlock",
													"src": "4809:214:1",
													"statements": [
														{
															"nativeSrc": "4942:37:1",
															"nodeType": "YulAssignment",
															"src": "4942:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:1"
																},
																"nativeSrc": "4950:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:1"
																}
															]
														},
														{
															"nativeSrc": "4988:29:1",
															"nodeType": "YulAssignment",
															"src": "4988:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:1"
																		},
																		"nativeSrc": "5005:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:1"
																},
																"nativeSrc": "4996:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:1",
														"nodeType": "YulTypedName",
														"src": "4790:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:1",
														"nodeType": "YulTypedName",
														"src": "4796:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:1",
														"nodeType": "YulTypedName",
														"src": "4804:4:1",
														"type": ""
													}
												],
												"src": "4728:295:1"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:1",
													"nodeType": "YulBlock",
													"src": "5120:1303:1",
													"statements": [
														{
															"nativeSrc": "5131:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:1"
																},
																"nativeSrc": "5145:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:1",
																"nodeType": "YulBlock",
																"src": "5267:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:1"
																			},
																			"nativeSrc": "5269:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:1"
																		},
																		"nativeSrc": "5269:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:1",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:1"
																},
																"nativeSrc": "5236:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:1"
															},
															"nativeSrc": "5233:56:1",
															"nodeType": "YulIf",
															"src": "5233:56:1"
														},
														{
															"nativeSrc": "5299:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:1"
																		},
																		"nativeSrc": "5339:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:1"
																},
																"nativeSrc": "5313:38:1",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:1"
																},
																"nativeSrc": "5398:67:1",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:1"
															},
															"nativeSrc": "5398:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:1"
														},
														{
															"nativeSrc": "5475:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:1",
																"nodeType": "YulLiteral",
																"src": "5492:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:1",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:1",
															"nodeType": "YulAssignment",
															"src": "5503:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:1",
																"nodeType": "YulLiteral",
																"src": "5516:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:1",
																		"nodeType": "YulBlock",
																		"src": "5567:611:1",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:1",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:1"
																							},
																							"nativeSrc": "5608:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:1"
																					},
																					"nativeSrc": "5596:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:1",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:1"
																					},
																					"nativeSrc": "5646:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:1",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:1",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:1",
																					"nodeType": "YulBlock",
																					"src": "5764:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:1"
																												},
																												"nativeSrc": "5803:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:1"
																										},
																										"nativeSrc": "5797:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:1"
																								},
																								"nativeSrc": "5782:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:1"
																							},
																							"nativeSrc": "5782:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:1"
																						},
																						{
																							"nativeSrc": "5841:24:1",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:1",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:1"
																								},
																								"nativeSrc": "5851:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:1",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:1",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:1"
																								},
																								"nativeSrc": "5895:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:1"
																					},
																					"nativeSrc": "5727:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:1"
																				},
																				"nativeSrc": "5719:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:1",
																					"nodeType": "YulBlock",
																					"src": "5742:21:1",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:1",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:1",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:1"
																								},
																								"nativeSrc": "5749:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:1",
																					"nodeType": "YulBlock",
																					"src": "5723:3:1",
																					"statements": []
																				},
																				"src": "5719:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:1",
																					"nodeType": "YulBlock",
																					"src": "5963:156:1",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:1"
																										},
																										"nativeSrc": "6004:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:1"
																								},
																								"nativeSrc": "5998:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:1",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:1",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:1"
																												},
																												"nativeSrc": "6086:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:1"
																										},
																										"nativeSrc": "6056:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:1"
																								},
																								"nativeSrc": "6041:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:1"
																							},
																							"nativeSrc": "6041:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:1"
																					},
																					"nativeSrc": "5943:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:1"
																				},
																				"nativeSrc": "5940:179:1",
																				"nodeType": "YulIf",
																				"src": "5940:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:1",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:1"
																									},
																									"nativeSrc": "6149:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:1",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:1"
																							},
																							"nativeSrc": "6145:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:1"
																					},
																					"nativeSrc": "6132:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:1"
																				},
																				"nativeSrc": "6132:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:1"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:1",
																	"nodeType": "YulCase",
																	"src": "5560:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:1",
																		"nodeType": "YulBlock",
																		"src": "6195:222:1",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:1",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:1",
																					"nodeType": "YulBlock",
																					"src": "6246:67:1",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:1",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:1"
																										},
																										"nativeSrc": "6279:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:1"
																								},
																								"nativeSrc": "6273:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:1"
																				},
																				"nativeSrc": "6236:77:1",
																				"nodeType": "YulIf",
																				"src": "6236:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:1"
																							},
																							"nativeSrc": "6339:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:1"
																					},
																					"nativeSrc": "6326:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:1"
																				},
																				"nativeSrc": "6326:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:1"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:1",
																	"nodeType": "YulCase",
																	"src": "6187:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:1"
																},
																"nativeSrc": "5537:14:1",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:1"
															},
															"nativeSrc": "5530:887:1",
															"nodeType": "YulSwitch",
															"src": "5530:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:1",
														"nodeType": "YulTypedName",
														"src": "5109:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:1",
														"nodeType": "YulTypedName",
														"src": "5115:3:1",
														"type": ""
													}
												],
												"src": "5028:1395:1"
											},
											{
												"body": {
													"nativeSrc": "6494:53:1",
													"nodeType": "YulBlock",
													"src": "6494:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:1"
																		},
																		"nativeSrc": "6516:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:1"
																},
																"nativeSrc": "6504:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:1"
															},
															"nativeSrc": "6504:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:1",
														"nodeType": "YulTypedName",
														"src": "6482:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:1",
														"nodeType": "YulTypedName",
														"src": "6489:3:1",
														"type": ""
													}
												],
												"src": "6429:118:1"
											},
											{
												"body": {
													"nativeSrc": "6651:124:1",
													"nodeType": "YulBlock",
													"src": "6651:124:1",
													"statements": [
														{
															"nativeSrc": "6661:26:1",
															"nodeType": "YulAssignment",
															"src": "6661:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:1"
																},
																"nativeSrc": "6669:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:1"
																		},
																		"nativeSrc": "6750:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:1"
																},
																"nativeSrc": "6697:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:1"
															},
															"nativeSrc": "6697:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:1",
														"nodeType": "YulTypedName",
														"src": "6623:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:1",
														"nodeType": "YulTypedName",
														"src": "6635:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:1",
														"nodeType": "YulTypedName",
														"src": "6646:4:1",
														"type": ""
													}
												],
												"src": "6553:222:1"
											},
											{
												"body": {
													"nativeSrc": "6809:152:1",
													"nodeType": "YulBlock",
													"src": "6809:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6826:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6826:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6829:77:1",
																		"nodeType": "YulLiteral",
																		"src": "6829:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6819:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6819:6:1"
																},
																"nativeSrc": "6819:88:1",
																"nodeType": "YulFunctionCall",
																"src": "6819:88:1"
															},
															"nativeSrc": "6819:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "6819:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6923:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6923:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6926:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6926:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6916:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:1"
																},
																"nativeSrc": "6916:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6916:15:1"
															},
															"nativeSrc": "6916:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6916:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6947:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6947:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6950:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6950:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6940:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:1"
																},
																"nativeSrc": "6940:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6940:15:1"
															},
															"nativeSrc": "6940:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6940:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6781:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "6781:180:1"
											},
											{
												"body": {
													"nativeSrc": "7018:51:1",
													"nodeType": "YulBlock",
													"src": "7018:51:1",
													"statements": [
														{
															"nativeSrc": "7028:34:1",
															"nodeType": "YulAssignment",
															"src": "7028:34:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7053:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7053:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7056:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7056:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7049:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7049:3:1"
																},
																"nativeSrc": "7049:13:1",
																"nodeType": "YulFunctionCall",
																"src": "7049:13:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7028:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "7028:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "6967:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6999:5:1",
														"nodeType": "YulTypedName",
														"src": "6999:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7009:8:1",
														"nodeType": "YulTypedName",
														"src": "7009:8:1",
														"type": ""
													}
												],
												"src": "6967:102:1"
											},
											{
												"body": {
													"nativeSrc": "7148:775:1",
													"nodeType": "YulBlock",
													"src": "7148:775:1",
													"statements": [
														{
															"nativeSrc": "7158:15:1",
															"nodeType": "YulAssignment",
															"src": "7158:15:1",
															"value": {
																"name": "_power",
																"nativeSrc": "7167:6:1",
																"nodeType": "YulIdentifier",
																"src": "7167:6:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7158:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7158:5:1"
																}
															]
														},
														{
															"nativeSrc": "7182:14:1",
															"nodeType": "YulAssignment",
															"src": "7182:14:1",
															"value": {
																"name": "_base",
																"nativeSrc": "7191:5:1",
																"nodeType": "YulIdentifier",
																"src": "7191:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7182:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7182:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7240:677:1",
																"nodeType": "YulBlock",
																"src": "7240:677:1",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "7328:22:1",
																			"nodeType": "YulBlock",
																			"src": "7328:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7330:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "7330:16:1"
																						},
																						"nativeSrc": "7330:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7330:18:1"
																					},
																					"nativeSrc": "7330:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "7330:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7306:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "7306:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "7316:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "7316:3:1"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "7321:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "7321:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "7312:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "7312:3:1"
																					},
																					"nativeSrc": "7312:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "7312:14:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7303:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "7303:2:1"
																			},
																			"nativeSrc": "7303:24:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7303:24:1"
																		},
																		"nativeSrc": "7300:50:1",
																		"nodeType": "YulIf",
																		"src": "7300:50:1"
																	},
																	{
																		"body": {
																			"nativeSrc": "7395:419:1",
																			"nodeType": "YulBlock",
																			"src": "7395:419:1",
																			"statements": [
																				{
																					"nativeSrc": "7775:25:1",
																					"nodeType": "YulAssignment",
																					"src": "7775:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "7788:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "7788:5:1"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "7795:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "7795:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "7784:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "7784:3:1"
																						},
																						"nativeSrc": "7784:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7784:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "7775:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "7775:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7370:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "7370:8:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7380:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7380:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7366:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7366:3:1"
																			},
																			"nativeSrc": "7366:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7366:16:1"
																		},
																		"nativeSrc": "7363:451:1",
																		"nodeType": "YulIf",
																		"src": "7363:451:1"
																	},
																	{
																		"nativeSrc": "7827:23:1",
																		"nodeType": "YulAssignment",
																		"src": "7827:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7839:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "7839:4:1"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "7845:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "7845:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "7835:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7835:3:1"
																			},
																			"nativeSrc": "7835:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7835:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "7827:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7827:4:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7863:44:1",
																		"nodeType": "YulAssignment",
																		"src": "7863:44:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7898:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "7898:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "7875:22:1",
																				"nodeType": "YulIdentifier",
																				"src": "7875:22:1"
																			},
																			"nativeSrc": "7875:32:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7875:32:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "7863:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "7863:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7216:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "7216:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7226:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7226:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7213:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7213:2:1"
																},
																"nativeSrc": "7213:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7213:15:1"
															},
															"nativeSrc": "7205:712:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7229:2:1",
																"nodeType": "YulBlock",
																"src": "7229:2:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "7209:3:1",
																"nodeType": "YulBlock",
																"src": "7209:3:1",
																"statements": []
															},
															"src": "7205:712:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "7075:848:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "7103:6:1",
														"nodeType": "YulTypedName",
														"src": "7103:6:1",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "7111:5:1",
														"nodeType": "YulTypedName",
														"src": "7111:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7118:8:1",
														"nodeType": "YulTypedName",
														"src": "7118:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7128:3:1",
														"nodeType": "YulTypedName",
														"src": "7128:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7136:5:1",
														"nodeType": "YulTypedName",
														"src": "7136:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "7143:4:1",
														"nodeType": "YulTypedName",
														"src": "7143:4:1",
														"type": ""
													}
												],
												"src": "7075:848:1"
											},
											{
												"body": {
													"nativeSrc": "7989:1013:1",
													"nodeType": "YulBlock",
													"src": "7989:1013:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "8184:20:1",
																"nodeType": "YulBlock",
																"src": "8184:20:1",
																"statements": [
																	{
																		"nativeSrc": "8186:10:1",
																		"nodeType": "YulAssignment",
																		"src": "8186:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8195:1:1",
																			"nodeType": "YulLiteral",
																			"src": "8195:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8186:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8186:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8197:5:1",
																		"nodeType": "YulLeave",
																		"src": "8197:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8174:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "8174:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8167:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8167:6:1"
																},
																"nativeSrc": "8167:16:1",
																"nodeType": "YulFunctionCall",
																"src": "8167:16:1"
															},
															"nativeSrc": "8164:40:1",
															"nodeType": "YulIf",
															"src": "8164:40:1"
														},
														{
															"body": {
																"nativeSrc": "8229:20:1",
																"nodeType": "YulBlock",
																"src": "8229:20:1",
																"statements": [
																	{
																		"nativeSrc": "8231:10:1",
																		"nodeType": "YulAssignment",
																		"src": "8231:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8240:1:1",
																			"nodeType": "YulLiteral",
																			"src": "8240:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8231:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8231:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8242:5:1",
																		"nodeType": "YulLeave",
																		"src": "8242:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8223:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8223:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8216:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8216:6:1"
																},
																"nativeSrc": "8216:12:1",
																"nodeType": "YulFunctionCall",
																"src": "8216:12:1"
															},
															"nativeSrc": "8213:36:1",
															"nodeType": "YulIf",
															"src": "8213:36:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8359:20:1",
																		"nodeType": "YulBlock",
																		"src": "8359:20:1",
																		"statements": [
																			{
																				"nativeSrc": "8361:10:1",
																				"nodeType": "YulAssignment",
																				"src": "8361:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8370:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8361:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "8361:5:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8372:5:1",
																				"nodeType": "YulLeave",
																				"src": "8372:5:1"
																			}
																		]
																	},
																	"nativeSrc": "8352:27:1",
																	"nodeType": "YulCase",
																	"src": "8352:27:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8357:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8357:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8403:176:1",
																		"nodeType": "YulBlock",
																		"src": "8403:176:1",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8438:22:1",
																					"nodeType": "YulBlock",
																					"src": "8438:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8440:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "8440:16:1"
																								},
																								"nativeSrc": "8440:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8440:18:1"
																							},
																							"nativeSrc": "8440:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "8440:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8423:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "8423:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8433:3:1",
																							"nodeType": "YulLiteral",
																							"src": "8433:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8420:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "8420:2:1"
																					},
																					"nativeSrc": "8420:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8420:17:1"
																				},
																				"nativeSrc": "8417:43:1",
																				"nodeType": "YulIf",
																				"src": "8417:43:1"
																			},
																			{
																				"nativeSrc": "8473:25:1",
																				"nodeType": "YulAssignment",
																				"src": "8473:25:1",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8486:1:1",
																							"nodeType": "YulLiteral",
																							"src": "8486:1:1",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "8489:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "8489:8:1"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8482:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "8482:3:1"
																					},
																					"nativeSrc": "8482:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8482:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8473:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "8473:5:1"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8529:22:1",
																					"nodeType": "YulBlock",
																					"src": "8529:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8531:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "8531:16:1"
																								},
																								"nativeSrc": "8531:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8531:18:1"
																							},
																							"nativeSrc": "8531:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "8531:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "8517:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "8517:5:1"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "8524:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "8524:3:1"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8514:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "8514:2:1"
																					},
																					"nativeSrc": "8514:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8514:14:1"
																				},
																				"nativeSrc": "8511:40:1",
																				"nodeType": "YulIf",
																				"src": "8511:40:1"
																			},
																			{
																				"nativeSrc": "8564:5:1",
																				"nodeType": "YulLeave",
																				"src": "8564:5:1"
																			}
																		]
																	},
																	"nativeSrc": "8388:191:1",
																	"nodeType": "YulCase",
																	"src": "8388:191:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8393:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8393:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "8309:4:1",
																"nodeType": "YulIdentifier",
																"src": "8309:4:1"
															},
															"nativeSrc": "8302:277:1",
															"nodeType": "YulSwitch",
															"src": "8302:277:1"
														},
														{
															"body": {
																"nativeSrc": "8711:123:1",
																"nodeType": "YulBlock",
																"src": "8711:123:1",
																"statements": [
																	{
																		"nativeSrc": "8725:28:1",
																		"nodeType": "YulAssignment",
																		"src": "8725:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8738:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "8738:4:1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8744:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "8744:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "8734:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8734:3:1"
																			},
																			"nativeSrc": "8734:19:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8734:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8725:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8725:5:1"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8784:22:1",
																			"nodeType": "YulBlock",
																			"src": "8784:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8786:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "8786:16:1"
																						},
																						"nativeSrc": "8786:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "8786:18:1"
																					},
																					"nativeSrc": "8786:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "8786:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "8772:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "8772:5:1"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "8779:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8779:3:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8769:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "8769:2:1"
																			},
																			"nativeSrc": "8769:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8769:14:1"
																		},
																		"nativeSrc": "8766:40:1",
																		"nodeType": "YulIf",
																		"src": "8766:40:1"
																	},
																	{
																		"nativeSrc": "8819:5:1",
																		"nodeType": "YulLeave",
																		"src": "8819:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8614:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "8614:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8620:2:1",
																						"nodeType": "YulLiteral",
																						"src": "8620:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8611:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8611:2:1"
																				},
																				"nativeSrc": "8611:12:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8611:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8628:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "8628:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8638:2:1",
																						"nodeType": "YulLiteral",
																						"src": "8638:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8625:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8625:2:1"
																				},
																				"nativeSrc": "8625:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8625:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8607:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8607:3:1"
																		},
																		"nativeSrc": "8607:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8607:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8663:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "8663:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8669:3:1",
																						"nodeType": "YulLiteral",
																						"src": "8669:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8660:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8660:2:1"
																				},
																				"nativeSrc": "8660:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8660:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8678:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "8678:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8688:2:1",
																						"nodeType": "YulLiteral",
																						"src": "8688:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8675:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8675:2:1"
																				},
																				"nativeSrc": "8675:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8675:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8656:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8656:3:1"
																		},
																		"nativeSrc": "8656:36:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8656:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8591:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8591:2:1"
																},
																"nativeSrc": "8591:111:1",
																"nodeType": "YulFunctionCall",
																"src": "8591:111:1"
															},
															"nativeSrc": "8588:246:1",
															"nodeType": "YulIf",
															"src": "8588:246:1"
														},
														{
															"nativeSrc": "8844:57:1",
															"nodeType": "YulAssignment",
															"src": "8844:57:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8878:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8878:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8881:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8881:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8887:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "8887:8:1"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "8897:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8897:3:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "8859:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "8859:18:1"
																},
																"nativeSrc": "8859:42:1",
																"nodeType": "YulFunctionCall",
																"src": "8859:42:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8844:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8844:5:1"
																},
																{
																	"name": "base",
																	"nativeSrc": "8851:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8851:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8940:22:1",
																"nodeType": "YulBlock",
																"src": "8940:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8942:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8942:16:1"
																			},
																			"nativeSrc": "8942:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8942:18:1"
																		},
																		"nativeSrc": "8942:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8942:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8917:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8917:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "8928:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8928:3:1"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "8933:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8933:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "8924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8924:3:1"
																		},
																		"nativeSrc": "8924:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8924:14:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8914:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8914:2:1"
																},
																"nativeSrc": "8914:25:1",
																"nodeType": "YulFunctionCall",
																"src": "8914:25:1"
															},
															"nativeSrc": "8911:51:1",
															"nodeType": "YulIf",
															"src": "8911:51:1"
														},
														{
															"nativeSrc": "8971:25:1",
															"nodeType": "YulAssignment",
															"src": "8971:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8984:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8984:5:1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8991:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8991:4:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8980:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8980:3:1"
																},
																"nativeSrc": "8980:16:1",
																"nodeType": "YulFunctionCall",
																"src": "8980:16:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8971:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8971:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "7929:1073:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7959:4:1",
														"nodeType": "YulTypedName",
														"src": "7959:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7965:8:1",
														"nodeType": "YulTypedName",
														"src": "7965:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7975:3:1",
														"nodeType": "YulTypedName",
														"src": "7975:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7983:5:1",
														"nodeType": "YulTypedName",
														"src": "7983:5:1",
														"type": ""
													}
												],
												"src": "7929:1073:1"
											},
											{
												"body": {
													"nativeSrc": "9051:43:1",
													"nodeType": "YulBlock",
													"src": "9051:43:1",
													"statements": [
														{
															"nativeSrc": "9061:27:1",
															"nodeType": "YulAssignment",
															"src": "9061:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9076:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "9076:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9083:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9083:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9072:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9072:3:1"
																},
																"nativeSrc": "9072:16:1",
																"nodeType": "YulFunctionCall",
																"src": "9072:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9061:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "9061:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "9008:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9033:5:1",
														"nodeType": "YulTypedName",
														"src": "9033:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9043:7:1",
														"nodeType": "YulTypedName",
														"src": "9043:7:1",
														"type": ""
													}
												],
												"src": "9008:86:1"
											},
											{
												"body": {
													"nativeSrc": "9164:217:1",
													"nodeType": "YulBlock",
													"src": "9164:217:1",
													"statements": [
														{
															"nativeSrc": "9174:31:1",
															"nodeType": "YulAssignment",
															"src": "9174:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9200:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9200:4:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9182:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9182:17:1"
																},
																"nativeSrc": "9182:23:1",
																"nodeType": "YulFunctionCall",
																"src": "9182:23:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9174:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9174:4:1"
																}
															]
														},
														{
															"nativeSrc": "9214:37:1",
															"nodeType": "YulAssignment",
															"src": "9214:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9242:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "9242:8:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "9226:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "9226:15:1"
																},
																"nativeSrc": "9226:25:1",
																"nodeType": "YulFunctionCall",
																"src": "9226:25:1"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "9214:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "9214:8:1"
																}
															]
														},
														{
															"nativeSrc": "9261:113:1",
															"nodeType": "YulAssignment",
															"src": "9261:113:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9291:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9291:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9297:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "9297:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9307:66:1",
																		"nodeType": "YulLiteral",
																		"src": "9307:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "9270:20:1",
																	"nodeType": "YulIdentifier",
																	"src": "9270:20:1"
																},
																"nativeSrc": "9270:104:1",
																"nodeType": "YulFunctionCall",
																"src": "9270:104:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9261:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "9261:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "9100:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9139:4:1",
														"nodeType": "YulTypedName",
														"src": "9139:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9145:8:1",
														"nodeType": "YulTypedName",
														"src": "9145:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9158:5:1",
														"nodeType": "YulTypedName",
														"src": "9158:5:1",
														"type": ""
													}
												],
												"src": "9100:281:1"
											},
											{
												"body": {
													"nativeSrc": "9435:362:1",
													"nodeType": "YulBlock",
													"src": "9435:362:1",
													"statements": [
														{
															"nativeSrc": "9445:25:1",
															"nodeType": "YulAssignment",
															"src": "9445:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9468:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9468:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9450:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9450:17:1"
																},
																"nativeSrc": "9450:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9450:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9445:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9445:1:1"
																}
															]
														},
														{
															"nativeSrc": "9479:25:1",
															"nodeType": "YulAssignment",
															"src": "9479:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9502:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9502:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9484:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9484:17:1"
																},
																"nativeSrc": "9484:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9484:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9479:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9479:1:1"
																}
															]
														},
														{
															"nativeSrc": "9513:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "9513:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9536:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9536:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9539:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9539:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9532:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9532:3:1"
																},
																"nativeSrc": "9532:9:1",
																"nodeType": "YulFunctionCall",
																"src": "9532:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9517:11:1",
																	"nodeType": "YulTypedName",
																	"src": "9517:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9550:41:1",
															"nodeType": "YulAssignment",
															"src": "9550:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9579:11:1",
																		"nodeType": "YulIdentifier",
																		"src": "9579:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9561:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9561:17:1"
																},
																"nativeSrc": "9561:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9561:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9550:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "9550:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9768:22:1",
																"nodeType": "YulBlock",
																"src": "9768:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9770:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "9770:16:1"
																			},
																			"nativeSrc": "9770:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9770:18:1"
																		},
																		"nativeSrc": "9770:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9770:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9701:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "9701:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9694:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "9694:6:1"
																				},
																				"nativeSrc": "9694:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9694:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9724:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "9724:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9731:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "9731:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9740:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "9740:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9727:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "9727:3:1"
																						},
																						"nativeSrc": "9727:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "9727:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9721:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "9721:2:1"
																				},
																				"nativeSrc": "9721:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9721:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9674:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "9674:2:1"
																		},
																		"nativeSrc": "9674:83:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9674:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9654:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9654:6:1"
																},
																"nativeSrc": "9654:113:1",
																"nodeType": "YulFunctionCall",
																"src": "9654:113:1"
															},
															"nativeSrc": "9651:139:1",
															"nodeType": "YulIf",
															"src": "9651:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9387:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9418:1:1",
														"nodeType": "YulTypedName",
														"src": "9418:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9421:1:1",
														"nodeType": "YulTypedName",
														"src": "9421:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9427:7:1",
														"nodeType": "YulTypedName",
														"src": "9427:7:1",
														"type": ""
													}
												],
												"src": "9387:410:1"
											},
											{
												"body": {
													"nativeSrc": "9848:32:1",
													"nodeType": "YulBlock",
													"src": "9848:32:1",
													"statements": [
														{
															"nativeSrc": "9858:16:1",
															"nodeType": "YulAssignment",
															"src": "9858:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "9869:5:1",
																"nodeType": "YulIdentifier",
																"src": "9869:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9858:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "9858:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "9803:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9830:5:1",
														"nodeType": "YulTypedName",
														"src": "9830:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9840:7:1",
														"nodeType": "YulTypedName",
														"src": "9840:7:1",
														"type": ""
													}
												],
												"src": "9803:77:1"
											},
											{
												"body": {
													"nativeSrc": "9951:53:1",
													"nodeType": "YulBlock",
													"src": "9951:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9968:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9968:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9991:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "9991:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "9973:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "9973:17:1"
																		},
																		"nativeSrc": "9973:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9973:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9961:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9961:6:1"
																},
																"nativeSrc": "9961:37:1",
																"nodeType": "YulFunctionCall",
																"src": "9961:37:1"
															},
															"nativeSrc": "9961:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "9961:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "9886:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9939:5:1",
														"nodeType": "YulTypedName",
														"src": "9939:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9946:3:1",
														"nodeType": "YulTypedName",
														"src": "9946:3:1",
														"type": ""
													}
												],
												"src": "9886:118:1"
											},
											{
												"body": {
													"nativeSrc": "10075:53:1",
													"nodeType": "YulBlock",
													"src": "10075:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10092:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10092:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10115:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "10115:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10097:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "10097:17:1"
																		},
																		"nativeSrc": "10097:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10097:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10085:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10085:6:1"
																},
																"nativeSrc": "10085:37:1",
																"nodeType": "YulFunctionCall",
																"src": "10085:37:1"
															},
															"nativeSrc": "10085:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "10085:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10010:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10063:5:1",
														"nodeType": "YulTypedName",
														"src": "10063:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10070:3:1",
														"nodeType": "YulTypedName",
														"src": "10070:3:1",
														"type": ""
													}
												],
												"src": "10010:118:1"
											},
											{
												"body": {
													"nativeSrc": "10344:454:1",
													"nodeType": "YulBlock",
													"src": "10344:454:1",
													"statements": [
														{
															"nativeSrc": "10354:27:1",
															"nodeType": "YulAssignment",
															"src": "10354:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10366:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10366:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10377:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10377:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10362:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10362:3:1"
																},
																"nativeSrc": "10362:19:1",
																"nodeType": "YulFunctionCall",
																"src": "10362:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10354:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10354:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10435:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10435:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10448:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10448:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10459:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10459:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10444:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10444:3:1"
																		},
																		"nativeSrc": "10444:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10444:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "10391:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10391:43:1"
																},
																"nativeSrc": "10391:71:1",
																"nodeType": "YulFunctionCall",
																"src": "10391:71:1"
															},
															"nativeSrc": "10391:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "10391:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10516:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10516:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10529:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10529:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10540:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10540:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10525:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10525:3:1"
																		},
																		"nativeSrc": "10525:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10525:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "10472:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10472:43:1"
																},
																"nativeSrc": "10472:72:1",
																"nodeType": "YulFunctionCall",
																"src": "10472:72:1"
															},
															"nativeSrc": "10472:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "10472:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10598:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10598:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10611:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10611:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10622:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10622:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10607:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10607:3:1"
																		},
																		"nativeSrc": "10607:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10607:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "10554:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10554:43:1"
																},
																"nativeSrc": "10554:72:1",
																"nodeType": "YulFunctionCall",
																"src": "10554:72:1"
															},
															"nativeSrc": "10554:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "10554:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "10680:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10680:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10693:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10693:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10704:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10704:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10689:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10689:3:1"
																		},
																		"nativeSrc": "10689:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10689:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10636:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10636:43:1"
																},
																"nativeSrc": "10636:72:1",
																"nodeType": "YulFunctionCall",
																"src": "10636:72:1"
															},
															"nativeSrc": "10636:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "10636:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "10762:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10762:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10775:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10775:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10786:3:1",
																				"nodeType": "YulLiteral",
																				"src": "10786:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10771:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10771:3:1"
																		},
																		"nativeSrc": "10771:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10771:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10718:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10718:43:1"
																},
																"nativeSrc": "10718:73:1",
																"nodeType": "YulFunctionCall",
																"src": "10718:73:1"
															},
															"nativeSrc": "10718:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "10718:73:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "10134:664:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10284:9:1",
														"nodeType": "YulTypedName",
														"src": "10284:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10296:6:1",
														"nodeType": "YulTypedName",
														"src": "10296:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10304:6:1",
														"nodeType": "YulTypedName",
														"src": "10304:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10312:6:1",
														"nodeType": "YulTypedName",
														"src": "10312:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10320:6:1",
														"nodeType": "YulTypedName",
														"src": "10320:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10328:6:1",
														"nodeType": "YulTypedName",
														"src": "10328:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10339:4:1",
														"nodeType": "YulTypedName",
														"src": "10339:4:1",
														"type": ""
													}
												],
												"src": "10134:664:1"
											},
											{
												"body": {
													"nativeSrc": "10900:73:1",
													"nodeType": "YulBlock",
													"src": "10900:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10917:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10917:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10922:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10922:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10910:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10910:6:1"
																},
																"nativeSrc": "10910:19:1",
																"nodeType": "YulFunctionCall",
																"src": "10910:19:1"
															},
															"nativeSrc": "10910:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "10910:19:1"
														},
														{
															"nativeSrc": "10938:29:1",
															"nodeType": "YulAssignment",
															"src": "10938:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10957:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10957:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10962:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10962:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10953:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10953:3:1"
																},
																"nativeSrc": "10953:14:1",
																"nodeType": "YulFunctionCall",
																"src": "10953:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10938:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "10938:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "10804:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10872:3:1",
														"nodeType": "YulTypedName",
														"src": "10872:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10877:6:1",
														"nodeType": "YulTypedName",
														"src": "10877:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10888:11:1",
														"nodeType": "YulTypedName",
														"src": "10888:11:1",
														"type": ""
													}
												],
												"src": "10804:169:1"
											},
											{
												"body": {
													"nativeSrc": "11041:184:1",
													"nodeType": "YulBlock",
													"src": "11041:184:1",
													"statements": [
														{
															"nativeSrc": "11051:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "11051:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "11060:1:1",
																"nodeType": "YulLiteral",
																"src": "11060:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "11055:1:1",
																	"nodeType": "YulTypedName",
																	"src": "11055:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11120:63:1",
																"nodeType": "YulBlock",
																"src": "11120:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "11145:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "11145:3:1"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "11150:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "11150:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "11141:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "11141:3:1"
																					},
																					"nativeSrc": "11141:11:1",
																					"nodeType": "YulFunctionCall",
																					"src": "11141:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "11164:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "11164:3:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "11169:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "11169:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "11160:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "11160:3:1"
																							},
																							"nativeSrc": "11160:11:1",
																							"nodeType": "YulFunctionCall",
																							"src": "11160:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "11154:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "11154:5:1"
																					},
																					"nativeSrc": "11154:18:1",
																					"nodeType": "YulFunctionCall",
																					"src": "11154:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11134:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11134:6:1"
																			},
																			"nativeSrc": "11134:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11134:39:1"
																		},
																		"nativeSrc": "11134:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11134:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "11081:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11081:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11084:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11084:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11078:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "11078:2:1"
																},
																"nativeSrc": "11078:13:1",
																"nodeType": "YulFunctionCall",
																"src": "11078:13:1"
															},
															"nativeSrc": "11070:113:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "11092:19:1",
																"nodeType": "YulBlock",
																"src": "11092:19:1",
																"statements": [
																	{
																		"nativeSrc": "11094:15:1",
																		"nodeType": "YulAssignment",
																		"src": "11094:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "11103:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "11103:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11106:2:1",
																					"nodeType": "YulLiteral",
																					"src": "11106:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11099:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "11099:3:1"
																			},
																			"nativeSrc": "11099:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11099:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "11094:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "11094:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "11074:3:1",
																"nodeType": "YulBlock",
																"src": "11074:3:1",
																"statements": []
															},
															"src": "11070:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "11203:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "11203:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "11208:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11208:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11199:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11199:3:1"
																		},
																		"nativeSrc": "11199:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11199:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11217:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11217:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11192:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11192:6:1"
																},
																"nativeSrc": "11192:27:1",
																"nodeType": "YulFunctionCall",
																"src": "11192:27:1"
															},
															"nativeSrc": "11192:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "11192:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "10979:246:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "11023:3:1",
														"nodeType": "YulTypedName",
														"src": "11023:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "11028:3:1",
														"nodeType": "YulTypedName",
														"src": "11028:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11033:6:1",
														"nodeType": "YulTypedName",
														"src": "11033:6:1",
														"type": ""
													}
												],
												"src": "10979:246:1"
											},
											{
												"body": {
													"nativeSrc": "11279:54:1",
													"nodeType": "YulBlock",
													"src": "11279:54:1",
													"statements": [
														{
															"nativeSrc": "11289:38:1",
															"nodeType": "YulAssignment",
															"src": "11289:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11307:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "11307:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11314:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11314:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11303:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11303:3:1"
																		},
																		"nativeSrc": "11303:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11303:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11323:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11323:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "11319:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11319:3:1"
																		},
																		"nativeSrc": "11319:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11319:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11299:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11299:3:1"
																},
																"nativeSrc": "11299:28:1",
																"nodeType": "YulFunctionCall",
																"src": "11299:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "11289:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11289:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "11231:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11262:5:1",
														"nodeType": "YulTypedName",
														"src": "11262:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "11272:6:1",
														"nodeType": "YulTypedName",
														"src": "11272:6:1",
														"type": ""
													}
												],
												"src": "11231:102:1"
											},
											{
												"body": {
													"nativeSrc": "11431:285:1",
													"nodeType": "YulBlock",
													"src": "11431:285:1",
													"statements": [
														{
															"nativeSrc": "11441:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "11441:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11488:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "11488:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "11455:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "11455:32:1"
																},
																"nativeSrc": "11455:39:1",
																"nodeType": "YulFunctionCall",
																"src": "11455:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11445:6:1",
																	"nodeType": "YulTypedName",
																	"src": "11445:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11503:78:1",
															"nodeType": "YulAssignment",
															"src": "11503:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11569:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11569:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11574:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11574:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11510:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "11510:58:1"
																},
																"nativeSrc": "11510:71:1",
																"nodeType": "YulFunctionCall",
																"src": "11510:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11503:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11503:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11629:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "11629:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11636:4:1",
																				"nodeType": "YulLiteral",
																				"src": "11636:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11625:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11625:3:1"
																		},
																		"nativeSrc": "11625:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11625:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11643:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11643:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11648:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11648:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "11590:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "11590:34:1"
																},
																"nativeSrc": "11590:65:1",
																"nodeType": "YulFunctionCall",
																"src": "11590:65:1"
															},
															"nativeSrc": "11590:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "11590:65:1"
														},
														{
															"nativeSrc": "11664:46:1",
															"nodeType": "YulAssignment",
															"src": "11664:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11675:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11675:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11702:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11702:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "11680:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "11680:21:1"
																		},
																		"nativeSrc": "11680:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11680:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11671:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11671:3:1"
																},
																"nativeSrc": "11671:39:1",
																"nodeType": "YulFunctionCall",
																"src": "11671:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11664:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11664:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11339:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11412:5:1",
														"nodeType": "YulTypedName",
														"src": "11412:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11419:3:1",
														"nodeType": "YulTypedName",
														"src": "11419:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11427:3:1",
														"nodeType": "YulTypedName",
														"src": "11427:3:1",
														"type": ""
													}
												],
												"src": "11339:377:1"
											},
											{
												"body": {
													"nativeSrc": "11840:195:1",
													"nodeType": "YulBlock",
													"src": "11840:195:1",
													"statements": [
														{
															"nativeSrc": "11850:26:1",
															"nodeType": "YulAssignment",
															"src": "11850:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11862:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11862:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11873:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11873:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11858:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11858:3:1"
																},
																"nativeSrc": "11858:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11858:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11850:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11850:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11897:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11897:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11908:1:1",
																				"nodeType": "YulLiteral",
																				"src": "11908:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11893:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11893:3:1"
																		},
																		"nativeSrc": "11893:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11893:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11916:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "11916:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11922:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11922:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11912:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11912:3:1"
																		},
																		"nativeSrc": "11912:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11912:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11886:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11886:6:1"
																},
																"nativeSrc": "11886:47:1",
																"nodeType": "YulFunctionCall",
																"src": "11886:47:1"
															},
															"nativeSrc": "11886:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "11886:47:1"
														},
														{
															"nativeSrc": "11942:86:1",
															"nodeType": "YulAssignment",
															"src": "11942:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12014:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12014:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "12023:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "12023:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11950:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "11950:63:1"
																},
																"nativeSrc": "11950:78:1",
																"nodeType": "YulFunctionCall",
																"src": "11950:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11942:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11942:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11722:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11812:9:1",
														"nodeType": "YulTypedName",
														"src": "11812:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11824:6:1",
														"nodeType": "YulTypedName",
														"src": "11824:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11835:4:1",
														"nodeType": "YulTypedName",
														"src": "11835:4:1",
														"type": ""
													}
												],
												"src": "11722:313:1"
											},
											{
												"body": {
													"nativeSrc": "12099:40:1",
													"nodeType": "YulBlock",
													"src": "12099:40:1",
													"statements": [
														{
															"nativeSrc": "12110:22:1",
															"nodeType": "YulAssignment",
															"src": "12110:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12126:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12126:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12120:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "12120:5:1"
																},
																"nativeSrc": "12120:12:1",
																"nodeType": "YulFunctionCall",
																"src": "12120:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12110:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12110:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "12041:98:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12082:5:1",
														"nodeType": "YulTypedName",
														"src": "12082:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12092:6:1",
														"nodeType": "YulTypedName",
														"src": "12092:6:1",
														"type": ""
													}
												],
												"src": "12041:98:1"
											},
											{
												"body": {
													"nativeSrc": "12201:60:1",
													"nodeType": "YulBlock",
													"src": "12201:60:1",
													"statements": [
														{
															"nativeSrc": "12211:11:1",
															"nodeType": "YulAssignment",
															"src": "12211:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "12219:3:1",
																"nodeType": "YulIdentifier",
																"src": "12219:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12211:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12211:4:1"
																}
															]
														},
														{
															"nativeSrc": "12232:22:1",
															"nodeType": "YulAssignment",
															"src": "12232:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "12244:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12244:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12249:4:1",
																		"nodeType": "YulLiteral",
																		"src": "12249:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12240:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12240:3:1"
																},
																"nativeSrc": "12240:14:1",
																"nodeType": "YulFunctionCall",
																"src": "12240:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12232:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12232:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_bytes_memory_ptr",
												"nativeSrc": "12145:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "12188:3:1",
														"nodeType": "YulTypedName",
														"src": "12188:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "12196:4:1",
														"nodeType": "YulTypedName",
														"src": "12196:4:1",
														"type": ""
													}
												],
												"src": "12145:116:1"
											},
											{
												"body": {
													"nativeSrc": "12322:99:1",
													"nodeType": "YulBlock",
													"src": "12322:99:1",
													"statements": [
														{
															"nativeSrc": "12333:42:1",
															"nodeType": "YulVariableDeclaration",
															"src": "12333:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "12370:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "12370:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12364:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "12364:5:1"
																		},
																		"nativeSrc": "12364:10:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12364:10:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bytes32",
																	"nativeSrc": "12346:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "12346:17:1"
																},
																"nativeSrc": "12346:29:1",
																"nodeType": "YulFunctionCall",
																"src": "12346:29:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "12337:5:1",
																	"nodeType": "YulTypedName",
																	"src": "12337:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12385:29:1",
															"nodeType": "YulAssignment",
															"src": "12385:29:1",
															"value": {
																"name": "value",
																"nativeSrc": "12409:5:1",
																"nodeType": "YulIdentifier",
																"src": "12409:5:1"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "12385:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "12385:11:1"
																}
															]
														}
													]
												},
												"name": "read_from_memoryt_bytes32",
												"nativeSrc": "12267:154:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "12302:3:1",
														"nodeType": "YulTypedName",
														"src": "12302:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "returnValue",
														"nativeSrc": "12310:11:1",
														"nodeType": "YulTypedName",
														"src": "12310:11:1",
														"type": ""
													}
												],
												"src": "12267:154:1"
											},
											{
												"body": {
													"nativeSrc": "12517:504:1",
													"nodeType": "YulBlock",
													"src": "12517:504:1",
													"statements": [
														{
															"nativeSrc": "12528:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "12528:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12574:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12574:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "12542:31:1",
																	"nodeType": "YulIdentifier",
																	"src": "12542:31:1"
																},
																"nativeSrc": "12542:38:1",
																"nodeType": "YulFunctionCall",
																"src": "12542:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12532:6:1",
																	"nodeType": "YulTypedName",
																	"src": "12532:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12589:21:1",
															"nodeType": "YulVariableDeclaration",
															"src": "12589:21:1",
															"value": {
																"name": "array",
																"nativeSrc": "12605:5:1",
																"nodeType": "YulIdentifier",
																"src": "12605:5:1"
															},
															"variables": [
																{
																	"name": "dataArea",
																	"nativeSrc": "12593:8:1",
																	"nodeType": "YulTypedName",
																	"src": "12593:8:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12620:52:1",
															"nodeType": "YulAssignment",
															"src": "12620:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12666:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12666:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_bytes_memory_ptr",
																	"nativeSrc": "12632:33:1",
																	"nodeType": "YulIdentifier",
																	"src": "12632:33:1"
																},
																"nativeSrc": "12632:40:1",
																"nodeType": "YulFunctionCall",
																"src": "12632:40:1"
															},
															"variableNames": [
																{
																	"name": "dataArea",
																	"nativeSrc": "12620:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "12620:8:1"
																}
															]
														},
														{
															"nativeSrc": "12682:44:1",
															"nodeType": "YulAssignment",
															"src": "12682:44:1",
															"value": {
																"arguments": [
																	{
																		"name": "dataArea",
																		"nativeSrc": "12717:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "12717:8:1"
																	}
																],
																"functionName": {
																	"name": "read_from_memoryt_bytes32",
																	"nativeSrc": "12691:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "12691:25:1"
																},
																"nativeSrc": "12691:35:1",
																"nodeType": "YulFunctionCall",
																"src": "12691:35:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12682:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "12682:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12754:260:1",
																"nodeType": "YulBlock",
																"src": "12754:260:1",
																"statements": [
																	{
																		"nativeSrc": "12768:236:1",
																		"nodeType": "YulAssignment",
																		"src": "12768:236:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "12798:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "12798:5:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "12865:1:1",
																									"nodeType": "YulLiteral",
																									"src": "12865:1:1",
																									"type": "",
																									"value": "8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "12872:2:1",
																											"nodeType": "YulLiteral",
																											"src": "12872:2:1",
																											"type": "",
																											"value": "32"
																										},
																										{
																											"name": "length",
																											"nativeSrc": "12876:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "12876:6:1"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nativeSrc": "12868:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "12868:3:1"
																									},
																									"nativeSrc": "12868:15:1",
																									"nodeType": "YulFunctionCall",
																									"src": "12868:15:1"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "12861:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "12861:3:1"
																							},
																							"nativeSrc": "12861:23:1",
																							"nodeType": "YulFunctionCall",
																							"src": "12861:23:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "12906:66:1",
																							"nodeType": "YulLiteral",
																							"src": "12906:66:1",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "shift_left_dynamic",
																						"nativeSrc": "12821:18:1",
																						"nodeType": "YulIdentifier",
																						"src": "12821:18:1"
																					},
																					"nativeSrc": "12821:169:1",
																					"nodeType": "YulFunctionCall",
																					"src": "12821:169:1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12777:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "12777:3:1"
																			},
																			"nativeSrc": "12777:227:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12777:227:1"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "12768:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "12768:5:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "12742:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12742:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12750:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12750:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12739:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "12739:2:1"
																},
																"nativeSrc": "12739:14:1",
																"nodeType": "YulFunctionCall",
																"src": "12739:14:1"
															},
															"nativeSrc": "12736:278:1",
															"nodeType": "YulIf",
															"src": "12736:278:1"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32",
												"nativeSrc": "12427:594:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "12501:5:1",
														"nodeType": "YulTypedName",
														"src": "12501:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12511:5:1",
														"nodeType": "YulTypedName",
														"src": "12511:5:1",
														"type": ""
													}
												],
												"src": "12427:594:1"
											},
											{
												"body": {
													"nativeSrc": "13071:147:1",
													"nodeType": "YulBlock",
													"src": "13071:147:1",
													"statements": [
														{
															"nativeSrc": "13081:25:1",
															"nodeType": "YulAssignment",
															"src": "13081:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13104:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13104:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13086:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "13086:17:1"
																},
																"nativeSrc": "13086:20:1",
																"nodeType": "YulFunctionCall",
																"src": "13086:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13081:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "13081:1:1"
																}
															]
														},
														{
															"nativeSrc": "13115:25:1",
															"nodeType": "YulAssignment",
															"src": "13115:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13138:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13138:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13120:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "13120:17:1"
																},
																"nativeSrc": "13120:20:1",
																"nodeType": "YulFunctionCall",
																"src": "13120:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13115:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "13115:1:1"
																}
															]
														},
														{
															"nativeSrc": "13149:16:1",
															"nodeType": "YulAssignment",
															"src": "13149:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13160:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13160:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13163:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13163:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13156:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13156:3:1"
																},
																"nativeSrc": "13156:9:1",
																"nodeType": "YulFunctionCall",
																"src": "13156:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13149:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13149:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13189:22:1",
																"nodeType": "YulBlock",
																"src": "13189:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13191:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "13191:16:1"
																			},
																			"nativeSrc": "13191:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "13191:18:1"
																		},
																		"nativeSrc": "13191:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "13191:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13181:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13181:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13184:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13184:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13178:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "13178:2:1"
																},
																"nativeSrc": "13178:10:1",
																"nodeType": "YulFunctionCall",
																"src": "13178:10:1"
															},
															"nativeSrc": "13175:36:1",
															"nodeType": "YulIf",
															"src": "13175:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13027:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13058:1:1",
														"nodeType": "YulTypedName",
														"src": "13058:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13061:1:1",
														"nodeType": "YulTypedName",
														"src": "13061:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13067:3:1",
														"nodeType": "YulTypedName",
														"src": "13067:3:1",
														"type": ""
													}
												],
												"src": "13027:191:1"
											},
											{
												"body": {
													"nativeSrc": "13378:288:1",
													"nodeType": "YulBlock",
													"src": "13378:288:1",
													"statements": [
														{
															"nativeSrc": "13388:26:1",
															"nodeType": "YulAssignment",
															"src": "13388:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13400:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13400:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13411:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13411:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13396:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13396:3:1"
																},
																"nativeSrc": "13396:18:1",
																"nodeType": "YulFunctionCall",
																"src": "13396:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13388:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13388:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13468:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13468:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13481:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13481:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13492:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13492:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13477:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13477:3:1"
																		},
																		"nativeSrc": "13477:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13477:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13424:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13424:43:1"
																},
																"nativeSrc": "13424:71:1",
																"nodeType": "YulFunctionCall",
																"src": "13424:71:1"
															},
															"nativeSrc": "13424:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "13424:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13549:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13549:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13562:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13562:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13573:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13573:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13558:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13558:3:1"
																		},
																		"nativeSrc": "13558:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13558:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13505:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13505:43:1"
																},
																"nativeSrc": "13505:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13505:72:1"
															},
															"nativeSrc": "13505:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13505:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13631:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13631:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13644:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13644:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13655:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13655:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13640:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13640:3:1"
																		},
																		"nativeSrc": "13640:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13640:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13587:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13587:43:1"
																},
																"nativeSrc": "13587:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13587:72:1"
															},
															"nativeSrc": "13587:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13587:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13224:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13334:9:1",
														"nodeType": "YulTypedName",
														"src": "13334:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13346:6:1",
														"nodeType": "YulTypedName",
														"src": "13346:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13354:6:1",
														"nodeType": "YulTypedName",
														"src": "13354:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13362:6:1",
														"nodeType": "YulTypedName",
														"src": "13362:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13373:4:1",
														"nodeType": "YulTypedName",
														"src": "13373:4:1",
														"type": ""
													}
												],
												"src": "13224:442:1"
											},
											{
												"body": {
													"nativeSrc": "13770:124:1",
													"nodeType": "YulBlock",
													"src": "13770:124:1",
													"statements": [
														{
															"nativeSrc": "13780:26:1",
															"nodeType": "YulAssignment",
															"src": "13780:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13792:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13792:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13803:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13803:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13788:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13788:3:1"
																},
																"nativeSrc": "13788:18:1",
																"nodeType": "YulFunctionCall",
																"src": "13788:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13780:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13780:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13860:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13860:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13873:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13873:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13884:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13884:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13869:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13869:3:1"
																		},
																		"nativeSrc": "13869:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13869:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13816:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13816:43:1"
																},
																"nativeSrc": "13816:71:1",
																"nodeType": "YulFunctionCall",
																"src": "13816:71:1"
															},
															"nativeSrc": "13816:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "13816:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "13672:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13742:9:1",
														"nodeType": "YulTypedName",
														"src": "13742:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13754:6:1",
														"nodeType": "YulTypedName",
														"src": "13754:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13765:4:1",
														"nodeType": "YulTypedName",
														"src": "13765:4:1",
														"type": ""
													}
												],
												"src": "13672:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "61016060405234801562000011575f80fd5b5060405162002ed538038062002ed58339818101604052810190620000379190620007b4565b6040518060400160405280600581526020017f5265796573000000000000000000000000000000000000000000000000000000815250806040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250836040518060400160405280600581526020017f52657965730000000000000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f5259000000000000000000000000000000000000000000000000000000000000815250816003908162000122919062000a48565b50806004908162000134919062000a48565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620001aa575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001a1919062000b3d565b60405180910390fd5b620001bb81620002b260201b60201c565b50620001d26006836200037560201b90919060201c565b6101208181525050620001f06007826200037560201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a081815250506200022f620003ca60201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050505050620002ab33620002826200042660201b60201c565b600a62000290919062000ce1565b6103e86200029f919062000d31565b6200042e60201b60201c565b5062000fdb565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6020835110156200039a576200039283620004b860201b60201c565b9050620003c4565b82620003ac836200052260201b60201c565b5f019081620003bc919062000a48565b5060ff5f1b90505b92915050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e0516101005146306040516020016200040b95949392919062000da6565b60405160208183030381529060405280519060200120905090565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620004a1575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040162000498919062000b3d565b60405180910390fd5b620004b45f83836200052b60201b60201c565b5050565b5f80829050601f815111156200050757826040517f305a27a9000000000000000000000000000000000000000000000000000000008152600401620004fe919062000e8b565b60405180910390fd5b805181620005159062000edc565b5f1c175f1b915050919050565b5f819050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200057f578060025f82825462000572919062000f4b565b9250508190555062000650565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156200060b578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620006029392919062000f85565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000699578060025f8282540392505081905550620006e3565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000742919062000fc0565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200077e8262000753565b9050919050565b620007908162000772565b81146200079b575f80fd5b50565b5f81519050620007ae8162000785565b92915050565b5f60208284031215620007cc57620007cb6200074f565b5b5f620007db848285016200079e565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200086057607f821691505b6020821081036200087657620008756200081b565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620008da7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200089d565b620008e686836200089d565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620009306200092a6200092484620008fe565b62000907565b620008fe565b9050919050565b5f819050919050565b6200094b8362000910565b620009636200095a8262000937565b848454620008a9565b825550505050565b5f90565b620009796200096b565b6200098681848462000940565b505050565b5b81811015620009ad57620009a15f826200096f565b6001810190506200098c565b5050565b601f821115620009fc57620009c6816200087c565b620009d1846200088e565b81016020851015620009e1578190505b620009f9620009f0856200088e565b8301826200098b565b50505b505050565b5f82821c905092915050565b5f62000a1e5f198460080262000a01565b1980831691505092915050565b5f62000a38838362000a0d565b9150826002028217905092915050565b62000a5382620007e4565b67ffffffffffffffff81111562000a6f5762000a6e620007ee565b5b62000a7b825462000848565b62000a88828285620009b1565b5f60209050601f83116001811462000abe575f841562000aa9578287015190505b62000ab5858262000a2b565b86555062000b24565b601f19841662000ace866200087c565b5f5b8281101562000af75784890151825560018201915060208501945060208101905062000ad0565b8683101562000b17578489015162000b13601f89168262000a0d565b8355505b6001600288020188555050505b505050505050565b62000b378162000772565b82525050565b5f60208201905062000b525f83018462000b2c565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b600185111562000be25780860481111562000bba5762000bb962000b58565b5b600185161562000bca5780820291505b808102905062000bda8562000b85565b945062000b9a565b94509492505050565b5f8262000bfc576001905062000cce565b8162000c0b575f905062000cce565b816001811462000c24576002811462000c2f5762000c65565b600191505062000cce565b60ff84111562000c445762000c4362000b58565b5b8360020a91508482111562000c5e5762000c5d62000b58565b5b5062000cce565b5060208310610133831016604e8410600b841016171562000c9f5782820a90508381111562000c995762000c9862000b58565b5b62000cce565b62000cae848484600162000b91565b9250905081840481111562000cc85762000cc762000b58565b5b81810290505b9392505050565b5f60ff82169050919050565b5f62000ced82620008fe565b915062000cfa8362000cd5565b925062000d297fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000beb565b905092915050565b5f62000d3d82620008fe565b915062000d4a83620008fe565b925082820262000d5a81620008fe565b9150828204841483151762000d745762000d7362000b58565b5b5092915050565b5f819050919050565b62000d8f8162000d7b565b82525050565b62000da081620008fe565b82525050565b5f60a08201905062000dbb5f83018862000d84565b62000dca602083018762000d84565b62000dd9604083018662000d84565b62000de8606083018562000d95565b62000df7608083018462000b2c565b9695505050505050565b5f82825260208201905092915050565b5f5b8381101562000e3057808201518184015260208101905062000e13565b5f8484015250505050565b5f601f19601f8301169050919050565b5f62000e5782620007e4565b62000e63818562000e01565b935062000e7581856020860162000e11565b62000e808162000e3b565b840191505092915050565b5f6020820190508181035f83015262000ea5818462000e4b565b905092915050565b5f81519050919050565b5f819050602082019050919050565b5f62000ed3825162000d7b565b80915050919050565b5f62000ee88262000ead565b8262000ef48462000eb7565b905062000f018162000ec6565b9250602082101562000f445762000f3f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff836020036008026200089d565b831692505b5050919050565b5f62000f5782620008fe565b915062000f6483620008fe565b925082820190508082111562000f7f5762000f7e62000b58565b5b92915050565b5f60608201905062000f9a5f83018662000b2c565b62000fa9602083018562000d95565b62000fb8604083018462000d95565b949350505050565b5f60208201905062000fd55f83018462000d95565b92915050565b60805160a05160c05160e051610100516101205161014051611ea86200102d5f395f610d4f01525f610d1401525f61124801525f61122701525f610a4901525f610a9f01525f610ac80152611ea85ff3fe608060405234801561000f575f80fd5b5060043610610109575f3560e01c8063715018a6116100a057806395d89b411161006f57806395d89b41146102ad578063a9059cbb146102cb578063d505accf146102fb578063dd62ed3e14610317578063f2fde38b1461034757610109565b8063715018a6146102315780637ecebe001461023b57806384b0196e1461026b5780638da5cb5b1461028f57610109565b8063313ce567116100dc578063313ce567146101a95780633644e515146101c757806340c10f19146101e557806370a082311461020157610109565b806306fdde031461010d578063095ea7b31461012b57806318160ddd1461015b57806323b872dd14610179575b5f80fd5b610115610363565b6040516101229190611718565b60405180910390f35b610145600480360381019061014091906117c9565b6103f3565b6040516101529190611821565b60405180910390f35b610163610415565b6040516101709190611849565b60405180910390f35b610193600480360381019061018e9190611862565b61041e565b6040516101a09190611821565b60405180910390f35b6101b161044c565b6040516101be91906118cd565b60405180910390f35b6101cf610454565b6040516101dc91906118fe565b60405180910390f35b6101ff60048036038101906101fa91906117c9565b610462565b005b61021b60048036038101906102169190611917565b610478565b6040516102289190611849565b60405180910390f35b6102396104bd565b005b61025560048036038101906102509190611917565b6104d0565b6040516102629190611849565b60405180910390f35b6102736104e1565b6040516102869796959493929190611a42565b60405180910390f35b610297610586565b6040516102a49190611ac4565b60405180910390f35b6102b56105ae565b6040516102c29190611718565b60405180910390f35b6102e560048036038101906102e091906117c9565b61063e565b6040516102f29190611821565b60405180910390f35b61031560048036038101906103109190611b31565b610660565b005b610331600480360381019061032c9190611bce565b6107a5565b60405161033e9190611849565b60405180910390f35b610361600480360381019061035c9190611917565b610827565b005b60606003805461037290611c39565b80601f016020809104026020016040519081016040528092919081815260200182805461039e90611c39565b80156103e95780601f106103c0576101008083540402835291602001916103e9565b820191905f5260205f20905b8154815290600101906020018083116103cc57829003601f168201915b5050505050905090565b5f806103fd6108ab565b905061040a8185856108b2565b600191505092915050565b5f600254905090565b5f806104286108ab565b90506104358582856108c4565b610440858585610956565b60019150509392505050565b5f6012905090565b5f61045d610a46565b905090565b61046a610afc565b6104748282610b83565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6104c5610afc565b6104ce5f610c02565b565b5f6104da82610cc5565b9050919050565b5f6060805f805f60606104f2610d0b565b6104fa610d46565b46305f801b5f67ffffffffffffffff81111561051957610518611c69565b5b6040519080825280602002602001820160405280156105475781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105bd90611c39565b80601f01602080910402602001604051908101604052809291908181526020018280546105e990611c39565b80156106345780601f1061060b57610100808354040283529160200191610634565b820191905f5260205f20905b81548152906001019060200180831161061757829003601f168201915b5050505050905090565b5f806106486108ab565b9050610655818585610956565b600191505092915050565b834211156106a557836040517f6279130200000000000000000000000000000000000000000000000000000000815260040161069c9190611849565b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886106d38c610d81565b896040516020016106e996959493929190611c96565b6040516020818303038152906040528051906020012090505f61070b82610dd4565b90505f61071a82878787610ded565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461078e57808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610785929190611cf5565b60405180910390fd5b6107998a8a8a6108b2565b50505050505050505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61082f610afc565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361089f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108969190611ac4565b60405180910390fd5b6108a881610c02565b50565b5f33905090565b6108bf8383836001610e1b565b505050565b5f6108cf84846107a5565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109505781811015610941578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161093893929190611d1c565b60405180910390fd5b61094f84848484035f610e1b565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109c6575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109bd9190611ac4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a36575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a2d9190611ac4565b60405180910390fd5b610a41838383610fea565b505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610ac157507f000000000000000000000000000000000000000000000000000000000000000046145b15610aee577f00000000000000000000000000000000000000000000000000000000000000009050610af9565b610af6611203565b90505b90565b610b046108ab565b73ffffffffffffffffffffffffffffffffffffffff16610b22610586565b73ffffffffffffffffffffffffffffffffffffffff1614610b8157610b456108ab565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b789190611ac4565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bf3575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bea9190611ac4565b60405180910390fd5b610bfe5f8383610fea565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060610d4160067f000000000000000000000000000000000000000000000000000000000000000061129890919063ffffffff16565b905090565b6060610d7c60077f000000000000000000000000000000000000000000000000000000000000000061129890919063ffffffff16565b905090565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190600101919050559050919050565b5f610de6610de0610a46565b83611345565b9050919050565b5f805f80610dfd88888888611385565b925092509250610e0d828261146c565b829350505050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e8b575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e829190611ac4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610efb575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ef29190611ac4565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610fe4578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610fdb9190611849565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361103a578060025f82825461102e9190611d7e565b92505081905550611108565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156110c3578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016110ba93929190611d1c565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361114f578060025f8282540392505081905550611199565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111f69190611849565b60405180910390a3505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000463060405160200161127d959493929190611db1565b60405160208183030381529060405280519060200120905090565b606060ff5f1b83146112b4576112ad836115ce565b905061133f565b8180546112c090611c39565b80601f01602080910402602001604051908101604052809291908181526020018280546112ec90611c39565b80156113375780601f1061130e57610100808354040283529160200191611337565b820191905f5260205f20905b81548152906001019060200180831161131a57829003601f168201915b505050505090505b92915050565b5f6040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b5f805f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c11156113c1575f600385925092509250611462565b5f6001888888886040515f81526020016040526040516113e49493929190611e02565b6020604051602081039080840390855afa158015611404573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611455575f60015f801b93509350935050611462565b805f805f1b935093509350505b9450945094915050565b5f600381111561147f5761147e611e45565b5b82600381111561149257611491611e45565b5b03156115ca57600160038111156114ac576114ab611e45565b5b8260038111156114bf576114be611e45565b5b036114f6576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600381111561150a57611509611e45565b5b82600381111561151d5761151c611e45565b5b0361156157805f1c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016115589190611849565b60405180910390fd5b60038081111561157457611573611e45565b5b82600381111561158757611586611e45565b5b036115c957806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016115c091906118fe565b60405180910390fd5b5b5050565b60605f6115da83611640565b90505f602067ffffffffffffffff8111156115f8576115f7611c69565b5b6040519080825280601f01601f19166020018201604052801561162a5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b5f8060ff835f1c169050601f811115611685576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156116c55780820151818401526020810190506116aa565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6116ea8261168e565b6116f48185611698565b93506117048185602086016116a8565b61170d816116d0565b840191505092915050565b5f6020820190508181035f83015261173081846116e0565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117658261173c565b9050919050565b6117758161175b565b811461177f575f80fd5b50565b5f813590506117908161176c565b92915050565b5f819050919050565b6117a881611796565b81146117b2575f80fd5b50565b5f813590506117c38161179f565b92915050565b5f80604083850312156117df576117de611738565b5b5f6117ec85828601611782565b92505060206117fd858286016117b5565b9150509250929050565b5f8115159050919050565b61181b81611807565b82525050565b5f6020820190506118345f830184611812565b92915050565b61184381611796565b82525050565b5f60208201905061185c5f83018461183a565b92915050565b5f805f6060848603121561187957611878611738565b5b5f61188686828701611782565b935050602061189786828701611782565b92505060406118a8868287016117b5565b9150509250925092565b5f60ff82169050919050565b6118c7816118b2565b82525050565b5f6020820190506118e05f8301846118be565b92915050565b5f819050919050565b6118f8816118e6565b82525050565b5f6020820190506119115f8301846118ef565b92915050565b5f6020828403121561192c5761192b611738565b5b5f61193984828501611782565b91505092915050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61197681611942565b82525050565b6119858161175b565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6119bd81611796565b82525050565b5f6119ce83836119b4565b60208301905092915050565b5f602082019050919050565b5f6119f08261198b565b6119fa8185611995565b9350611a05836119a5565b805f5b83811015611a35578151611a1c88826119c3565b9750611a27836119da565b925050600181019050611a08565b5085935050505092915050565b5f60e082019050611a555f83018a61196d565b8181036020830152611a6781896116e0565b90508181036040830152611a7b81886116e0565b9050611a8a606083018761183a565b611a97608083018661197c565b611aa460a08301856118ef565b81810360c0830152611ab681846119e6565b905098975050505050505050565b5f602082019050611ad75f83018461197c565b92915050565b611ae6816118b2565b8114611af0575f80fd5b50565b5f81359050611b0181611add565b92915050565b611b10816118e6565b8114611b1a575f80fd5b50565b5f81359050611b2b81611b07565b92915050565b5f805f805f805f60e0888a031215611b4c57611b4b611738565b5b5f611b598a828b01611782565b9750506020611b6a8a828b01611782565b9650506040611b7b8a828b016117b5565b9550506060611b8c8a828b016117b5565b9450506080611b9d8a828b01611af3565b93505060a0611bae8a828b01611b1d565b92505060c0611bbf8a828b01611b1d565b91505092959891949750929550565b5f8060408385031215611be457611be3611738565b5b5f611bf185828601611782565b9250506020611c0285828601611782565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611c5057607f821691505b602082108103611c6357611c62611c0c565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f60c082019050611ca95f8301896118ef565b611cb6602083018861197c565b611cc3604083018761197c565b611cd0606083018661183a565b611cdd608083018561183a565b611cea60a083018461183a565b979650505050505050565b5f604082019050611d085f83018561197c565b611d15602083018461197c565b9392505050565b5f606082019050611d2f5f83018661197c565b611d3c602083018561183a565b611d49604083018461183a565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611d8882611796565b9150611d9383611796565b9250828201905080821115611dab57611daa611d51565b5b92915050565b5f60a082019050611dc45f8301886118ef565b611dd160208301876118ef565b611dde60408301866118ef565b611deb606083018561183a565b611df8608083018461197c565b9695505050505050565b5f608082019050611e155f8301876118ef565b611e2260208301866118be565b611e2f60408301856118ef565b611e3c60608301846118ef565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea2646970667358221220d38e418eb5a98eda0e98c637a865f7559745e4b3e403bdca14fb94741b2559ef64736f6c63430008180033",
							"opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2ED5 CODESIZE SUB DUP1 PUSH3 0x2ED5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x7B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5265796573000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5265796573000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5259000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x122 SWAP2 SWAP1 PUSH3 0xA48 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x134 SWAP2 SWAP1 PUSH3 0xA48 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1AA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1A1 SWAP2 SWAP1 PUSH3 0xB3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1BB DUP2 PUSH3 0x2B2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1D2 PUSH1 0x6 DUP4 PUSH3 0x375 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x1F0 PUSH1 0x7 DUP3 PUSH3 0x375 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x22F PUSH3 0x3CA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x2AB CALLER PUSH3 0x282 PUSH3 0x426 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH3 0x290 SWAP2 SWAP1 PUSH3 0xCE1 JUMP JUMPDEST PUSH2 0x3E8 PUSH3 0x29F SWAP2 SWAP1 PUSH3 0xD31 JUMP JUMPDEST PUSH3 0x42E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0xFDB JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x39A JUMPI PUSH3 0x392 DUP4 PUSH3 0x4B8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x3C4 JUMP JUMPDEST DUP3 PUSH3 0x3AC DUP4 PUSH3 0x522 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 ADD SWAP1 DUP2 PUSH3 0x3BC SWAP2 SWAP1 PUSH3 0xA48 JUMP JUMPDEST POP PUSH1 0xFF PUSH0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x40B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xDA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x4A1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x498 SWAP2 SWAP1 PUSH3 0xB3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x4B4 PUSH0 DUP4 DUP4 PUSH3 0x52B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x507 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4FE SWAP2 SWAP1 PUSH3 0xE8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x515 SWAP1 PUSH3 0xEDC JUMP JUMPDEST PUSH0 SHR OR PUSH0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x57F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x572 SWAP2 SWAP1 PUSH3 0xF4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x650 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x60B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x602 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xF85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x699 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x6E3 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x742 SWAP2 SWAP1 PUSH3 0xFC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x77E DUP3 PUSH3 0x753 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x790 DUP2 PUSH3 0x772 JUMP JUMPDEST DUP2 EQ PUSH3 0x79B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x7AE DUP2 PUSH3 0x785 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x7CC JUMPI PUSH3 0x7CB PUSH3 0x74F JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x7DB DUP5 DUP3 DUP6 ADD PUSH3 0x79E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x860 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x876 JUMPI PUSH3 0x875 PUSH3 0x81B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x8DA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x89D JUMP JUMPDEST PUSH3 0x8E6 DUP7 DUP4 PUSH3 0x89D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x930 PUSH3 0x92A PUSH3 0x924 DUP5 PUSH3 0x8FE JUMP JUMPDEST PUSH3 0x907 JUMP JUMPDEST PUSH3 0x8FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x94B DUP4 PUSH3 0x910 JUMP JUMPDEST PUSH3 0x963 PUSH3 0x95A DUP3 PUSH3 0x937 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x8A9 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x979 PUSH3 0x96B JUMP JUMPDEST PUSH3 0x986 DUP2 DUP5 DUP5 PUSH3 0x940 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x9AD JUMPI PUSH3 0x9A1 PUSH0 DUP3 PUSH3 0x96F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x98C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x9FC JUMPI PUSH3 0x9C6 DUP2 PUSH3 0x87C JUMP JUMPDEST PUSH3 0x9D1 DUP5 PUSH3 0x88E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x9E1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x9F9 PUSH3 0x9F0 DUP6 PUSH3 0x88E JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x98B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xA1E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xA01 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xA38 DUP4 DUP4 PUSH3 0xA0D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA53 DUP3 PUSH3 0x7E4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xA6F JUMPI PUSH3 0xA6E PUSH3 0x7EE JUMP JUMPDEST JUMPDEST PUSH3 0xA7B DUP3 SLOAD PUSH3 0x848 JUMP JUMPDEST PUSH3 0xA88 DUP3 DUP3 DUP6 PUSH3 0x9B1 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xABE JUMPI PUSH0 DUP5 ISZERO PUSH3 0xAA9 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xAB5 DUP6 DUP3 PUSH3 0xA2B JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xB24 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xACE DUP7 PUSH3 0x87C JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xAF7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xAD0 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xB17 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xB13 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xA0D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xB37 DUP2 PUSH3 0x772 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xB52 PUSH0 DUP4 ADD DUP5 PUSH3 0xB2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0xBE2 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0xBBA JUMPI PUSH3 0xBB9 PUSH3 0xB58 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0xBCA JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0xBDA DUP6 PUSH3 0xB85 JUMP JUMPDEST SWAP5 POP PUSH3 0xB9A JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0xBFC JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0xCCE JUMP JUMPDEST DUP2 PUSH3 0xC0B JUMPI PUSH0 SWAP1 POP PUSH3 0xCCE JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0xC24 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0xC2F JUMPI PUSH3 0xC65 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0xCCE JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0xC44 JUMPI PUSH3 0xC43 PUSH3 0xB58 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0xC5E JUMPI PUSH3 0xC5D PUSH3 0xB58 JUMP JUMPDEST JUMPDEST POP PUSH3 0xCCE JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0xC9F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0xC99 JUMPI PUSH3 0xC98 PUSH3 0xB58 JUMP JUMPDEST JUMPDEST PUSH3 0xCCE JUMP JUMPDEST PUSH3 0xCAE DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0xB91 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0xCC8 JUMPI PUSH3 0xCC7 PUSH3 0xB58 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xCED DUP3 PUSH3 0x8FE JUMP JUMPDEST SWAP2 POP PUSH3 0xCFA DUP4 PUSH3 0xCD5 JUMP JUMPDEST SWAP3 POP PUSH3 0xD29 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0xBEB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xD3D DUP3 PUSH3 0x8FE JUMP JUMPDEST SWAP2 POP PUSH3 0xD4A DUP4 PUSH3 0x8FE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0xD5A DUP2 PUSH3 0x8FE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0xD74 JUMPI PUSH3 0xD73 PUSH3 0xB58 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xD8F DUP2 PUSH3 0xD7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0xDA0 DUP2 PUSH3 0x8FE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0xDBB PUSH0 DUP4 ADD DUP9 PUSH3 0xD84 JUMP JUMPDEST PUSH3 0xDCA PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0xD84 JUMP JUMPDEST PUSH3 0xDD9 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0xD84 JUMP JUMPDEST PUSH3 0xDE8 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0xD95 JUMP JUMPDEST PUSH3 0xDF7 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0xB2C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xE30 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xE13 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xE57 DUP3 PUSH3 0x7E4 JUMP JUMPDEST PUSH3 0xE63 DUP2 DUP6 PUSH3 0xE01 JUMP JUMPDEST SWAP4 POP PUSH3 0xE75 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xE11 JUMP JUMPDEST PUSH3 0xE80 DUP2 PUSH3 0xE3B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0xEA5 DUP2 DUP5 PUSH3 0xE4B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xED3 DUP3 MLOAD PUSH3 0xD7B JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xEE8 DUP3 PUSH3 0xEAD JUMP JUMPDEST DUP3 PUSH3 0xEF4 DUP5 PUSH3 0xEB7 JUMP JUMPDEST SWAP1 POP PUSH3 0xF01 DUP2 PUSH3 0xEC6 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0xF44 JUMPI PUSH3 0xF3F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x89D JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xF57 DUP3 PUSH3 0x8FE JUMP JUMPDEST SWAP2 POP PUSH3 0xF64 DUP4 PUSH3 0x8FE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xF7F JUMPI PUSH3 0xF7E PUSH3 0xB58 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xF9A PUSH0 DUP4 ADD DUP7 PUSH3 0xB2C JUMP JUMPDEST PUSH3 0xFA9 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xD95 JUMP JUMPDEST PUSH3 0xFB8 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xD95 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xFD5 PUSH0 DUP4 ADD DUP5 PUSH3 0xD95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1EA8 PUSH3 0x102D PUSH0 CODECOPY PUSH0 PUSH2 0xD4F ADD MSTORE PUSH0 PUSH2 0xD14 ADD MSTORE PUSH0 PUSH2 0x1248 ADD MSTORE PUSH0 PUSH2 0x1227 ADD MSTORE PUSH0 PUSH2 0xA49 ADD MSTORE PUSH0 PUSH2 0xA9F ADD MSTORE PUSH0 PUSH2 0xAC8 ADD MSTORE PUSH2 0x1EA8 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x347 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x28F JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x201 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x363 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH2 0x3F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1862 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH2 0x4BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x1B31 JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1BCE JUMP JUMPDEST PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x361 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x827 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x372 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39E SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3FD PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x40A DUP2 DUP6 DUP6 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x428 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x435 DUP6 DUP3 DUP6 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x440 DUP6 DUP6 DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x45D PUSH2 0xA46 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x46A PUSH2 0xAFC JUMP JUMPDEST PUSH2 0x474 DUP3 DUP3 PUSH2 0xB83 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C5 PUSH2 0xAFC JUMP JUMPDEST PUSH2 0x4CE PUSH0 PUSH2 0xC02 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x4DA DUP3 PUSH2 0xCC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x4F2 PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x4FA PUSH2 0xD46 JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x519 JUMPI PUSH2 0x518 PUSH2 0x1C69 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x547 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5BD SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5E9 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x634 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x60B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x634 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x617 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x648 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x655 DUP2 DUP6 DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x6A5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69C SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x6D3 DUP13 PUSH2 0xD81 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6E9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x70B DUP3 PUSH2 0xDD4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x71A DUP3 DUP8 DUP8 DUP8 PUSH2 0xDED JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x78E JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x785 SWAP3 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x799 DUP11 DUP11 DUP11 PUSH2 0x8B2 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x82F PUSH2 0xAFC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x896 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A8 DUP2 PUSH2 0xC02 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8BF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE1B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8CF DUP5 DUP5 PUSH2 0x7A5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x950 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x941 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x938 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE1B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BD SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA41 DUP4 DUP4 DUP4 PUSH2 0xFEA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAC1 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xAEE JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0xAF6 PUSH2 0x1203 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB04 PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB22 PUSH2 0x586 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB81 JUMPI PUSH2 0xB45 PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBFE PUSH0 DUP4 DUP4 PUSH2 0xFEA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD41 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1298 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD7C PUSH1 0x7 PUSH32 0x0 PUSH2 0x1298 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDE6 PUSH2 0xDE0 PUSH2 0xA46 JUMP JUMPDEST DUP4 PUSH2 0x1345 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xDFD DUP9 DUP9 DUP9 DUP9 PUSH2 0x1385 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xE0D DUP3 DUP3 PUSH2 0x146C JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE82 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF2 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFE4 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFDB SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x103A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x102E SWAP2 SWAP1 PUSH2 0x1D7E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1108 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10C3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x114F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1199 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x11F6 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x127D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x12B4 JUMPI PUSH2 0x12AD DUP4 PUSH2 0x15CE JUMP JUMPDEST SWAP1 POP PUSH2 0x133F JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x12C0 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12EC SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1337 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x130E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1337 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x131A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x13C1 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1462 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x13E4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1404 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1455 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1462 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x147F JUMPI PUSH2 0x147E PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1492 JUMPI PUSH2 0x1491 PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x15CA JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14AC JUMPI PUSH2 0x14AB PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14BF JUMPI PUSH2 0x14BE PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x14F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x150A JUMPI PUSH2 0x1509 PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x151D JUMPI PUSH2 0x151C PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1561 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1558 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1574 JUMPI PUSH2 0x1573 PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1587 JUMPI PUSH2 0x1586 PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x15C9 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C0 SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x15DA DUP4 PUSH2 0x1640 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15F8 JUMPI PUSH2 0x15F7 PUSH2 0x1C69 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x162A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1685 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16C5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16AA JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16EA DUP3 PUSH2 0x168E JUMP JUMPDEST PUSH2 0x16F4 DUP2 DUP6 PUSH2 0x1698 JUMP JUMPDEST SWAP4 POP PUSH2 0x1704 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0x170D DUP2 PUSH2 0x16D0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1730 DUP2 DUP5 PUSH2 0x16E0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1765 DUP3 PUSH2 0x173C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1775 DUP2 PUSH2 0x175B JUMP JUMPDEST DUP2 EQ PUSH2 0x177F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1790 DUP2 PUSH2 0x176C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A8 DUP2 PUSH2 0x1796 JUMP JUMPDEST DUP2 EQ PUSH2 0x17B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17C3 DUP2 PUSH2 0x179F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17DF JUMPI PUSH2 0x17DE PUSH2 0x1738 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17EC DUP6 DUP3 DUP7 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17FD DUP6 DUP3 DUP7 ADD PUSH2 0x17B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x181B DUP2 PUSH2 0x1807 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1834 PUSH0 DUP4 ADD DUP5 PUSH2 0x1812 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1843 DUP2 PUSH2 0x1796 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x185C PUSH0 DUP4 ADD DUP5 PUSH2 0x183A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1879 JUMPI PUSH2 0x1878 PUSH2 0x1738 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1886 DUP7 DUP3 DUP8 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1897 DUP7 DUP3 DUP8 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18A8 DUP7 DUP3 DUP8 ADD PUSH2 0x17B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18C7 DUP2 PUSH2 0x18B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18E0 PUSH0 DUP4 ADD DUP5 PUSH2 0x18BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F8 DUP2 PUSH2 0x18E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1911 PUSH0 DUP4 ADD DUP5 PUSH2 0x18EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x192C JUMPI PUSH2 0x192B PUSH2 0x1738 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1939 DUP5 DUP3 DUP6 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1976 DUP2 PUSH2 0x1942 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1985 DUP2 PUSH2 0x175B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19BD DUP2 PUSH2 0x1796 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19CE DUP4 DUP4 PUSH2 0x19B4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19F0 DUP3 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x19FA DUP2 DUP6 PUSH2 0x1995 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A05 DUP4 PUSH2 0x19A5 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A35 JUMPI DUP2 MLOAD PUSH2 0x1A1C DUP9 DUP3 PUSH2 0x19C3 JUMP JUMPDEST SWAP8 POP PUSH2 0x1A27 DUP4 PUSH2 0x19DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A08 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1A55 PUSH0 DUP4 ADD DUP11 PUSH2 0x196D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1A67 DUP2 DUP10 PUSH2 0x16E0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1A7B DUP2 DUP9 PUSH2 0x16E0 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A8A PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x183A JUMP JUMPDEST PUSH2 0x1A97 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1AA4 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x18EF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1AB6 DUP2 DUP5 PUSH2 0x19E6 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AD7 PUSH0 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AE6 DUP2 PUSH2 0x18B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B01 DUP2 PUSH2 0x1ADD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B10 DUP2 PUSH2 0x18E6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B1A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B2B DUP2 PUSH2 0x1B07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1B4C JUMPI PUSH2 0x1B4B PUSH2 0x1738 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B59 DUP11 DUP3 DUP12 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1B6A DUP11 DUP3 DUP12 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1B7B DUP11 DUP3 DUP12 ADD PUSH2 0x17B5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1B8C DUP11 DUP3 DUP12 ADD PUSH2 0x17B5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1B9D DUP11 DUP3 DUP12 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1BAE DUP11 DUP3 DUP12 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1BBF DUP11 DUP3 DUP12 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BE4 JUMPI PUSH2 0x1BE3 PUSH2 0x1738 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BF1 DUP6 DUP3 DUP7 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C02 DUP6 DUP3 DUP7 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C50 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C63 JUMPI PUSH2 0x1C62 PUSH2 0x1C0C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1CA9 PUSH0 DUP4 ADD DUP10 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1CB6 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1CC3 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1CD0 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x183A JUMP JUMPDEST PUSH2 0x1CDD PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x183A JUMP JUMPDEST PUSH2 0x1CEA PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x183A JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D08 PUSH0 DUP4 ADD DUP6 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1D15 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D2F PUSH0 DUP4 ADD DUP7 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1D3C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x183A JUMP JUMPDEST PUSH2 0x1D49 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x183A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D88 DUP3 PUSH2 0x1796 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D93 DUP4 PUSH2 0x1796 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1DAB JUMPI PUSH2 0x1DAA PUSH2 0x1D51 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1DC4 PUSH0 DUP4 ADD DUP9 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1DD1 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1DDE PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1DEB PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x183A JUMP JUMPDEST PUSH2 0x1DF8 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1E15 PUSH0 DUP4 ADD DUP8 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1E22 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x1E2F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1E3C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x18EF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 DUP15 COINBASE DUP15 0xB5 0xA9 DUP15 0xDA 0xE SWAP9 0xC6 CALLDATACOPY 0xA8 PUSH6 0xF7559745E4B3 0xE4 SUB 0xBD 0xCA EQ 0xFB SWAP5 PUSH21 0x1B2559EF64736F6C63430008180033000000000000 ",
							"sourceMap": "79653:338:0:-:0;;;79705:185;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;78312:52;;;;;;;;;;;;;;;;;78351:4;72156:431;;;;;;;;;;;;;;;;;79784:12;12787:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12861:5;12853;:13;;;;;;:::i;:::-;;12886:7;12876;:17;;;;;;:::i;:::-;;12787:113;;23308:1;23284:26;;:12;:26;;;23280:95;;23361:1;23333:31;;;;;;;;;;;:::i;:::-;;;;;;;;23280:95;23384:32;23403:12;23384:18;;;:32;;:::i;:::-;23236:187;72229:45;72260:13;72229:4;:30;;;;:45;;;;:::i;:::-;72221:53;;;;;;72295:51;72329:16;72295:7;:33;;;;:51;;;;:::i;:::-;72284:62;;;;;;72386:4;72370:22;;;;;;72356:36;;;;;;72435:7;72419:25;;;;;;72402:42;;;;;;72472:13;72455:30;;;;;;72520:23;:21;;;:23;;:::i;:::-;72495:48;;;;;;72575:4;72553:27;;;;;;;;;;72156:431;;78312:52;79841:42:::3;79847:10;79872;:8;;;:10;;:::i;:::-;79866:2;:16;;;;:::i;:::-;79859:4;:23;;;;:::i;:::-;79841:5;;;:42;;:::i;:::-;79705:185:::0;79653:338;;24923:187;24996:16;25015:6;;;;;;;;;;;24996:25;;25040:8;25031:6;;:17;;;;;;;;;;;;;;;;;;25094:8;25063:40;;25084:8;25063:40;;;;;;;;;;;;24986:124;24923:187;:::o;66806:340::-;66902:11;66951:2;66935:5;66929:19;:24;66925:215;;;66976:20;66990:5;66976:13;;;:20;;:::i;:::-;66969:27;;;;66925:215;67068:5;67027:32;67053:5;67027:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;65282:66;67111:17;;67087:42;;66806:340;;;;;:::o;72941:179::-;72996:7;70907:95;73054:11;;73067:14;;73083:13;73106:4;73032:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;73022:91;;;;;;73015:98;;72941:179;:::o;13893:82::-;13942:5;13966:2;13959:9;;13893:82;:::o;18612:208::-;18701:1;18682:21;;:7;:21;;;18678:91;;18755:1;18726:32;;;;;;;;;;;:::i;:::-;;;;;;;;18678:91;18778:35;18794:1;18798:7;18807:5;18778:7;;;:35;;:::i;:::-;18612:208;;:::o;65600:286::-;65665:11;65688:17;65714:3;65688:30;;65746:2;65732:4;:11;:16;65728:72;;;65785:3;65771:18;;;;;;;;;;;:::i;:::-;;;;;;;;65728:72;65866:4;:11;65857:4;65849:13;;;:::i;:::-;65841:22;;:36;65833:45;;65809:70;;;65600:286;;;:::o;63116:202::-;63184:20;63292:10;63282:20;;63116:202;;;:::o;17162:1107::-;17267:1;17251:18;;:4;:18;;;17247:540;;17403:5;17387:12;;:21;;;;;;;:::i;:::-;;;;;;;;17247:540;;;17439:19;17461:9;:15;17471:4;17461:15;;;;;;;;;;;;;;;;17439:37;;17508:5;17494:11;:19;17490:115;;;17565:4;17571:11;17584:5;17540:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17490:115;17757:5;17743:11;:19;17725:9;:15;17735:4;17725:15;;;;;;;;;;;;;;;:37;;;;17425:362;17247:540;17815:1;17801:16;;:2;:16;;;17797:425;;17980:5;17964:12;;:21;;;;;;;;;;;17797:425;;;18192:5;18175:9;:13;18185:2;18175:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;17797:425;18252:2;18237:25;;18246:4;18237:25;;;18256:5;18237:25;;;;;;:::i;:::-;;;;;;;;17162:1107;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:102;7009:8;7056:5;7053:1;7049:13;7028:34;;6967:102;;;:::o;7075:848::-;7136:5;7143:4;7167:6;7158:15;;7191:5;7182:14;;7205:712;7226:1;7216:8;7213:15;7205:712;;;7321:4;7316:3;7312:14;7306:4;7303:24;7300:50;;;7330:18;;:::i;:::-;7300:50;7380:1;7370:8;7366:16;7363:451;;;7795:4;7788:5;7784:16;7775:25;;7363:451;7845:4;7839;7835:15;7827:23;;7875:32;7898:8;7875:32;:::i;:::-;7863:44;;7205:712;;;7075:848;;;;;;;:::o;7929:1073::-;7983:5;8174:8;8164:40;;8195:1;8186:10;;8197:5;;8164:40;8223:4;8213:36;;8240:1;8231:10;;8242:5;;8213:36;8309:4;8357:1;8352:27;;;;8393:1;8388:191;;;;8302:277;;8352:27;8370:1;8361:10;;8372:5;;;8388:191;8433:3;8423:8;8420:17;8417:43;;;8440:18;;:::i;:::-;8417:43;8489:8;8486:1;8482:16;8473:25;;8524:3;8517:5;8514:14;8511:40;;;8531:18;;:::i;:::-;8511:40;8564:5;;;8302:277;;8688:2;8678:8;8675:16;8669:3;8663:4;8660:13;8656:36;8638:2;8628:8;8625:16;8620:2;8614:4;8611:12;8607:35;8591:111;8588:246;;;8744:8;8738:4;8734:19;8725:28;;8779:3;8772:5;8769:14;8766:40;;;8786:18;;:::i;:::-;8766:40;8819:5;;8588:246;8859:42;8897:3;8887:8;8881:4;8878:1;8859:42;:::i;:::-;8844:57;;;;8933:4;8928:3;8924:14;8917:5;8914:25;8911:51;;;8942:18;;:::i;:::-;8911:51;8991:4;8984:5;8980:16;8971:25;;7929:1073;;;;;;:::o;9008:86::-;9043:7;9083:4;9076:5;9072:16;9061:27;;9008:86;;;:::o;9100:281::-;9158:5;9182:23;9200:4;9182:23;:::i;:::-;9174:31;;9226:25;9242:8;9226:25;:::i;:::-;9214:37;;9270:104;9307:66;9297:8;9291:4;9270:104;:::i;:::-;9261:113;;9100:281;;;;:::o;9387:410::-;9427:7;9450:20;9468:1;9450:20;:::i;:::-;9445:25;;9484:20;9502:1;9484:20;:::i;:::-;9479:25;;9539:1;9536;9532:9;9561:30;9579:11;9561:30;:::i;:::-;9550:41;;9740:1;9731:7;9727:15;9724:1;9721:22;9701:1;9694:9;9674:83;9651:139;;9770:18;;:::i;:::-;9651:139;9435:362;9387:410;;;;:::o;9803:77::-;9840:7;9869:5;9858:16;;9803:77;;;:::o;9886:118::-;9973:24;9991:5;9973:24;:::i;:::-;9968:3;9961:37;9886:118;;:::o;10010:::-;10097:24;10115:5;10097:24;:::i;:::-;10092:3;10085:37;10010:118;;:::o;10134:664::-;10339:4;10377:3;10366:9;10362:19;10354:27;;10391:71;10459:1;10448:9;10444:17;10435:6;10391:71;:::i;:::-;10472:72;10540:2;10529:9;10525:18;10516:6;10472:72;:::i;:::-;10554;10622:2;10611:9;10607:18;10598:6;10554:72;:::i;:::-;10636;10704:2;10693:9;10689:18;10680:6;10636:72;:::i;:::-;10718:73;10786:3;10775:9;10771:19;10762:6;10718:73;:::i;:::-;10134:664;;;;;;;;:::o;10804:169::-;10888:11;10922:6;10917:3;10910:19;10962:4;10957:3;10953:14;10938:29;;10804:169;;;;:::o;10979:246::-;11060:1;11070:113;11084:6;11081:1;11078:13;11070:113;;;11169:1;11164:3;11160:11;11154:18;11150:1;11145:3;11141:11;11134:39;11106:2;11103:1;11099:10;11094:15;;11070:113;;;11217:1;11208:6;11203:3;11199:16;11192:27;11041:184;10979:246;;;:::o;11231:102::-;11272:6;11323:2;11319:7;11314:2;11307:5;11303:14;11299:28;11289:38;;11231:102;;;:::o;11339:377::-;11427:3;11455:39;11488:5;11455:39;:::i;:::-;11510:71;11574:6;11569:3;11510:71;:::i;:::-;11503:78;;11590:65;11648:6;11643:3;11636:4;11629:5;11625:16;11590:65;:::i;:::-;11680:29;11702:6;11680:29;:::i;:::-;11675:3;11671:39;11664:46;;11431:285;11339:377;;;;:::o;11722:313::-;11835:4;11873:2;11862:9;11858:18;11850:26;;11922:9;11916:4;11912:20;11908:1;11897:9;11893:17;11886:47;11950:78;12023:4;12014:6;11950:78;:::i;:::-;11942:86;;11722:313;;;;:::o;12041:98::-;12092:6;12126:5;12120:12;12110:22;;12041:98;;;:::o;12145:116::-;12196:4;12219:3;12211:11;;12249:4;12244:3;12240:14;12232:22;;12145:116;;;:::o;12267:154::-;12310:11;12346:29;12370:3;12364:10;12346:29;:::i;:::-;12409:5;12385:29;;12322:99;12267:154;;;:::o;12427:594::-;12511:5;12542:38;12574:5;12542:38;:::i;:::-;12605:5;12632:40;12666:5;12632:40;:::i;:::-;12620:52;;12691:35;12717:8;12691:35;:::i;:::-;12682:44;;12750:2;12742:6;12739:14;12736:278;;;12821:169;12906:66;12876:6;12872:2;12868:15;12865:1;12861:23;12821:169;:::i;:::-;12798:5;12777:227;12768:236;;12736:278;12517:504;;12427:594;;;:::o;13027:191::-;13067:3;13086:20;13104:1;13086:20;:::i;:::-;13081:25;;13120:20;13138:1;13120:20;:::i;:::-;13115:25;;13163:1;13160;13156:9;13149:16;;13184:3;13181:1;13178:10;13175:36;;;13191:18;;:::i;:::-;13175:36;13027:191;;;;:::o;13224:442::-;13373:4;13411:2;13400:9;13396:18;13388:26;;13424:71;13492:1;13481:9;13477:17;13468:6;13424:71;:::i;:::-;13505:72;13573:2;13562:9;13558:18;13549:6;13505:72;:::i;:::-;13587;13655:2;13644:9;13640:18;13631:6;13587:72;:::i;:::-;13224:442;;;;;;:::o;13672:222::-;13765:4;13803:2;13792:9;13788:18;13780:26;;13816:71;13884:1;13873:9;13869:17;13860:6;13816:71;:::i;:::-;13672:222;;;;:::o;79653:338:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DOMAIN_SEPARATOR_3551": {
									"entryPoint": 1108,
									"id": 3551,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Name_3329": {
									"entryPoint": 3339,
									"id": 3329,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Version_3341": {
									"entryPoint": 3398,
									"id": 3341,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_approve_662": {
									"entryPoint": 2226,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_722": {
									"entryPoint": 3611,
									"id": 722,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_3259": {
									"entryPoint": 4611,
									"id": 3259,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkOwner_853": {
									"entryPoint": 2812,
									"id": 853,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_domainSeparatorV4_3238": {
									"entryPoint": 2630,
									"id": 3238,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_hashTypedDataV4_3275": {
									"entryPoint": 3540,
									"id": 3275,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_mint_611": {
									"entryPoint": 2947,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": 2219,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_770": {
									"entryPoint": 2244,
									"id": 770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_throwError_1297": {
									"entryPoint": 5228,
									"id": 1297,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_915": {
									"entryPoint": 3074,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_501": {
									"entryPoint": 2390,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 4074,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_useNonce_3383": {
									"entryPoint": 3457,
									"id": 3383,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@allowance_398": {
									"entryPoint": 1957,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_422": {
									"entryPoint": 1011,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_357": {
									"entryPoint": 1144,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@byteLength_3000": {
									"entryPoint": 5696,
									"id": 3000,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_335": {
									"entryPoint": 1100,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@eip712Domain_3317": {
									"entryPoint": 1249,
									"id": 3317,
									"parameterSlots": 0,
									"returnSlots": 7
								},
								"@mint_3602": {
									"entryPoint": 1122,
									"id": 3602,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_317": {
									"entryPoint": 867,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nonces_3368": {
									"entryPoint": 3269,
									"id": 3368,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nonces_3541": {
									"entryPoint": 1232,
									"id": 3541,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_836": {
									"entryPoint": 1414,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@permit_3524": {
									"entryPoint": 1632,
									"id": 3524,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@recover_1248": {
									"entryPoint": 3565,
									"id": 1248,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@renounceOwnership_867": {
									"entryPoint": 1213,
									"id": 867,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_326": {
									"entryPoint": 1454,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toStringWithFallback_3067": {
									"entryPoint": 4760,
									"id": 3067,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toString_2968": {
									"entryPoint": 5582,
									"id": 2968,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toTypedDataHash_2775": {
									"entryPoint": 4933,
									"id": 2775,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_344": {
									"entryPoint": 1045,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_454": {
									"entryPoint": 1054,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_895": {
									"entryPoint": 2087,
									"id": 895,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_381": {
									"entryPoint": 1598,
									"id": 381,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tryRecover_1212": {
									"entryPoint": 4997,
									"id": 1212,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"abi_decode_t_address": {
									"entryPoint": 6018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 6941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 6899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 6961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes1_to_t_bytes1_fromStack": {
									"entryPoint": 6509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 6383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 7413,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7452,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6722,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 6398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7318,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 7601,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 7682,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes1": {
									"entryPoint": 6466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 6374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5800,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7505,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 7749,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7180,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7273,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5944,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 6919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 6877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15381:1",
										"nodeType": "YulBlock",
										"src": "0:15381:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:1",
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nativeSrc": "77:22:1",
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nativeSrc": "87:12:1",
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:1",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:1",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nativeSrc": "208:73:1",
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nativeSrc": "218:19:1",
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nativeSrc": "218:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nativeSrc": "246:29:1",
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:1",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nativeSrc": "261:14:1",
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:1",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:1",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:1",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nativeSrc": "349:184:1",
													"nodeType": "YulBlock",
													"src": "349:184:1",
													"statements": [
														{
															"nativeSrc": "359:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:1",
																"nodeType": "YulLiteral",
																"src": "368:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:1",
																	"nodeType": "YulTypedName",
																	"src": "363:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:1",
																"nodeType": "YulBlock",
																"src": "428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:1"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:1"
																					},
																					"nativeSrc": "449:11:1",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:1"
																							},
																							"nativeSrc": "468:11:1",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:1"
																					},
																					"nativeSrc": "462:18:1",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:1"
																			},
																			"nativeSrc": "442:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:1"
																		},
																		"nativeSrc": "442:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:1"
																},
																"nativeSrc": "386:13:1",
																"nodeType": "YulFunctionCall",
																"src": "386:13:1"
															},
															"nativeSrc": "378:113:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:1",
																"nodeType": "YulBlock",
																"src": "400:19:1",
																"statements": [
																	{
																		"nativeSrc": "402:15:1",
																		"nodeType": "YulAssignment",
																		"src": "402:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:1",
																					"nodeType": "YulLiteral",
																					"src": "414:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:1"
																			},
																			"nativeSrc": "407:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:1",
																"nodeType": "YulBlock",
																"src": "382:3:1",
																"statements": []
															},
															"src": "378:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nativeSrc": "507:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:1",
																		"nodeType": "YulLiteral",
																		"src": "525:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:1"
																},
																"nativeSrc": "500:27:1",
																"nodeType": "YulFunctionCall",
																"src": "500:27:1"
															},
															"nativeSrc": "500:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:1",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:1",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:1",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:246:1"
											},
											{
												"body": {
													"nativeSrc": "587:54:1",
													"nodeType": "YulBlock",
													"src": "587:54:1",
													"statements": [
														{
															"nativeSrc": "597:38:1",
															"nodeType": "YulAssignment",
															"src": "597:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:1",
																				"nodeType": "YulLiteral",
																				"src": "622:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:1"
																		},
																		"nativeSrc": "611:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:1",
																				"nodeType": "YulLiteral",
																				"src": "631:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nativeSrc": "627:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:1"
																},
																"nativeSrc": "607:28:1",
																"nodeType": "YulFunctionCall",
																"src": "607:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:1",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:1",
														"nodeType": "YulTypedName",
														"src": "580:6:1",
														"type": ""
													}
												],
												"src": "539:102:1"
											},
											{
												"body": {
													"nativeSrc": "739:285:1",
													"nodeType": "YulBlock",
													"src": "739:285:1",
													"statements": [
														{
															"nativeSrc": "749:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:1"
																},
																"nativeSrc": "763:39:1",
																"nodeType": "YulFunctionCall",
																"src": "763:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:1",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:1",
															"nodeType": "YulAssignment",
															"src": "811:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:1"
																},
																"nativeSrc": "818:71:1",
																"nodeType": "YulFunctionCall",
																"src": "818:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:1",
																				"nodeType": "YulLiteral",
																				"src": "944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nativeSrc": "933:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:1"
																},
																"nativeSrc": "898:65:1",
																"nodeType": "YulFunctionCall",
																"src": "898:65:1"
															},
															"nativeSrc": "898:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:1"
														},
														{
															"nativeSrc": "972:46:1",
															"nodeType": "YulAssignment",
															"src": "972:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:1"
																		},
																		"nativeSrc": "988:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nativeSrc": "979:39:1",
																"nodeType": "YulFunctionCall",
																"src": "979:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:1",
														"nodeType": "YulTypedName",
														"src": "720:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:1",
														"nodeType": "YulTypedName",
														"src": "727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:1",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													}
												],
												"src": "647:377:1"
											},
											{
												"body": {
													"nativeSrc": "1148:195:1",
													"nodeType": "YulBlock",
													"src": "1148:195:1",
													"statements": [
														{
															"nativeSrc": "1158:26:1",
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nativeSrc": "1166:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:1"
																		},
																		"nativeSrc": "1201:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nativeSrc": "1220:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nativeSrc": "1194:47:1",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:1"
															},
															"nativeSrc": "1194:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:1"
														},
														{
															"nativeSrc": "1250:86:1",
															"nodeType": "YulAssignment",
															"src": "1250:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:1"
																},
																"nativeSrc": "1258:78:1",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:1",
														"nodeType": "YulTypedName",
														"src": "1120:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:1",
														"nodeType": "YulTypedName",
														"src": "1132:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:1",
														"nodeType": "YulTypedName",
														"src": "1143:4:1",
														"type": ""
													}
												],
												"src": "1030:313:1"
											},
											{
												"body": {
													"nativeSrc": "1389:35:1",
													"nodeType": "YulBlock",
													"src": "1389:35:1",
													"statements": [
														{
															"nativeSrc": "1399:19:1",
															"nodeType": "YulAssignment",
															"src": "1399:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:1"
																},
																"nativeSrc": "1409:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:1",
														"nodeType": "YulTypedName",
														"src": "1382:6:1",
														"type": ""
													}
												],
												"src": "1349:75:1"
											},
											{
												"body": {
													"nativeSrc": "1519:28:1",
													"nodeType": "YulBlock",
													"src": "1519:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:1"
																},
																"nativeSrc": "1529:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:1"
															},
															"nativeSrc": "1529:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:1"
											},
											{
												"body": {
													"nativeSrc": "1642:28:1",
													"nodeType": "YulBlock",
													"src": "1642:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:1"
																},
																"nativeSrc": "1652:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:1"
															},
															"nativeSrc": "1652:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:1"
											},
											{
												"body": {
													"nativeSrc": "1721:81:1",
													"nodeType": "YulBlock",
													"src": "1721:81:1",
													"statements": [
														{
															"nativeSrc": "1731:65:1",
															"nodeType": "YulAssignment",
															"src": "1731:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:1",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:1"
																},
																"nativeSrc": "1742:54:1",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:1",
														"nodeType": "YulTypedName",
														"src": "1703:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:1",
														"nodeType": "YulTypedName",
														"src": "1713:7:1",
														"type": ""
													}
												],
												"src": "1676:126:1"
											},
											{
												"body": {
													"nativeSrc": "1853:51:1",
													"nodeType": "YulBlock",
													"src": "1853:51:1",
													"statements": [
														{
															"nativeSrc": "1863:35:1",
															"nodeType": "YulAssignment",
															"src": "1863:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:1"
																},
																"nativeSrc": "1874:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:1",
														"nodeType": "YulTypedName",
														"src": "1835:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:1",
														"nodeType": "YulTypedName",
														"src": "1845:7:1",
														"type": ""
													}
												],
												"src": "1808:96:1"
											},
											{
												"body": {
													"nativeSrc": "1953:79:1",
													"nodeType": "YulBlock",
													"src": "1953:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:1",
																"nodeType": "YulBlock",
																"src": "2010:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:1"
																			},
																			"nativeSrc": "2012:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:1"
																		},
																		"nativeSrc": "2012:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:1"
																				},
																				"nativeSrc": "1983:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:1"
																		},
																		"nativeSrc": "1973:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:1"
																},
																"nativeSrc": "1966:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:1"
															},
															"nativeSrc": "1963:63:1",
															"nodeType": "YulIf",
															"src": "1963:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:1",
														"nodeType": "YulTypedName",
														"src": "1946:5:1",
														"type": ""
													}
												],
												"src": "1910:122:1"
											},
											{
												"body": {
													"nativeSrc": "2090:87:1",
													"nodeType": "YulBlock",
													"src": "2090:87:1",
													"statements": [
														{
															"nativeSrc": "2100:29:1",
															"nodeType": "YulAssignment",
															"src": "2100:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:1"
																},
																"nativeSrc": "2109:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:1"
																},
																"nativeSrc": "2138:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:1"
															},
															"nativeSrc": "2138:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:1",
														"nodeType": "YulTypedName",
														"src": "2068:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:1",
														"nodeType": "YulTypedName",
														"src": "2076:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:1",
														"nodeType": "YulTypedName",
														"src": "2084:5:1",
														"type": ""
													}
												],
												"src": "2038:139:1"
											},
											{
												"body": {
													"nativeSrc": "2228:32:1",
													"nodeType": "YulBlock",
													"src": "2228:32:1",
													"statements": [
														{
															"nativeSrc": "2238:16:1",
															"nodeType": "YulAssignment",
															"src": "2238:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:1",
																"nodeType": "YulIdentifier",
																"src": "2249:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:1",
														"nodeType": "YulTypedName",
														"src": "2210:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:1",
														"nodeType": "YulTypedName",
														"src": "2220:7:1",
														"type": ""
													}
												],
												"src": "2183:77:1"
											},
											{
												"body": {
													"nativeSrc": "2309:79:1",
													"nodeType": "YulBlock",
													"src": "2309:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:1",
																"nodeType": "YulBlock",
																"src": "2366:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:1"
																			},
																			"nativeSrc": "2368:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:1"
																		},
																		"nativeSrc": "2368:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:1"
																				},
																				"nativeSrc": "2339:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:1"
																		},
																		"nativeSrc": "2329:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:1"
																},
																"nativeSrc": "2322:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:1"
															},
															"nativeSrc": "2319:63:1",
															"nodeType": "YulIf",
															"src": "2319:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:1",
														"nodeType": "YulTypedName",
														"src": "2302:5:1",
														"type": ""
													}
												],
												"src": "2266:122:1"
											},
											{
												"body": {
													"nativeSrc": "2446:87:1",
													"nodeType": "YulBlock",
													"src": "2446:87:1",
													"statements": [
														{
															"nativeSrc": "2456:29:1",
															"nodeType": "YulAssignment",
															"src": "2456:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:1"
																},
																"nativeSrc": "2465:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:1"
																},
																"nativeSrc": "2494:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:1"
															},
															"nativeSrc": "2494:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:1",
														"nodeType": "YulTypedName",
														"src": "2424:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:1",
														"nodeType": "YulTypedName",
														"src": "2432:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:1",
														"nodeType": "YulTypedName",
														"src": "2440:5:1",
														"type": ""
													}
												],
												"src": "2394:139:1"
											},
											{
												"body": {
													"nativeSrc": "2622:391:1",
													"nodeType": "YulBlock",
													"src": "2622:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:1",
																"nodeType": "YulBlock",
																"src": "2668:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:1"
																			},
																			"nativeSrc": "2670:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:1"
																		},
																		"nativeSrc": "2670:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:1"
																		},
																		"nativeSrc": "2639:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:1"
																},
																"nativeSrc": "2635:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:1"
															},
															"nativeSrc": "2632:119:1",
															"nodeType": "YulIf",
															"src": "2632:119:1"
														},
														{
															"nativeSrc": "2761:117:1",
															"nodeType": "YulBlock",
															"src": "2761:117:1",
															"statements": [
																{
																	"nativeSrc": "2776:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:1"
																				},
																				"nativeSrc": "2836:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:1"
																		},
																		"nativeSrc": "2815:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:1",
															"nodeType": "YulBlock",
															"src": "2888:118:1",
															"statements": [
																{
																	"nativeSrc": "2903:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:1"
																				},
																				"nativeSrc": "2964:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:1"
																		},
																		"nativeSrc": "2943:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:1",
														"nodeType": "YulTypedName",
														"src": "2584:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:1",
														"nodeType": "YulTypedName",
														"src": "2595:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:1",
														"nodeType": "YulTypedName",
														"src": "2607:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:1",
														"nodeType": "YulTypedName",
														"src": "2615:6:1",
														"type": ""
													}
												],
												"src": "2539:474:1"
											},
											{
												"body": {
													"nativeSrc": "3061:48:1",
													"nodeType": "YulBlock",
													"src": "3061:48:1",
													"statements": [
														{
															"nativeSrc": "3071:32:1",
															"nodeType": "YulAssignment",
															"src": "3071:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:1"
																		},
																		"nativeSrc": "3089:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:1"
																},
																"nativeSrc": "3082:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:1",
														"nodeType": "YulTypedName",
														"src": "3043:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:1",
														"nodeType": "YulTypedName",
														"src": "3053:7:1",
														"type": ""
													}
												],
												"src": "3019:90:1"
											},
											{
												"body": {
													"nativeSrc": "3174:50:1",
													"nodeType": "YulBlock",
													"src": "3174:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:1"
																		},
																		"nativeSrc": "3196:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:1"
																},
																"nativeSrc": "3184:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:1"
															},
															"nativeSrc": "3184:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:1",
														"nodeType": "YulTypedName",
														"src": "3162:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:1",
														"nodeType": "YulTypedName",
														"src": "3169:3:1",
														"type": ""
													}
												],
												"src": "3115:109:1"
											},
											{
												"body": {
													"nativeSrc": "3322:118:1",
													"nodeType": "YulBlock",
													"src": "3322:118:1",
													"statements": [
														{
															"nativeSrc": "3332:26:1",
															"nodeType": "YulAssignment",
															"src": "3332:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:1"
																},
																"nativeSrc": "3340:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:1"
																		},
																		"nativeSrc": "3415:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:1"
																},
																"nativeSrc": "3368:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:1"
															},
															"nativeSrc": "3368:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:1",
														"nodeType": "YulTypedName",
														"src": "3294:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:1",
														"nodeType": "YulTypedName",
														"src": "3306:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:1",
														"nodeType": "YulTypedName",
														"src": "3317:4:1",
														"type": ""
													}
												],
												"src": "3230:210:1"
											},
											{
												"body": {
													"nativeSrc": "3511:53:1",
													"nodeType": "YulBlock",
													"src": "3511:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:1"
																		},
																		"nativeSrc": "3533:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:1"
																},
																"nativeSrc": "3521:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:1"
															},
															"nativeSrc": "3521:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:1",
														"nodeType": "YulTypedName",
														"src": "3499:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:1",
														"nodeType": "YulTypedName",
														"src": "3506:3:1",
														"type": ""
													}
												],
												"src": "3446:118:1"
											},
											{
												"body": {
													"nativeSrc": "3668:124:1",
													"nodeType": "YulBlock",
													"src": "3668:124:1",
													"statements": [
														{
															"nativeSrc": "3678:26:1",
															"nodeType": "YulAssignment",
															"src": "3678:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:1"
																},
																"nativeSrc": "3686:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:1"
																		},
																		"nativeSrc": "3767:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:1"
																},
																"nativeSrc": "3714:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:1"
															},
															"nativeSrc": "3714:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:1",
														"nodeType": "YulTypedName",
														"src": "3640:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:1",
														"nodeType": "YulTypedName",
														"src": "3652:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:1",
														"nodeType": "YulTypedName",
														"src": "3663:4:1",
														"type": ""
													}
												],
												"src": "3570:222:1"
											},
											{
												"body": {
													"nativeSrc": "3898:519:1",
													"nodeType": "YulBlock",
													"src": "3898:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:1",
																"nodeType": "YulBlock",
																"src": "3944:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:1"
																			},
																			"nativeSrc": "3946:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:1"
																		},
																		"nativeSrc": "3946:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:1"
																		},
																		"nativeSrc": "3915:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:1"
																},
																"nativeSrc": "3911:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:1"
															},
															"nativeSrc": "3908:119:1",
															"nodeType": "YulIf",
															"src": "3908:119:1"
														},
														{
															"nativeSrc": "4037:117:1",
															"nodeType": "YulBlock",
															"src": "4037:117:1",
															"statements": [
																{
																	"nativeSrc": "4052:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:1"
																				},
																				"nativeSrc": "4112:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:1"
																		},
																		"nativeSrc": "4091:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:1",
															"nodeType": "YulBlock",
															"src": "4164:118:1",
															"statements": [
																{
																	"nativeSrc": "4179:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:1"
																				},
																				"nativeSrc": "4240:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:1"
																		},
																		"nativeSrc": "4219:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:1",
															"nodeType": "YulBlock",
															"src": "4292:118:1",
															"statements": [
																{
																	"nativeSrc": "4307:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:1"
																				},
																				"nativeSrc": "4368:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:1"
																		},
																		"nativeSrc": "4347:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:1",
														"nodeType": "YulTypedName",
														"src": "3852:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:1",
														"nodeType": "YulTypedName",
														"src": "3863:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:1",
														"nodeType": "YulTypedName",
														"src": "3875:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:1",
														"nodeType": "YulTypedName",
														"src": "3883:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:1",
														"nodeType": "YulTypedName",
														"src": "3891:6:1",
														"type": ""
													}
												],
												"src": "3798:619:1"
											},
											{
												"body": {
													"nativeSrc": "4466:43:1",
													"nodeType": "YulBlock",
													"src": "4466:43:1",
													"statements": [
														{
															"nativeSrc": "4476:27:1",
															"nodeType": "YulAssignment",
															"src": "4476:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:1"
																},
																"nativeSrc": "4487:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:1",
														"nodeType": "YulTypedName",
														"src": "4448:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:1",
														"nodeType": "YulTypedName",
														"src": "4458:7:1",
														"type": ""
													}
												],
												"src": "4423:86:1"
											},
											{
												"body": {
													"nativeSrc": "4576:51:1",
													"nodeType": "YulBlock",
													"src": "4576:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:1",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:1"
																		},
																		"nativeSrc": "4598:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:1"
																},
																"nativeSrc": "4586:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:1"
															},
															"nativeSrc": "4586:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:1",
														"nodeType": "YulTypedName",
														"src": "4564:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:1",
														"nodeType": "YulTypedName",
														"src": "4571:3:1",
														"type": ""
													}
												],
												"src": "4515:112:1"
											},
											{
												"body": {
													"nativeSrc": "4727:120:1",
													"nodeType": "YulBlock",
													"src": "4727:120:1",
													"statements": [
														{
															"nativeSrc": "4737:26:1",
															"nodeType": "YulAssignment",
															"src": "4737:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:1"
																},
																"nativeSrc": "4745:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:1"
																		},
																		"nativeSrc": "4822:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:1"
																},
																"nativeSrc": "4773:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:1"
															},
															"nativeSrc": "4773:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:1",
														"nodeType": "YulTypedName",
														"src": "4699:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:1",
														"nodeType": "YulTypedName",
														"src": "4711:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:1",
														"nodeType": "YulTypedName",
														"src": "4722:4:1",
														"type": ""
													}
												],
												"src": "4633:214:1"
											},
											{
												"body": {
													"nativeSrc": "4898:32:1",
													"nodeType": "YulBlock",
													"src": "4898:32:1",
													"statements": [
														{
															"nativeSrc": "4908:16:1",
															"nodeType": "YulAssignment",
															"src": "4908:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "4919:5:1",
																"nodeType": "YulIdentifier",
																"src": "4919:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4908:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4908:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "4853:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4880:5:1",
														"nodeType": "YulTypedName",
														"src": "4880:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4890:7:1",
														"nodeType": "YulTypedName",
														"src": "4890:7:1",
														"type": ""
													}
												],
												"src": "4853:77:1"
											},
											{
												"body": {
													"nativeSrc": "5001:53:1",
													"nodeType": "YulBlock",
													"src": "5001:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5018:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5018:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5041:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5041:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5023:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "5023:17:1"
																		},
																		"nativeSrc": "5023:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5023:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5011:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5011:6:1"
																},
																"nativeSrc": "5011:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5011:37:1"
															},
															"nativeSrc": "5011:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "5011:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "4936:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4989:5:1",
														"nodeType": "YulTypedName",
														"src": "4989:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4996:3:1",
														"nodeType": "YulTypedName",
														"src": "4996:3:1",
														"type": ""
													}
												],
												"src": "4936:118:1"
											},
											{
												"body": {
													"nativeSrc": "5158:124:1",
													"nodeType": "YulBlock",
													"src": "5158:124:1",
													"statements": [
														{
															"nativeSrc": "5168:26:1",
															"nodeType": "YulAssignment",
															"src": "5168:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5180:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5180:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5191:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5191:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5176:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5176:3:1"
																},
																"nativeSrc": "5176:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5176:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5168:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5168:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5248:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5248:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5261:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5261:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5272:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5272:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5257:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5257:3:1"
																		},
																		"nativeSrc": "5257:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5257:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "5204:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "5204:43:1"
																},
																"nativeSrc": "5204:71:1",
																"nodeType": "YulFunctionCall",
																"src": "5204:71:1"
															},
															"nativeSrc": "5204:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "5204:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5060:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5130:9:1",
														"nodeType": "YulTypedName",
														"src": "5130:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5142:6:1",
														"nodeType": "YulTypedName",
														"src": "5142:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5153:4:1",
														"nodeType": "YulTypedName",
														"src": "5153:4:1",
														"type": ""
													}
												],
												"src": "5060:222:1"
											},
											{
												"body": {
													"nativeSrc": "5354:263:1",
													"nodeType": "YulBlock",
													"src": "5354:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5400:83:1",
																"nodeType": "YulBlock",
																"src": "5400:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5402:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5402:77:1"
																			},
																			"nativeSrc": "5402:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5402:79:1"
																		},
																		"nativeSrc": "5402:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5402:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5375:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5375:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5384:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5384:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5371:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5371:3:1"
																		},
																		"nativeSrc": "5371:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5371:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5396:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5396:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5367:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5367:3:1"
																},
																"nativeSrc": "5367:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5367:32:1"
															},
															"nativeSrc": "5364:119:1",
															"nodeType": "YulIf",
															"src": "5364:119:1"
														},
														{
															"nativeSrc": "5493:117:1",
															"nodeType": "YulBlock",
															"src": "5493:117:1",
															"statements": [
																{
																	"nativeSrc": "5508:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5508:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5522:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5522:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5512:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5512:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5537:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5537:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5572:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5572:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5583:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5583:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5568:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5568:3:1"
																				},
																				"nativeSrc": "5568:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5568:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5592:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5592:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5547:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5547:20:1"
																		},
																		"nativeSrc": "5547:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5547:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5537:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5537:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5288:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5324:9:1",
														"nodeType": "YulTypedName",
														"src": "5324:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5335:7:1",
														"nodeType": "YulTypedName",
														"src": "5335:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5347:6:1",
														"nodeType": "YulTypedName",
														"src": "5347:6:1",
														"type": ""
													}
												],
												"src": "5288:329:1"
											},
											{
												"body": {
													"nativeSrc": "5667:105:1",
													"nodeType": "YulBlock",
													"src": "5667:105:1",
													"statements": [
														{
															"nativeSrc": "5677:89:1",
															"nodeType": "YulAssignment",
															"src": "5677:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5692:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5692:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5699:66:1",
																		"nodeType": "YulLiteral",
																		"src": "5699:66:1",
																		"type": "",
																		"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5688:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5688:3:1"
																},
																"nativeSrc": "5688:78:1",
																"nodeType": "YulFunctionCall",
																"src": "5688:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5677:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5677:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes1",
												"nativeSrc": "5623:149:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5649:5:1",
														"nodeType": "YulTypedName",
														"src": "5649:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5659:7:1",
														"nodeType": "YulTypedName",
														"src": "5659:7:1",
														"type": ""
													}
												],
												"src": "5623:149:1"
											},
											{
												"body": {
													"nativeSrc": "5841:52:1",
													"nodeType": "YulBlock",
													"src": "5841:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5858:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5858:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5880:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5880:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes1",
																			"nativeSrc": "5863:16:1",
																			"nodeType": "YulIdentifier",
																			"src": "5863:16:1"
																		},
																		"nativeSrc": "5863:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5863:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5851:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5851:6:1"
																},
																"nativeSrc": "5851:36:1",
																"nodeType": "YulFunctionCall",
																"src": "5851:36:1"
															},
															"nativeSrc": "5851:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "5851:36:1"
														}
													]
												},
												"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
												"nativeSrc": "5778:115:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5829:5:1",
														"nodeType": "YulTypedName",
														"src": "5829:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5836:3:1",
														"nodeType": "YulTypedName",
														"src": "5836:3:1",
														"type": ""
													}
												],
												"src": "5778:115:1"
											},
											{
												"body": {
													"nativeSrc": "5964:53:1",
													"nodeType": "YulBlock",
													"src": "5964:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5981:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5981:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6004:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6004:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5986:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "5986:17:1"
																		},
																		"nativeSrc": "5986:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5986:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5974:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5974:6:1"
																},
																"nativeSrc": "5974:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5974:37:1"
															},
															"nativeSrc": "5974:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "5974:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5899:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5952:5:1",
														"nodeType": "YulTypedName",
														"src": "5952:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5959:3:1",
														"nodeType": "YulTypedName",
														"src": "5959:3:1",
														"type": ""
													}
												],
												"src": "5899:118:1"
											},
											{
												"body": {
													"nativeSrc": "6097:40:1",
													"nodeType": "YulBlock",
													"src": "6097:40:1",
													"statements": [
														{
															"nativeSrc": "6108:22:1",
															"nodeType": "YulAssignment",
															"src": "6108:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6124:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6124:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6118:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6118:5:1"
																},
																"nativeSrc": "6118:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6118:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6108:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6108:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6023:114:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6080:5:1",
														"nodeType": "YulTypedName",
														"src": "6080:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6090:6:1",
														"nodeType": "YulTypedName",
														"src": "6090:6:1",
														"type": ""
													}
												],
												"src": "6023:114:1"
											},
											{
												"body": {
													"nativeSrc": "6254:73:1",
													"nodeType": "YulBlock",
													"src": "6254:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6271:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6271:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6276:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6276:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6264:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6264:6:1"
																},
																"nativeSrc": "6264:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6264:19:1"
															},
															"nativeSrc": "6264:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "6264:19:1"
														},
														{
															"nativeSrc": "6292:29:1",
															"nodeType": "YulAssignment",
															"src": "6292:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6311:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6311:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6316:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6316:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6307:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6307:3:1"
																},
																"nativeSrc": "6307:14:1",
																"nodeType": "YulFunctionCall",
																"src": "6307:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6292:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "6292:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6143:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6226:3:1",
														"nodeType": "YulTypedName",
														"src": "6226:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6231:6:1",
														"nodeType": "YulTypedName",
														"src": "6231:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6242:11:1",
														"nodeType": "YulTypedName",
														"src": "6242:11:1",
														"type": ""
													}
												],
												"src": "6143:184:1"
											},
											{
												"body": {
													"nativeSrc": "6405:60:1",
													"nodeType": "YulBlock",
													"src": "6405:60:1",
													"statements": [
														{
															"nativeSrc": "6415:11:1",
															"nodeType": "YulAssignment",
															"src": "6415:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "6423:3:1",
																"nodeType": "YulIdentifier",
																"src": "6423:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6415:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6415:4:1"
																}
															]
														},
														{
															"nativeSrc": "6436:22:1",
															"nodeType": "YulAssignment",
															"src": "6436:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6448:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6448:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6453:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6453:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6444:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6444:3:1"
																},
																"nativeSrc": "6444:14:1",
																"nodeType": "YulFunctionCall",
																"src": "6444:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6436:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6436:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6333:132:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6392:3:1",
														"nodeType": "YulTypedName",
														"src": "6392:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6400:4:1",
														"nodeType": "YulTypedName",
														"src": "6400:4:1",
														"type": ""
													}
												],
												"src": "6333:132:1"
											},
											{
												"body": {
													"nativeSrc": "6526:53:1",
													"nodeType": "YulBlock",
													"src": "6526:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6543:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6543:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6566:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6566:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6548:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6548:17:1"
																		},
																		"nativeSrc": "6548:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6548:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6536:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6536:6:1"
																},
																"nativeSrc": "6536:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6536:37:1"
															},
															"nativeSrc": "6536:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "6536:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "6471:108:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6514:5:1",
														"nodeType": "YulTypedName",
														"src": "6514:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6521:3:1",
														"nodeType": "YulTypedName",
														"src": "6521:3:1",
														"type": ""
													}
												],
												"src": "6471:108:1"
											},
											{
												"body": {
													"nativeSrc": "6665:99:1",
													"nodeType": "YulBlock",
													"src": "6665:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6709:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6709:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6717:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6717:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "6675:33:1",
																	"nodeType": "YulIdentifier",
																	"src": "6675:33:1"
																},
																"nativeSrc": "6675:46:1",
																"nodeType": "YulFunctionCall",
																"src": "6675:46:1"
															},
															"nativeSrc": "6675:46:1",
															"nodeType": "YulExpressionStatement",
															"src": "6675:46:1"
														},
														{
															"nativeSrc": "6730:28:1",
															"nodeType": "YulAssignment",
															"src": "6730:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6748:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6748:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6753:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6753:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6744:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6744:3:1"
																},
																"nativeSrc": "6744:14:1",
																"nodeType": "YulFunctionCall",
																"src": "6744:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "6730:10:1",
																	"nodeType": "YulIdentifier",
																	"src": "6730:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "6585:179:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "6638:6:1",
														"nodeType": "YulTypedName",
														"src": "6638:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6646:3:1",
														"nodeType": "YulTypedName",
														"src": "6646:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "6654:10:1",
														"nodeType": "YulTypedName",
														"src": "6654:10:1",
														"type": ""
													}
												],
												"src": "6585:179:1"
											},
											{
												"body": {
													"nativeSrc": "6845:38:1",
													"nodeType": "YulBlock",
													"src": "6845:38:1",
													"statements": [
														{
															"nativeSrc": "6855:22:1",
															"nodeType": "YulAssignment",
															"src": "6855:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6867:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6867:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6872:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6872:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6863:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6863:3:1"
																},
																"nativeSrc": "6863:14:1",
																"nodeType": "YulFunctionCall",
																"src": "6863:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "6855:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6855:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6770:113:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6832:3:1",
														"nodeType": "YulTypedName",
														"src": "6832:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "6840:4:1",
														"nodeType": "YulTypedName",
														"src": "6840:4:1",
														"type": ""
													}
												],
												"src": "6770:113:1"
											},
											{
												"body": {
													"nativeSrc": "7043:608:1",
													"nodeType": "YulBlock",
													"src": "7043:608:1",
													"statements": [
														{
															"nativeSrc": "7053:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7053:68:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7115:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7115:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7067:47:1",
																	"nodeType": "YulIdentifier",
																	"src": "7067:47:1"
																},
																"nativeSrc": "7067:54:1",
																"nodeType": "YulFunctionCall",
																"src": "7067:54:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7057:6:1",
																	"nodeType": "YulTypedName",
																	"src": "7057:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7130:93:1",
															"nodeType": "YulAssignment",
															"src": "7130:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7211:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7211:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7216:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7216:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7137:73:1",
																	"nodeType": "YulIdentifier",
																	"src": "7137:73:1"
																},
																"nativeSrc": "7137:86:1",
																"nodeType": "YulFunctionCall",
																"src": "7137:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7130:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7130:3:1"
																}
															]
														},
														{
															"nativeSrc": "7232:71:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7232:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7297:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7297:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7247:49:1",
																	"nodeType": "YulIdentifier",
																	"src": "7247:49:1"
																},
																"nativeSrc": "7247:56:1",
																"nodeType": "YulFunctionCall",
																"src": "7247:56:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "7236:7:1",
																	"nodeType": "YulTypedName",
																	"src": "7236:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7312:21:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7312:21:1",
															"value": {
																"name": "baseRef",
																"nativeSrc": "7326:7:1",
																"nodeType": "YulIdentifier",
																"src": "7326:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "7316:6:1",
																	"nodeType": "YulTypedName",
																	"src": "7316:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7402:224:1",
																"nodeType": "YulBlock",
																"src": "7402:224:1",
																"statements": [
																	{
																		"nativeSrc": "7416:34:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7416:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7443:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "7443:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7437:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7437:5:1"
																			},
																			"nativeSrc": "7437:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7437:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "7420:13:1",
																				"nodeType": "YulTypedName",
																				"src": "7420:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7463:70:1",
																		"nodeType": "YulAssignment",
																		"src": "7463:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "7514:13:1",
																					"nodeType": "YulIdentifier",
																					"src": "7514:13:1"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "7529:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7529:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "7470:43:1",
																				"nodeType": "YulIdentifier",
																				"src": "7470:43:1"
																			},
																			"nativeSrc": "7470:63:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7470:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7463:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7463:3:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7546:70:1",
																		"nodeType": "YulAssignment",
																		"src": "7546:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7609:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "7609:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "7556:52:1",
																				"nodeType": "YulIdentifier",
																				"src": "7556:52:1"
																			},
																			"nativeSrc": "7556:60:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7556:60:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7546:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7546:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7364:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7364:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7367:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7367:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7361:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7361:2:1"
																},
																"nativeSrc": "7361:13:1",
																"nodeType": "YulFunctionCall",
																"src": "7361:13:1"
															},
															"nativeSrc": "7342:284:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7375:18:1",
																"nodeType": "YulBlock",
																"src": "7375:18:1",
																"statements": [
																	{
																		"nativeSrc": "7377:14:1",
																		"nodeType": "YulAssignment",
																		"src": "7377:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7386:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "7386:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7389:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7389:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7382:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7382:3:1"
																			},
																			"nativeSrc": "7382:9:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7382:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7377:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "7377:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7346:14:1",
																"nodeType": "YulBlock",
																"src": "7346:14:1",
																"statements": [
																	{
																		"nativeSrc": "7348:10:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7348:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7357:1:1",
																			"nodeType": "YulLiteral",
																			"src": "7357:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "7352:1:1",
																				"nodeType": "YulTypedName",
																				"src": "7352:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7342:284:1"
														},
														{
															"nativeSrc": "7635:10:1",
															"nodeType": "YulAssignment",
															"src": "7635:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "7642:3:1",
																"nodeType": "YulIdentifier",
																"src": "7642:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7635:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7635:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6919:732:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7022:5:1",
														"nodeType": "YulTypedName",
														"src": "7022:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7029:3:1",
														"nodeType": "YulTypedName",
														"src": "7029:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7038:3:1",
														"nodeType": "YulTypedName",
														"src": "7038:3:1",
														"type": ""
													}
												],
												"src": "6919:732:1"
											},
											{
												"body": {
													"nativeSrc": "8011:861:1",
													"nodeType": "YulBlock",
													"src": "8011:861:1",
													"statements": [
														{
															"nativeSrc": "8021:27:1",
															"nodeType": "YulAssignment",
															"src": "8021:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8033:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8033:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8044:3:1",
																		"nodeType": "YulLiteral",
																		"src": "8044:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8029:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8029:3:1"
																},
																"nativeSrc": "8029:19:1",
																"nodeType": "YulFunctionCall",
																"src": "8029:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8021:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8021:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8100:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8100:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8113:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8113:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8124:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8124:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8109:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8109:3:1"
																		},
																		"nativeSrc": "8109:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8109:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
																	"nativeSrc": "8058:41:1",
																	"nodeType": "YulIdentifier",
																	"src": "8058:41:1"
																},
																"nativeSrc": "8058:69:1",
																"nodeType": "YulFunctionCall",
																"src": "8058:69:1"
															},
															"nativeSrc": "8058:69:1",
															"nodeType": "YulExpressionStatement",
															"src": "8058:69:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8148:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8148:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8159:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8159:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8144:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8144:3:1"
																		},
																		"nativeSrc": "8144:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8144:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8168:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8168:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8174:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8174:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8164:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8164:3:1"
																		},
																		"nativeSrc": "8164:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8164:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8137:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8137:6:1"
																},
																"nativeSrc": "8137:48:1",
																"nodeType": "YulFunctionCall",
																"src": "8137:48:1"
															},
															"nativeSrc": "8137:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "8137:48:1"
														},
														{
															"nativeSrc": "8194:86:1",
															"nodeType": "YulAssignment",
															"src": "8194:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8266:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8266:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8275:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8275:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8202:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "8202:63:1"
																},
																"nativeSrc": "8202:78:1",
																"nodeType": "YulFunctionCall",
																"src": "8202:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8194:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8194:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8301:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8301:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8312:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8312:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8297:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8297:3:1"
																		},
																		"nativeSrc": "8297:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8297:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8321:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8321:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8327:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8327:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8317:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8317:3:1"
																		},
																		"nativeSrc": "8317:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8317:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8290:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8290:6:1"
																},
																"nativeSrc": "8290:48:1",
																"nodeType": "YulFunctionCall",
																"src": "8290:48:1"
															},
															"nativeSrc": "8290:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "8290:48:1"
														},
														{
															"nativeSrc": "8347:86:1",
															"nodeType": "YulAssignment",
															"src": "8347:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8419:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8419:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8428:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8428:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8355:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "8355:63:1"
																},
																"nativeSrc": "8355:78:1",
																"nodeType": "YulFunctionCall",
																"src": "8355:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8347:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8347:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8487:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8487:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8500:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8500:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8511:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8511:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8496:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8496:3:1"
																		},
																		"nativeSrc": "8496:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8496:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8443:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8443:43:1"
																},
																"nativeSrc": "8443:72:1",
																"nodeType": "YulFunctionCall",
																"src": "8443:72:1"
															},
															"nativeSrc": "8443:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "8443:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "8569:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8569:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8582:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8582:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:3:1",
																				"nodeType": "YulLiteral",
																				"src": "8593:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8578:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8578:3:1"
																		},
																		"nativeSrc": "8578:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8578:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8525:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8525:43:1"
																},
																"nativeSrc": "8525:73:1",
																"nodeType": "YulFunctionCall",
																"src": "8525:73:1"
															},
															"nativeSrc": "8525:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "8525:73:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "8652:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8652:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8665:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8665:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8676:3:1",
																				"nodeType": "YulLiteral",
																				"src": "8676:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8661:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8661:3:1"
																		},
																		"nativeSrc": "8661:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8661:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "8608:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8608:43:1"
																},
																"nativeSrc": "8608:73:1",
																"nodeType": "YulFunctionCall",
																"src": "8608:73:1"
															},
															"nativeSrc": "8608:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "8608:73:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8702:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8702:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8713:3:1",
																				"nodeType": "YulLiteral",
																				"src": "8713:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8698:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8698:3:1"
																		},
																		"nativeSrc": "8698:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8698:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8723:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8723:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8729:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8729:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8719:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8719:3:1"
																		},
																		"nativeSrc": "8719:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8719:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8691:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8691:6:1"
																},
																"nativeSrc": "8691:49:1",
																"nodeType": "YulFunctionCall",
																"src": "8691:49:1"
															},
															"nativeSrc": "8691:49:1",
															"nodeType": "YulExpressionStatement",
															"src": "8691:49:1"
														},
														{
															"nativeSrc": "8749:116:1",
															"nodeType": "YulAssignment",
															"src": "8749:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "8851:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8851:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8860:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8860:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8757:93:1",
																	"nodeType": "YulIdentifier",
																	"src": "8757:93:1"
																},
																"nativeSrc": "8757:108:1",
																"nodeType": "YulFunctionCall",
																"src": "8757:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8749:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8749:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "7657:1215:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7935:9:1",
														"nodeType": "YulTypedName",
														"src": "7935:9:1",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "7947:6:1",
														"nodeType": "YulTypedName",
														"src": "7947:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "7955:6:1",
														"nodeType": "YulTypedName",
														"src": "7955:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7963:6:1",
														"nodeType": "YulTypedName",
														"src": "7963:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7971:6:1",
														"nodeType": "YulTypedName",
														"src": "7971:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7979:6:1",
														"nodeType": "YulTypedName",
														"src": "7979:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7987:6:1",
														"nodeType": "YulTypedName",
														"src": "7987:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7995:6:1",
														"nodeType": "YulTypedName",
														"src": "7995:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8006:4:1",
														"nodeType": "YulTypedName",
														"src": "8006:4:1",
														"type": ""
													}
												],
												"src": "7657:1215:1"
											},
											{
												"body": {
													"nativeSrc": "8976:124:1",
													"nodeType": "YulBlock",
													"src": "8976:124:1",
													"statements": [
														{
															"nativeSrc": "8986:26:1",
															"nodeType": "YulAssignment",
															"src": "8986:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8998:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8998:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9009:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9009:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8994:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8994:3:1"
																},
																"nativeSrc": "8994:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8994:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8986:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8986:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9066:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9066:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9079:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9079:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9090:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9090:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9075:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9075:3:1"
																		},
																		"nativeSrc": "9075:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9075:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9022:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9022:43:1"
																},
																"nativeSrc": "9022:71:1",
																"nodeType": "YulFunctionCall",
																"src": "9022:71:1"
															},
															"nativeSrc": "9022:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "9022:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8878:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8948:9:1",
														"nodeType": "YulTypedName",
														"src": "8948:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8960:6:1",
														"nodeType": "YulTypedName",
														"src": "8960:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8971:4:1",
														"nodeType": "YulTypedName",
														"src": "8971:4:1",
														"type": ""
													}
												],
												"src": "8878:222:1"
											},
											{
												"body": {
													"nativeSrc": "9147:77:1",
													"nodeType": "YulBlock",
													"src": "9147:77:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "9202:16:1",
																"nodeType": "YulBlock",
																"src": "9202:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9211:1:1",
																					"nodeType": "YulLiteral",
																					"src": "9211:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9214:1:1",
																					"nodeType": "YulLiteral",
																					"src": "9214:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9204:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9204:6:1"
																			},
																			"nativeSrc": "9204:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9204:12:1"
																		},
																		"nativeSrc": "9204:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9204:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9170:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "9170:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9193:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "9193:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "9177:15:1",
																					"nodeType": "YulIdentifier",
																					"src": "9177:15:1"
																				},
																				"nativeSrc": "9177:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9177:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9167:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "9167:2:1"
																		},
																		"nativeSrc": "9167:33:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9167:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9160:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9160:6:1"
																},
																"nativeSrc": "9160:41:1",
																"nodeType": "YulFunctionCall",
																"src": "9160:41:1"
															},
															"nativeSrc": "9157:61:1",
															"nodeType": "YulIf",
															"src": "9157:61:1"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "9106:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9140:5:1",
														"nodeType": "YulTypedName",
														"src": "9140:5:1",
														"type": ""
													}
												],
												"src": "9106:118:1"
											},
											{
												"body": {
													"nativeSrc": "9280:85:1",
													"nodeType": "YulBlock",
													"src": "9280:85:1",
													"statements": [
														{
															"nativeSrc": "9290:29:1",
															"nodeType": "YulAssignment",
															"src": "9290:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9312:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9312:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9299:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "9299:12:1"
																},
																"nativeSrc": "9299:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9299:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9290:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "9290:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9353:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "9353:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "9328:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "9328:24:1"
																},
																"nativeSrc": "9328:31:1",
																"nodeType": "YulFunctionCall",
																"src": "9328:31:1"
															},
															"nativeSrc": "9328:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "9328:31:1"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "9230:135:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9258:6:1",
														"nodeType": "YulTypedName",
														"src": "9258:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9266:3:1",
														"nodeType": "YulTypedName",
														"src": "9266:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9274:5:1",
														"nodeType": "YulTypedName",
														"src": "9274:5:1",
														"type": ""
													}
												],
												"src": "9230:135:1"
											},
											{
												"body": {
													"nativeSrc": "9414:79:1",
													"nodeType": "YulBlock",
													"src": "9414:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "9471:16:1",
																"nodeType": "YulBlock",
																"src": "9471:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9480:1:1",
																					"nodeType": "YulLiteral",
																					"src": "9480:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9483:1:1",
																					"nodeType": "YulLiteral",
																					"src": "9483:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9473:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9473:6:1"
																			},
																			"nativeSrc": "9473:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9473:12:1"
																		},
																		"nativeSrc": "9473:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9473:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9437:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "9437:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9462:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "9462:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "9444:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "9444:17:1"
																				},
																				"nativeSrc": "9444:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9444:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9434:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "9434:2:1"
																		},
																		"nativeSrc": "9434:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9434:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9427:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9427:6:1"
																},
																"nativeSrc": "9427:43:1",
																"nodeType": "YulFunctionCall",
																"src": "9427:43:1"
															},
															"nativeSrc": "9424:63:1",
															"nodeType": "YulIf",
															"src": "9424:63:1"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "9371:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9407:5:1",
														"nodeType": "YulTypedName",
														"src": "9407:5:1",
														"type": ""
													}
												],
												"src": "9371:122:1"
											},
											{
												"body": {
													"nativeSrc": "9551:87:1",
													"nodeType": "YulBlock",
													"src": "9551:87:1",
													"statements": [
														{
															"nativeSrc": "9561:29:1",
															"nodeType": "YulAssignment",
															"src": "9561:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9583:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9583:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9570:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "9570:12:1"
																},
																"nativeSrc": "9570:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9570:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9561:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "9561:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9626:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "9626:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "9599:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "9599:26:1"
																},
																"nativeSrc": "9599:33:1",
																"nodeType": "YulFunctionCall",
																"src": "9599:33:1"
															},
															"nativeSrc": "9599:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "9599:33:1"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "9499:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9529:6:1",
														"nodeType": "YulTypedName",
														"src": "9529:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9537:3:1",
														"nodeType": "YulTypedName",
														"src": "9537:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9545:5:1",
														"nodeType": "YulTypedName",
														"src": "9545:5:1",
														"type": ""
													}
												],
												"src": "9499:139:1"
											},
											{
												"body": {
													"nativeSrc": "9810:1033:1",
													"nodeType": "YulBlock",
													"src": "9810:1033:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "9857:83:1",
																"nodeType": "YulBlock",
																"src": "9857:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9859:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "9859:77:1"
																			},
																			"nativeSrc": "9859:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9859:79:1"
																		},
																		"nativeSrc": "9859:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9859:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9831:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9831:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9840:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9840:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9827:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9827:3:1"
																		},
																		"nativeSrc": "9827:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9827:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9852:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9852:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9823:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9823:3:1"
																},
																"nativeSrc": "9823:33:1",
																"nodeType": "YulFunctionCall",
																"src": "9823:33:1"
															},
															"nativeSrc": "9820:120:1",
															"nodeType": "YulIf",
															"src": "9820:120:1"
														},
														{
															"nativeSrc": "9950:117:1",
															"nodeType": "YulBlock",
															"src": "9950:117:1",
															"statements": [
																{
																	"nativeSrc": "9965:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9965:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9979:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9979:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9969:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9969:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9994:63:1",
																	"nodeType": "YulAssignment",
																	"src": "9994:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10029:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10029:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10040:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10040:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10025:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10025:3:1"
																				},
																				"nativeSrc": "10025:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10025:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10049:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10049:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10004:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10004:20:1"
																		},
																		"nativeSrc": "10004:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10004:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9994:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9994:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10077:118:1",
															"nodeType": "YulBlock",
															"src": "10077:118:1",
															"statements": [
																{
																	"nativeSrc": "10092:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10092:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10106:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10106:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10096:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10096:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10122:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10122:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10157:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10157:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10168:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10168:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10153:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10153:3:1"
																				},
																				"nativeSrc": "10153:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10153:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10177:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10177:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10132:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10132:20:1"
																		},
																		"nativeSrc": "10132:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10132:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10122:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10122:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10205:118:1",
															"nodeType": "YulBlock",
															"src": "10205:118:1",
															"statements": [
																{
																	"nativeSrc": "10220:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10220:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10234:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10234:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10224:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10224:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10250:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10250:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10285:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10285:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10296:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10296:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10281:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10281:3:1"
																				},
																				"nativeSrc": "10281:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10281:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10305:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10305:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10260:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10260:20:1"
																		},
																		"nativeSrc": "10260:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10260:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10250:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10250:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10333:118:1",
															"nodeType": "YulBlock",
															"src": "10333:118:1",
															"statements": [
																{
																	"nativeSrc": "10348:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10348:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10362:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10362:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10352:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10352:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10378:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10378:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10413:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10413:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10424:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10424:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10409:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10409:3:1"
																				},
																				"nativeSrc": "10409:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10409:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10433:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10433:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10388:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10388:20:1"
																		},
																		"nativeSrc": "10388:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10388:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10378:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10378:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10461:117:1",
															"nodeType": "YulBlock",
															"src": "10461:117:1",
															"statements": [
																{
																	"nativeSrc": "10476:17:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10476:17:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10490:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10490:3:1",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10480:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10480:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10507:61:1",
																	"nodeType": "YulAssignment",
																	"src": "10507:61:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10540:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10540:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10551:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10551:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10536:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10536:3:1"
																				},
																				"nativeSrc": "10536:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10536:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10560:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10560:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "10517:18:1",
																			"nodeType": "YulIdentifier",
																			"src": "10517:18:1"
																		},
																		"nativeSrc": "10517:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10517:51:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "10507:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10507:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10588:119:1",
															"nodeType": "YulBlock",
															"src": "10588:119:1",
															"statements": [
																{
																	"nativeSrc": "10603:17:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10603:17:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10617:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10617:3:1",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10607:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10607:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10634:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10634:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10669:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10669:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10680:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10680:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10665:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10665:3:1"
																				},
																				"nativeSrc": "10665:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10665:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10689:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10689:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "10644:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10644:20:1"
																		},
																		"nativeSrc": "10644:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10644:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "10634:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10634:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10717:119:1",
															"nodeType": "YulBlock",
															"src": "10717:119:1",
															"statements": [
																{
																	"nativeSrc": "10732:17:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10732:17:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10746:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10746:3:1",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10736:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10736:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10763:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10763:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10798:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10798:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10809:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10809:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10794:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10794:3:1"
																				},
																				"nativeSrc": "10794:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10794:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10818:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10818:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "10773:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10773:20:1"
																		},
																		"nativeSrc": "10773:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10773:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "10763:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10763:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nativeSrc": "9644:1199:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9732:9:1",
														"nodeType": "YulTypedName",
														"src": "9732:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9743:7:1",
														"nodeType": "YulTypedName",
														"src": "9743:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9755:6:1",
														"nodeType": "YulTypedName",
														"src": "9755:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9763:6:1",
														"nodeType": "YulTypedName",
														"src": "9763:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9771:6:1",
														"nodeType": "YulTypedName",
														"src": "9771:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9779:6:1",
														"nodeType": "YulTypedName",
														"src": "9779:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9787:6:1",
														"nodeType": "YulTypedName",
														"src": "9787:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "9795:6:1",
														"nodeType": "YulTypedName",
														"src": "9795:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "9803:6:1",
														"nodeType": "YulTypedName",
														"src": "9803:6:1",
														"type": ""
													}
												],
												"src": "9644:1199:1"
											},
											{
												"body": {
													"nativeSrc": "10932:391:1",
													"nodeType": "YulBlock",
													"src": "10932:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "10978:83:1",
																"nodeType": "YulBlock",
																"src": "10978:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10980:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "10980:77:1"
																			},
																			"nativeSrc": "10980:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10980:79:1"
																		},
																		"nativeSrc": "10980:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10980:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10953:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10953:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10962:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10962:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10949:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10949:3:1"
																		},
																		"nativeSrc": "10949:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10949:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10974:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10974:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10945:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10945:3:1"
																},
																"nativeSrc": "10945:32:1",
																"nodeType": "YulFunctionCall",
																"src": "10945:32:1"
															},
															"nativeSrc": "10942:119:1",
															"nodeType": "YulIf",
															"src": "10942:119:1"
														},
														{
															"nativeSrc": "11071:117:1",
															"nodeType": "YulBlock",
															"src": "11071:117:1",
															"statements": [
																{
																	"nativeSrc": "11086:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11086:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11100:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11100:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11090:6:1",
																			"nodeType": "YulTypedName",
																			"src": "11090:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11115:63:1",
																	"nodeType": "YulAssignment",
																	"src": "11115:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11150:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11150:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11161:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11161:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11146:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11146:3:1"
																				},
																				"nativeSrc": "11146:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11146:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11170:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11170:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11125:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "11125:20:1"
																		},
																		"nativeSrc": "11125:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11125:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11115:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "11115:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11198:118:1",
															"nodeType": "YulBlock",
															"src": "11198:118:1",
															"statements": [
																{
																	"nativeSrc": "11213:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11213:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11227:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11227:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11217:6:1",
																			"nodeType": "YulTypedName",
																			"src": "11217:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11243:63:1",
																	"nodeType": "YulAssignment",
																	"src": "11243:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11278:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11278:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11289:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11289:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11274:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11274:3:1"
																				},
																				"nativeSrc": "11274:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11274:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11298:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11298:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11253:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "11253:20:1"
																		},
																		"nativeSrc": "11253:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11253:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11243:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "11243:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "10849:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10894:9:1",
														"nodeType": "YulTypedName",
														"src": "10894:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10905:7:1",
														"nodeType": "YulTypedName",
														"src": "10905:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10917:6:1",
														"nodeType": "YulTypedName",
														"src": "10917:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10925:6:1",
														"nodeType": "YulTypedName",
														"src": "10925:6:1",
														"type": ""
													}
												],
												"src": "10849:474:1"
											},
											{
												"body": {
													"nativeSrc": "11357:152:1",
													"nodeType": "YulBlock",
													"src": "11357:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11374:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11374:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11377:77:1",
																		"nodeType": "YulLiteral",
																		"src": "11377:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11367:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11367:6:1"
																},
																"nativeSrc": "11367:88:1",
																"nodeType": "YulFunctionCall",
																"src": "11367:88:1"
															},
															"nativeSrc": "11367:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "11367:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11471:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11471:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11474:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11474:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11464:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11464:6:1"
																},
																"nativeSrc": "11464:15:1",
																"nodeType": "YulFunctionCall",
																"src": "11464:15:1"
															},
															"nativeSrc": "11464:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "11464:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11495:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11495:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11498:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11498:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11488:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11488:6:1"
																},
																"nativeSrc": "11488:15:1",
																"nodeType": "YulFunctionCall",
																"src": "11488:15:1"
															},
															"nativeSrc": "11488:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "11488:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "11329:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "11329:180:1"
											},
											{
												"body": {
													"nativeSrc": "11566:269:1",
													"nodeType": "YulBlock",
													"src": "11566:269:1",
													"statements": [
														{
															"nativeSrc": "11576:22:1",
															"nodeType": "YulAssignment",
															"src": "11576:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11590:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "11590:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11596:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11596:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11586:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11586:3:1"
																},
																"nativeSrc": "11586:12:1",
																"nodeType": "YulFunctionCall",
																"src": "11586:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11576:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11576:6:1"
																}
															]
														},
														{
															"nativeSrc": "11607:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "11607:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11637:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "11637:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11643:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11643:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11633:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11633:3:1"
																},
																"nativeSrc": "11633:12:1",
																"nodeType": "YulFunctionCall",
																"src": "11633:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "11611:18:1",
																	"nodeType": "YulTypedName",
																	"src": "11611:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11684:51:1",
																"nodeType": "YulBlock",
																"src": "11684:51:1",
																"statements": [
																	{
																		"nativeSrc": "11698:27:1",
																		"nodeType": "YulAssignment",
																		"src": "11698:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "11712:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "11712:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11720:4:1",
																					"nodeType": "YulLiteral",
																					"src": "11720:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11708:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "11708:3:1"
																			},
																			"nativeSrc": "11708:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11708:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "11698:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11698:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11664:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "11664:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11657:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11657:6:1"
																},
																"nativeSrc": "11657:26:1",
																"nodeType": "YulFunctionCall",
																"src": "11657:26:1"
															},
															"nativeSrc": "11654:81:1",
															"nodeType": "YulIf",
															"src": "11654:81:1"
														},
														{
															"body": {
																"nativeSrc": "11787:42:1",
																"nodeType": "YulBlock",
																"src": "11787:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "11801:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "11801:16:1"
																			},
																			"nativeSrc": "11801:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11801:18:1"
																		},
																		"nativeSrc": "11801:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11801:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11751:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "11751:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11774:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11774:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11782:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11782:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11771:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "11771:2:1"
																		},
																		"nativeSrc": "11771:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11771:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11748:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "11748:2:1"
																},
																"nativeSrc": "11748:38:1",
																"nodeType": "YulFunctionCall",
																"src": "11748:38:1"
															},
															"nativeSrc": "11745:84:1",
															"nodeType": "YulIf",
															"src": "11745:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "11515:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11550:4:1",
														"nodeType": "YulTypedName",
														"src": "11550:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11559:6:1",
														"nodeType": "YulTypedName",
														"src": "11559:6:1",
														"type": ""
													}
												],
												"src": "11515:320:1"
											},
											{
												"body": {
													"nativeSrc": "11869:152:1",
													"nodeType": "YulBlock",
													"src": "11869:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11886:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11886:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11889:77:1",
																		"nodeType": "YulLiteral",
																		"src": "11889:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11879:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11879:6:1"
																},
																"nativeSrc": "11879:88:1",
																"nodeType": "YulFunctionCall",
																"src": "11879:88:1"
															},
															"nativeSrc": "11879:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "11879:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11983:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11983:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11986:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11986:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11976:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11976:6:1"
																},
																"nativeSrc": "11976:15:1",
																"nodeType": "YulFunctionCall",
																"src": "11976:15:1"
															},
															"nativeSrc": "11976:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "11976:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12007:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12007:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12010:4:1",
																		"nodeType": "YulLiteral",
																		"src": "12010:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12000:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12000:6:1"
																},
																"nativeSrc": "12000:15:1",
																"nodeType": "YulFunctionCall",
																"src": "12000:15:1"
															},
															"nativeSrc": "12000:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "12000:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "11841:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "11841:180:1"
											},
											{
												"body": {
													"nativeSrc": "12265:537:1",
													"nodeType": "YulBlock",
													"src": "12265:537:1",
													"statements": [
														{
															"nativeSrc": "12275:27:1",
															"nodeType": "YulAssignment",
															"src": "12275:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12287:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12287:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12298:3:1",
																		"nodeType": "YulLiteral",
																		"src": "12298:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12283:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12283:3:1"
																},
																"nativeSrc": "12283:19:1",
																"nodeType": "YulFunctionCall",
																"src": "12283:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12275:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12275:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12356:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12356:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12369:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12369:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12380:1:1",
																				"nodeType": "YulLiteral",
																				"src": "12380:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12365:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12365:3:1"
																		},
																		"nativeSrc": "12365:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12365:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "12312:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12312:43:1"
																},
																"nativeSrc": "12312:71:1",
																"nodeType": "YulFunctionCall",
																"src": "12312:71:1"
															},
															"nativeSrc": "12312:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "12312:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12437:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12437:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12450:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12450:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12461:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12461:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12446:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12446:3:1"
																		},
																		"nativeSrc": "12446:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12446:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12393:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12393:43:1"
																},
																"nativeSrc": "12393:72:1",
																"nodeType": "YulFunctionCall",
																"src": "12393:72:1"
															},
															"nativeSrc": "12393:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "12393:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12519:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12519:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12532:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12532:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12543:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12543:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12528:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12528:3:1"
																		},
																		"nativeSrc": "12528:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12528:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12475:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12475:43:1"
																},
																"nativeSrc": "12475:72:1",
																"nodeType": "YulFunctionCall",
																"src": "12475:72:1"
															},
															"nativeSrc": "12475:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "12475:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "12601:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12601:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12614:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12614:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12625:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12625:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12610:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12610:3:1"
																		},
																		"nativeSrc": "12610:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12610:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12557:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12557:43:1"
																},
																"nativeSrc": "12557:72:1",
																"nodeType": "YulFunctionCall",
																"src": "12557:72:1"
															},
															"nativeSrc": "12557:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "12557:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "12683:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12683:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12696:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12696:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12707:3:1",
																				"nodeType": "YulLiteral",
																				"src": "12707:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12692:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12692:3:1"
																		},
																		"nativeSrc": "12692:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12692:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12639:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12639:43:1"
																},
																"nativeSrc": "12639:73:1",
																"nodeType": "YulFunctionCall",
																"src": "12639:73:1"
															},
															"nativeSrc": "12639:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "12639:73:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "12766:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12766:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12779:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12779:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12790:3:1",
																				"nodeType": "YulLiteral",
																				"src": "12790:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12775:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12775:3:1"
																		},
																		"nativeSrc": "12775:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12775:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12722:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12722:43:1"
																},
																"nativeSrc": "12722:73:1",
																"nodeType": "YulFunctionCall",
																"src": "12722:73:1"
															},
															"nativeSrc": "12722:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "12722:73:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12027:775:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12197:9:1",
														"nodeType": "YulTypedName",
														"src": "12197:9:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "12209:6:1",
														"nodeType": "YulTypedName",
														"src": "12209:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "12217:6:1",
														"nodeType": "YulTypedName",
														"src": "12217:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12225:6:1",
														"nodeType": "YulTypedName",
														"src": "12225:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12233:6:1",
														"nodeType": "YulTypedName",
														"src": "12233:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12241:6:1",
														"nodeType": "YulTypedName",
														"src": "12241:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12249:6:1",
														"nodeType": "YulTypedName",
														"src": "12249:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12260:4:1",
														"nodeType": "YulTypedName",
														"src": "12260:4:1",
														"type": ""
													}
												],
												"src": "12027:775:1"
											},
											{
												"body": {
													"nativeSrc": "12934:206:1",
													"nodeType": "YulBlock",
													"src": "12934:206:1",
													"statements": [
														{
															"nativeSrc": "12944:26:1",
															"nodeType": "YulAssignment",
															"src": "12944:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12956:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12956:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12967:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12967:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12952:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12952:3:1"
																},
																"nativeSrc": "12952:18:1",
																"nodeType": "YulFunctionCall",
																"src": "12952:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12944:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12944:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13024:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13024:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13037:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13037:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13048:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13048:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13033:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13033:3:1"
																		},
																		"nativeSrc": "13033:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13033:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12980:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12980:43:1"
																},
																"nativeSrc": "12980:71:1",
																"nodeType": "YulFunctionCall",
																"src": "12980:71:1"
															},
															"nativeSrc": "12980:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "12980:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13105:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13105:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13118:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13118:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13129:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13129:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13114:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13114:3:1"
																		},
																		"nativeSrc": "13114:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13114:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13061:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13061:43:1"
																},
																"nativeSrc": "13061:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13061:72:1"
															},
															"nativeSrc": "13061:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13061:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "12808:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12898:9:1",
														"nodeType": "YulTypedName",
														"src": "12898:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12910:6:1",
														"nodeType": "YulTypedName",
														"src": "12910:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12918:6:1",
														"nodeType": "YulTypedName",
														"src": "12918:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12929:4:1",
														"nodeType": "YulTypedName",
														"src": "12929:4:1",
														"type": ""
													}
												],
												"src": "12808:332:1"
											},
											{
												"body": {
													"nativeSrc": "13300:288:1",
													"nodeType": "YulBlock",
													"src": "13300:288:1",
													"statements": [
														{
															"nativeSrc": "13310:26:1",
															"nodeType": "YulAssignment",
															"src": "13310:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13322:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13322:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13333:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13333:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13318:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13318:3:1"
																},
																"nativeSrc": "13318:18:1",
																"nodeType": "YulFunctionCall",
																"src": "13318:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13310:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13310:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13390:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13390:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13403:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13403:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13414:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13414:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13399:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13399:3:1"
																		},
																		"nativeSrc": "13399:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13399:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13346:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13346:43:1"
																},
																"nativeSrc": "13346:71:1",
																"nodeType": "YulFunctionCall",
																"src": "13346:71:1"
															},
															"nativeSrc": "13346:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "13346:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13471:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13471:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13484:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13484:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13495:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13495:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13480:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13480:3:1"
																		},
																		"nativeSrc": "13480:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13480:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13427:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13427:43:1"
																},
																"nativeSrc": "13427:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13427:72:1"
															},
															"nativeSrc": "13427:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13427:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13553:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13566:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13566:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13577:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13577:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13562:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13562:3:1"
																		},
																		"nativeSrc": "13562:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13562:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13509:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13509:43:1"
																},
																"nativeSrc": "13509:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13509:72:1"
															},
															"nativeSrc": "13509:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13509:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13146:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13256:9:1",
														"nodeType": "YulTypedName",
														"src": "13256:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13268:6:1",
														"nodeType": "YulTypedName",
														"src": "13268:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13276:6:1",
														"nodeType": "YulTypedName",
														"src": "13276:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13284:6:1",
														"nodeType": "YulTypedName",
														"src": "13284:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13295:4:1",
														"nodeType": "YulTypedName",
														"src": "13295:4:1",
														"type": ""
													}
												],
												"src": "13146:442:1"
											},
											{
												"body": {
													"nativeSrc": "13622:152:1",
													"nodeType": "YulBlock",
													"src": "13622:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13639:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13639:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13642:77:1",
																		"nodeType": "YulLiteral",
																		"src": "13642:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13632:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13632:6:1"
																},
																"nativeSrc": "13632:88:1",
																"nodeType": "YulFunctionCall",
																"src": "13632:88:1"
															},
															"nativeSrc": "13632:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "13632:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13736:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13736:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13739:4:1",
																		"nodeType": "YulLiteral",
																		"src": "13739:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13729:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13729:6:1"
																},
																"nativeSrc": "13729:15:1",
																"nodeType": "YulFunctionCall",
																"src": "13729:15:1"
															},
															"nativeSrc": "13729:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "13729:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13760:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13760:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13763:4:1",
																		"nodeType": "YulLiteral",
																		"src": "13763:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13753:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13753:6:1"
																},
																"nativeSrc": "13753:15:1",
																"nodeType": "YulFunctionCall",
																"src": "13753:15:1"
															},
															"nativeSrc": "13753:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "13753:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13594:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "13594:180:1"
											},
											{
												"body": {
													"nativeSrc": "13824:147:1",
													"nodeType": "YulBlock",
													"src": "13824:147:1",
													"statements": [
														{
															"nativeSrc": "13834:25:1",
															"nodeType": "YulAssignment",
															"src": "13834:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13857:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13857:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13839:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "13839:17:1"
																},
																"nativeSrc": "13839:20:1",
																"nodeType": "YulFunctionCall",
																"src": "13839:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13834:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "13834:1:1"
																}
															]
														},
														{
															"nativeSrc": "13868:25:1",
															"nodeType": "YulAssignment",
															"src": "13868:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13891:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13891:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13873:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "13873:17:1"
																},
																"nativeSrc": "13873:20:1",
																"nodeType": "YulFunctionCall",
																"src": "13873:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13868:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "13868:1:1"
																}
															]
														},
														{
															"nativeSrc": "13902:16:1",
															"nodeType": "YulAssignment",
															"src": "13902:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13913:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13913:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13916:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13916:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13909:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13909:3:1"
																},
																"nativeSrc": "13909:9:1",
																"nodeType": "YulFunctionCall",
																"src": "13909:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13902:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13902:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13942:22:1",
																"nodeType": "YulBlock",
																"src": "13942:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13944:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "13944:16:1"
																			},
																			"nativeSrc": "13944:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "13944:18:1"
																		},
																		"nativeSrc": "13944:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "13944:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13934:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13934:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13937:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13937:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13931:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "13931:2:1"
																},
																"nativeSrc": "13931:10:1",
																"nodeType": "YulFunctionCall",
																"src": "13931:10:1"
															},
															"nativeSrc": "13928:36:1",
															"nodeType": "YulIf",
															"src": "13928:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13780:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13811:1:1",
														"nodeType": "YulTypedName",
														"src": "13811:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13814:1:1",
														"nodeType": "YulTypedName",
														"src": "13814:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13820:3:1",
														"nodeType": "YulTypedName",
														"src": "13820:3:1",
														"type": ""
													}
												],
												"src": "13780:191:1"
											},
											{
												"body": {
													"nativeSrc": "14187:454:1",
													"nodeType": "YulBlock",
													"src": "14187:454:1",
													"statements": [
														{
															"nativeSrc": "14197:27:1",
															"nodeType": "YulAssignment",
															"src": "14197:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14209:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14209:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14220:3:1",
																		"nodeType": "YulLiteral",
																		"src": "14220:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14205:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14205:3:1"
																},
																"nativeSrc": "14205:19:1",
																"nodeType": "YulFunctionCall",
																"src": "14205:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14197:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14197:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14278:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14278:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14291:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14291:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14302:1:1",
																				"nodeType": "YulLiteral",
																				"src": "14302:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14287:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14287:3:1"
																		},
																		"nativeSrc": "14287:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14287:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "14234:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14234:43:1"
																},
																"nativeSrc": "14234:71:1",
																"nodeType": "YulFunctionCall",
																"src": "14234:71:1"
															},
															"nativeSrc": "14234:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "14234:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14359:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14359:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14372:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14372:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14383:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14383:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14368:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14368:3:1"
																		},
																		"nativeSrc": "14368:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14368:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "14315:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14315:43:1"
																},
																"nativeSrc": "14315:72:1",
																"nodeType": "YulFunctionCall",
																"src": "14315:72:1"
															},
															"nativeSrc": "14315:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "14315:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14441:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14441:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14454:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14454:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14465:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14465:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14450:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14450:3:1"
																		},
																		"nativeSrc": "14450:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14450:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "14397:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14397:43:1"
																},
																"nativeSrc": "14397:72:1",
																"nodeType": "YulFunctionCall",
																"src": "14397:72:1"
															},
															"nativeSrc": "14397:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "14397:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "14523:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14523:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14536:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14536:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14547:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14547:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14532:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14532:3:1"
																		},
																		"nativeSrc": "14532:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14532:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14479:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14479:43:1"
																},
																"nativeSrc": "14479:72:1",
																"nodeType": "YulFunctionCall",
																"src": "14479:72:1"
															},
															"nativeSrc": "14479:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "14479:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "14605:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14605:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14618:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14618:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14629:3:1",
																				"nodeType": "YulLiteral",
																				"src": "14629:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14614:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14614:3:1"
																		},
																		"nativeSrc": "14614:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14614:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14561:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14561:43:1"
																},
																"nativeSrc": "14561:73:1",
																"nodeType": "YulFunctionCall",
																"src": "14561:73:1"
															},
															"nativeSrc": "14561:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "14561:73:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "13977:664:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14127:9:1",
														"nodeType": "YulTypedName",
														"src": "14127:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "14139:6:1",
														"nodeType": "YulTypedName",
														"src": "14139:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "14147:6:1",
														"nodeType": "YulTypedName",
														"src": "14147:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14155:6:1",
														"nodeType": "YulTypedName",
														"src": "14155:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14163:6:1",
														"nodeType": "YulTypedName",
														"src": "14163:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14171:6:1",
														"nodeType": "YulTypedName",
														"src": "14171:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14182:4:1",
														"nodeType": "YulTypedName",
														"src": "14182:4:1",
														"type": ""
													}
												],
												"src": "13977:664:1"
											},
											{
												"body": {
													"nativeSrc": "14825:367:1",
													"nodeType": "YulBlock",
													"src": "14825:367:1",
													"statements": [
														{
															"nativeSrc": "14835:27:1",
															"nodeType": "YulAssignment",
															"src": "14835:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14847:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14847:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14858:3:1",
																		"nodeType": "YulLiteral",
																		"src": "14858:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14843:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14843:3:1"
																},
																"nativeSrc": "14843:19:1",
																"nodeType": "YulFunctionCall",
																"src": "14843:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14835:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14835:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14916:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14916:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14929:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14929:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14940:1:1",
																				"nodeType": "YulLiteral",
																				"src": "14940:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14925:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14925:3:1"
																		},
																		"nativeSrc": "14925:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14925:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "14872:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14872:43:1"
																},
																"nativeSrc": "14872:71:1",
																"nodeType": "YulFunctionCall",
																"src": "14872:71:1"
															},
															"nativeSrc": "14872:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "14872:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14993:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14993:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15006:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15006:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15017:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15017:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15002:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15002:3:1"
																		},
																		"nativeSrc": "15002:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15002:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "14953:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "14953:39:1"
																},
																"nativeSrc": "14953:68:1",
																"nodeType": "YulFunctionCall",
																"src": "14953:68:1"
															},
															"nativeSrc": "14953:68:1",
															"nodeType": "YulExpressionStatement",
															"src": "14953:68:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15075:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "15075:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15088:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15088:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15099:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15099:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15084:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15084:3:1"
																		},
																		"nativeSrc": "15084:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15084:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "15031:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "15031:43:1"
																},
																"nativeSrc": "15031:72:1",
																"nodeType": "YulFunctionCall",
																"src": "15031:72:1"
															},
															"nativeSrc": "15031:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "15031:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "15157:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "15157:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15170:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15170:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15181:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15181:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15166:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15166:3:1"
																		},
																		"nativeSrc": "15166:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15166:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "15113:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "15113:43:1"
																},
																"nativeSrc": "15113:72:1",
																"nodeType": "YulFunctionCall",
																"src": "15113:72:1"
															},
															"nativeSrc": "15113:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "15113:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "14647:545:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14773:9:1",
														"nodeType": "YulTypedName",
														"src": "14773:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "14785:6:1",
														"nodeType": "YulTypedName",
														"src": "14785:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14793:6:1",
														"nodeType": "YulTypedName",
														"src": "14793:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14801:6:1",
														"nodeType": "YulTypedName",
														"src": "14801:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14809:6:1",
														"nodeType": "YulTypedName",
														"src": "14809:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14820:4:1",
														"nodeType": "YulTypedName",
														"src": "14820:4:1",
														"type": ""
													}
												],
												"src": "14647:545:1"
											},
											{
												"body": {
													"nativeSrc": "15226:152:1",
													"nodeType": "YulBlock",
													"src": "15226:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15243:1:1",
																		"nodeType": "YulLiteral",
																		"src": "15243:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15246:77:1",
																		"nodeType": "YulLiteral",
																		"src": "15246:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15236:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15236:6:1"
																},
																"nativeSrc": "15236:88:1",
																"nodeType": "YulFunctionCall",
																"src": "15236:88:1"
															},
															"nativeSrc": "15236:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "15236:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15340:1:1",
																		"nodeType": "YulLiteral",
																		"src": "15340:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15343:4:1",
																		"nodeType": "YulLiteral",
																		"src": "15343:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15333:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15333:6:1"
																},
																"nativeSrc": "15333:15:1",
																"nodeType": "YulFunctionCall",
																"src": "15333:15:1"
															},
															"nativeSrc": "15333:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "15333:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15364:1:1",
																		"nodeType": "YulLiteral",
																		"src": "15364:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15367:4:1",
																		"nodeType": "YulLiteral",
																		"src": "15367:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15357:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15357:6:1"
																},
																"nativeSrc": "15357:15:1",
																"nodeType": "YulFunctionCall",
																"src": "15357:15:1"
															},
															"nativeSrc": "15357:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "15357:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "15198:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "15198:180:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"3136": [
									{
										"length": 32,
										"start": 2760
									}
								],
								"3138": [
									{
										"length": 32,
										"start": 2719
									}
								],
								"3140": [
									{
										"length": 32,
										"start": 2633
									}
								],
								"3142": [
									{
										"length": 32,
										"start": 4647
									}
								],
								"3144": [
									{
										"length": 32,
										"start": 4680
									}
								],
								"3147": [
									{
										"length": 32,
										"start": 3348
									}
								],
								"3150": [
									{
										"length": 32,
										"start": 3407
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610109575f3560e01c8063715018a6116100a057806395d89b411161006f57806395d89b41146102ad578063a9059cbb146102cb578063d505accf146102fb578063dd62ed3e14610317578063f2fde38b1461034757610109565b8063715018a6146102315780637ecebe001461023b57806384b0196e1461026b5780638da5cb5b1461028f57610109565b8063313ce567116100dc578063313ce567146101a95780633644e515146101c757806340c10f19146101e557806370a082311461020157610109565b806306fdde031461010d578063095ea7b31461012b57806318160ddd1461015b57806323b872dd14610179575b5f80fd5b610115610363565b6040516101229190611718565b60405180910390f35b610145600480360381019061014091906117c9565b6103f3565b6040516101529190611821565b60405180910390f35b610163610415565b6040516101709190611849565b60405180910390f35b610193600480360381019061018e9190611862565b61041e565b6040516101a09190611821565b60405180910390f35b6101b161044c565b6040516101be91906118cd565b60405180910390f35b6101cf610454565b6040516101dc91906118fe565b60405180910390f35b6101ff60048036038101906101fa91906117c9565b610462565b005b61021b60048036038101906102169190611917565b610478565b6040516102289190611849565b60405180910390f35b6102396104bd565b005b61025560048036038101906102509190611917565b6104d0565b6040516102629190611849565b60405180910390f35b6102736104e1565b6040516102869796959493929190611a42565b60405180910390f35b610297610586565b6040516102a49190611ac4565b60405180910390f35b6102b56105ae565b6040516102c29190611718565b60405180910390f35b6102e560048036038101906102e091906117c9565b61063e565b6040516102f29190611821565b60405180910390f35b61031560048036038101906103109190611b31565b610660565b005b610331600480360381019061032c9190611bce565b6107a5565b60405161033e9190611849565b60405180910390f35b610361600480360381019061035c9190611917565b610827565b005b60606003805461037290611c39565b80601f016020809104026020016040519081016040528092919081815260200182805461039e90611c39565b80156103e95780601f106103c0576101008083540402835291602001916103e9565b820191905f5260205f20905b8154815290600101906020018083116103cc57829003601f168201915b5050505050905090565b5f806103fd6108ab565b905061040a8185856108b2565b600191505092915050565b5f600254905090565b5f806104286108ab565b90506104358582856108c4565b610440858585610956565b60019150509392505050565b5f6012905090565b5f61045d610a46565b905090565b61046a610afc565b6104748282610b83565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6104c5610afc565b6104ce5f610c02565b565b5f6104da82610cc5565b9050919050565b5f6060805f805f60606104f2610d0b565b6104fa610d46565b46305f801b5f67ffffffffffffffff81111561051957610518611c69565b5b6040519080825280602002602001820160405280156105475781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105bd90611c39565b80601f01602080910402602001604051908101604052809291908181526020018280546105e990611c39565b80156106345780601f1061060b57610100808354040283529160200191610634565b820191905f5260205f20905b81548152906001019060200180831161061757829003601f168201915b5050505050905090565b5f806106486108ab565b9050610655818585610956565b600191505092915050565b834211156106a557836040517f6279130200000000000000000000000000000000000000000000000000000000815260040161069c9190611849565b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886106d38c610d81565b896040516020016106e996959493929190611c96565b6040516020818303038152906040528051906020012090505f61070b82610dd4565b90505f61071a82878787610ded565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461078e57808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610785929190611cf5565b60405180910390fd5b6107998a8a8a6108b2565b50505050505050505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61082f610afc565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361089f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108969190611ac4565b60405180910390fd5b6108a881610c02565b50565b5f33905090565b6108bf8383836001610e1b565b505050565b5f6108cf84846107a5565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109505781811015610941578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161093893929190611d1c565b60405180910390fd5b61094f84848484035f610e1b565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109c6575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109bd9190611ac4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a36575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a2d9190611ac4565b60405180910390fd5b610a41838383610fea565b505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610ac157507f000000000000000000000000000000000000000000000000000000000000000046145b15610aee577f00000000000000000000000000000000000000000000000000000000000000009050610af9565b610af6611203565b90505b90565b610b046108ab565b73ffffffffffffffffffffffffffffffffffffffff16610b22610586565b73ffffffffffffffffffffffffffffffffffffffff1614610b8157610b456108ab565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b789190611ac4565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bf3575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bea9190611ac4565b60405180910390fd5b610bfe5f8383610fea565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060610d4160067f000000000000000000000000000000000000000000000000000000000000000061129890919063ffffffff16565b905090565b6060610d7c60077f000000000000000000000000000000000000000000000000000000000000000061129890919063ffffffff16565b905090565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190600101919050559050919050565b5f610de6610de0610a46565b83611345565b9050919050565b5f805f80610dfd88888888611385565b925092509250610e0d828261146c565b829350505050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e8b575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e829190611ac4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610efb575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ef29190611ac4565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610fe4578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610fdb9190611849565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361103a578060025f82825461102e9190611d7e565b92505081905550611108565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156110c3578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016110ba93929190611d1c565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361114f578060025f8282540392505081905550611199565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111f69190611849565b60405180910390a3505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000463060405160200161127d959493929190611db1565b60405160208183030381529060405280519060200120905090565b606060ff5f1b83146112b4576112ad836115ce565b905061133f565b8180546112c090611c39565b80601f01602080910402602001604051908101604052809291908181526020018280546112ec90611c39565b80156113375780601f1061130e57610100808354040283529160200191611337565b820191905f5260205f20905b81548152906001019060200180831161131a57829003601f168201915b505050505090505b92915050565b5f6040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b5f805f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c11156113c1575f600385925092509250611462565b5f6001888888886040515f81526020016040526040516113e49493929190611e02565b6020604051602081039080840390855afa158015611404573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611455575f60015f801b93509350935050611462565b805f805f1b935093509350505b9450945094915050565b5f600381111561147f5761147e611e45565b5b82600381111561149257611491611e45565b5b03156115ca57600160038111156114ac576114ab611e45565b5b8260038111156114bf576114be611e45565b5b036114f6576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600381111561150a57611509611e45565b5b82600381111561151d5761151c611e45565b5b0361156157805f1c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016115589190611849565b60405180910390fd5b60038081111561157457611573611e45565b5b82600381111561158757611586611e45565b5b036115c957806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016115c091906118fe565b60405180910390fd5b5b5050565b60605f6115da83611640565b90505f602067ffffffffffffffff8111156115f8576115f7611c69565b5b6040519080825280601f01601f19166020018201604052801561162a5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b5f8060ff835f1c169050601f811115611685576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156116c55780820151818401526020810190506116aa565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6116ea8261168e565b6116f48185611698565b93506117048185602086016116a8565b61170d816116d0565b840191505092915050565b5f6020820190508181035f83015261173081846116e0565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6117658261173c565b9050919050565b6117758161175b565b811461177f575f80fd5b50565b5f813590506117908161176c565b92915050565b5f819050919050565b6117a881611796565b81146117b2575f80fd5b50565b5f813590506117c38161179f565b92915050565b5f80604083850312156117df576117de611738565b5b5f6117ec85828601611782565b92505060206117fd858286016117b5565b9150509250929050565b5f8115159050919050565b61181b81611807565b82525050565b5f6020820190506118345f830184611812565b92915050565b61184381611796565b82525050565b5f60208201905061185c5f83018461183a565b92915050565b5f805f6060848603121561187957611878611738565b5b5f61188686828701611782565b935050602061189786828701611782565b92505060406118a8868287016117b5565b9150509250925092565b5f60ff82169050919050565b6118c7816118b2565b82525050565b5f6020820190506118e05f8301846118be565b92915050565b5f819050919050565b6118f8816118e6565b82525050565b5f6020820190506119115f8301846118ef565b92915050565b5f6020828403121561192c5761192b611738565b5b5f61193984828501611782565b91505092915050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61197681611942565b82525050565b6119858161175b565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6119bd81611796565b82525050565b5f6119ce83836119b4565b60208301905092915050565b5f602082019050919050565b5f6119f08261198b565b6119fa8185611995565b9350611a05836119a5565b805f5b83811015611a35578151611a1c88826119c3565b9750611a27836119da565b925050600181019050611a08565b5085935050505092915050565b5f60e082019050611a555f83018a61196d565b8181036020830152611a6781896116e0565b90508181036040830152611a7b81886116e0565b9050611a8a606083018761183a565b611a97608083018661197c565b611aa460a08301856118ef565b81810360c0830152611ab681846119e6565b905098975050505050505050565b5f602082019050611ad75f83018461197c565b92915050565b611ae6816118b2565b8114611af0575f80fd5b50565b5f81359050611b0181611add565b92915050565b611b10816118e6565b8114611b1a575f80fd5b50565b5f81359050611b2b81611b07565b92915050565b5f805f805f805f60e0888a031215611b4c57611b4b611738565b5b5f611b598a828b01611782565b9750506020611b6a8a828b01611782565b9650506040611b7b8a828b016117b5565b9550506060611b8c8a828b016117b5565b9450506080611b9d8a828b01611af3565b93505060a0611bae8a828b01611b1d565b92505060c0611bbf8a828b01611b1d565b91505092959891949750929550565b5f8060408385031215611be457611be3611738565b5b5f611bf185828601611782565b9250506020611c0285828601611782565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611c5057607f821691505b602082108103611c6357611c62611c0c565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f60c082019050611ca95f8301896118ef565b611cb6602083018861197c565b611cc3604083018761197c565b611cd0606083018661183a565b611cdd608083018561183a565b611cea60a083018461183a565b979650505050505050565b5f604082019050611d085f83018561197c565b611d15602083018461197c565b9392505050565b5f606082019050611d2f5f83018661197c565b611d3c602083018561183a565b611d49604083018461183a565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611d8882611796565b9150611d9383611796565b9250828201905080821115611dab57611daa611d51565b5b92915050565b5f60a082019050611dc45f8301886118ef565b611dd160208301876118ef565b611dde60408301866118ef565b611deb606083018561183a565b611df8608083018461197c565b9695505050505050565b5f608082019050611e155f8301876118ef565b611e2260208301866118be565b611e2f60408301856118ef565b611e3c60608301846118ef565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea2646970667358221220d38e418eb5a98eda0e98c637a865f7559745e4b3e403bdca14fb94741b2559ef64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x347 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x28F JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x201 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x363 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH2 0x3F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1862 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH2 0x4BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x17C9 JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x1B31 JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1BCE JUMP JUMPDEST PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x361 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35C SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x827 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x372 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x39E SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3CC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3FD PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x40A DUP2 DUP6 DUP6 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x428 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x435 DUP6 DUP3 DUP6 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x440 DUP6 DUP6 DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x45D PUSH2 0xA46 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x46A PUSH2 0xAFC JUMP JUMPDEST PUSH2 0x474 DUP3 DUP3 PUSH2 0xB83 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C5 PUSH2 0xAFC JUMP JUMPDEST PUSH2 0x4CE PUSH0 PUSH2 0xC02 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x4DA DUP3 PUSH2 0xCC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x4F2 PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x4FA PUSH2 0xD46 JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x519 JUMPI PUSH2 0x518 PUSH2 0x1C69 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x547 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5BD SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5E9 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x634 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x60B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x634 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x617 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x648 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x655 DUP2 DUP6 DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x6A5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69C SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x6D3 DUP13 PUSH2 0xD81 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6E9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x70B DUP3 PUSH2 0xDD4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x71A DUP3 DUP8 DUP8 DUP8 PUSH2 0xDED JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x78E JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x785 SWAP3 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x799 DUP11 DUP11 DUP11 PUSH2 0x8B2 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x82F PUSH2 0xAFC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x896 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A8 DUP2 PUSH2 0xC02 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8BF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE1B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8CF DUP5 DUP5 PUSH2 0x7A5 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x950 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x941 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x938 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE1B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BD SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA41 DUP4 DUP4 DUP4 PUSH2 0xFEA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAC1 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xAEE JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0xAF6 PUSH2 0x1203 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB04 PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB22 PUSH2 0x586 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB81 JUMPI PUSH2 0xB45 PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB78 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBFE PUSH0 DUP4 DUP4 PUSH2 0xFEA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD41 PUSH1 0x6 PUSH32 0x0 PUSH2 0x1298 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD7C PUSH1 0x7 PUSH32 0x0 PUSH2 0x1298 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDE6 PUSH2 0xDE0 PUSH2 0xA46 JUMP JUMPDEST DUP4 PUSH2 0x1345 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xDFD DUP9 DUP9 DUP9 DUP9 PUSH2 0x1385 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xE0D DUP3 DUP3 PUSH2 0x146C JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE82 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF2 SWAP2 SWAP1 PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFE4 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFDB SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x103A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x102E SWAP2 SWAP1 PUSH2 0x1D7E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1108 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10C3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x114F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1199 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x11F6 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x127D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x12B4 JUMPI PUSH2 0x12AD DUP4 PUSH2 0x15CE JUMP JUMPDEST SWAP1 POP PUSH2 0x133F JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x12C0 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12EC SWAP1 PUSH2 0x1C39 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1337 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x130E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1337 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x131A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x13C1 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1462 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x13E4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1404 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1455 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1462 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x147F JUMPI PUSH2 0x147E PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1492 JUMPI PUSH2 0x1491 PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x15CA JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14AC JUMPI PUSH2 0x14AB PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14BF JUMPI PUSH2 0x14BE PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x14F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x150A JUMPI PUSH2 0x1509 PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x151D JUMPI PUSH2 0x151C PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1561 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1558 SWAP2 SWAP1 PUSH2 0x1849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1574 JUMPI PUSH2 0x1573 PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1587 JUMPI PUSH2 0x1586 PUSH2 0x1E45 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x15C9 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C0 SWAP2 SWAP1 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x15DA DUP4 PUSH2 0x1640 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15F8 JUMPI PUSH2 0x15F7 PUSH2 0x1C69 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x162A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1685 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16C5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16AA JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16EA DUP3 PUSH2 0x168E JUMP JUMPDEST PUSH2 0x16F4 DUP2 DUP6 PUSH2 0x1698 JUMP JUMPDEST SWAP4 POP PUSH2 0x1704 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0x170D DUP2 PUSH2 0x16D0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1730 DUP2 DUP5 PUSH2 0x16E0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1765 DUP3 PUSH2 0x173C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1775 DUP2 PUSH2 0x175B JUMP JUMPDEST DUP2 EQ PUSH2 0x177F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1790 DUP2 PUSH2 0x176C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A8 DUP2 PUSH2 0x1796 JUMP JUMPDEST DUP2 EQ PUSH2 0x17B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17C3 DUP2 PUSH2 0x179F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17DF JUMPI PUSH2 0x17DE PUSH2 0x1738 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17EC DUP6 DUP3 DUP7 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17FD DUP6 DUP3 DUP7 ADD PUSH2 0x17B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x181B DUP2 PUSH2 0x1807 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1834 PUSH0 DUP4 ADD DUP5 PUSH2 0x1812 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1843 DUP2 PUSH2 0x1796 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x185C PUSH0 DUP4 ADD DUP5 PUSH2 0x183A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1879 JUMPI PUSH2 0x1878 PUSH2 0x1738 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1886 DUP7 DUP3 DUP8 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1897 DUP7 DUP3 DUP8 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18A8 DUP7 DUP3 DUP8 ADD PUSH2 0x17B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18C7 DUP2 PUSH2 0x18B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18E0 PUSH0 DUP4 ADD DUP5 PUSH2 0x18BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18F8 DUP2 PUSH2 0x18E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1911 PUSH0 DUP4 ADD DUP5 PUSH2 0x18EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x192C JUMPI PUSH2 0x192B PUSH2 0x1738 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1939 DUP5 DUP3 DUP6 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1976 DUP2 PUSH2 0x1942 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1985 DUP2 PUSH2 0x175B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19BD DUP2 PUSH2 0x1796 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19CE DUP4 DUP4 PUSH2 0x19B4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19F0 DUP3 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x19FA DUP2 DUP6 PUSH2 0x1995 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A05 DUP4 PUSH2 0x19A5 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A35 JUMPI DUP2 MLOAD PUSH2 0x1A1C DUP9 DUP3 PUSH2 0x19C3 JUMP JUMPDEST SWAP8 POP PUSH2 0x1A27 DUP4 PUSH2 0x19DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A08 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1A55 PUSH0 DUP4 ADD DUP11 PUSH2 0x196D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1A67 DUP2 DUP10 PUSH2 0x16E0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1A7B DUP2 DUP9 PUSH2 0x16E0 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A8A PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x183A JUMP JUMPDEST PUSH2 0x1A97 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1AA4 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x18EF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1AB6 DUP2 DUP5 PUSH2 0x19E6 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AD7 PUSH0 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AE6 DUP2 PUSH2 0x18B2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B01 DUP2 PUSH2 0x1ADD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B10 DUP2 PUSH2 0x18E6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B1A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B2B DUP2 PUSH2 0x1B07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1B4C JUMPI PUSH2 0x1B4B PUSH2 0x1738 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B59 DUP11 DUP3 DUP12 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1B6A DUP11 DUP3 DUP12 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1B7B DUP11 DUP3 DUP12 ADD PUSH2 0x17B5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1B8C DUP11 DUP3 DUP12 ADD PUSH2 0x17B5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1B9D DUP11 DUP3 DUP12 ADD PUSH2 0x1AF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1BAE DUP11 DUP3 DUP12 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1BBF DUP11 DUP3 DUP12 ADD PUSH2 0x1B1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BE4 JUMPI PUSH2 0x1BE3 PUSH2 0x1738 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BF1 DUP6 DUP3 DUP7 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C02 DUP6 DUP3 DUP7 ADD PUSH2 0x1782 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1C50 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1C63 JUMPI PUSH2 0x1C62 PUSH2 0x1C0C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1CA9 PUSH0 DUP4 ADD DUP10 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1CB6 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1CC3 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1CD0 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x183A JUMP JUMPDEST PUSH2 0x1CDD PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x183A JUMP JUMPDEST PUSH2 0x1CEA PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x183A JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D08 PUSH0 DUP4 ADD DUP6 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1D15 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D2F PUSH0 DUP4 ADD DUP7 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1D3C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x183A JUMP JUMPDEST PUSH2 0x1D49 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x183A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D88 DUP3 PUSH2 0x1796 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D93 DUP4 PUSH2 0x1796 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1DAB JUMPI PUSH2 0x1DAA PUSH2 0x1D51 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1DC4 PUSH0 DUP4 ADD DUP9 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1DD1 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1DDE PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1DEB PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x183A JUMP JUMPDEST PUSH2 0x1DF8 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x197C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1E15 PUSH0 DUP4 ADD DUP8 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1E22 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x18BE JUMP JUMPDEST PUSH2 0x1E2F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x1E3C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x18EF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 DUP15 COINBASE DUP15 0xB5 0xA9 DUP15 0xDA 0xE SWAP9 0xC6 CALLDATACOPY 0xA8 PUSH6 0xF7559745E4B3 0xE4 SUB 0xBD 0xCA EQ 0xFB SWAP5 PUSH21 0x1B2559EF64736F6C63430008180033000000000000 ",
							"sourceMap": "79653:338:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12965:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15184:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14035:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15930:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13893:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;79394:112;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;79896:93;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14190:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24304:101;;;:::i;:::-;;79144:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;73972:557;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;23649:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13167:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14501:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;78418:672;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14737:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24554:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12965:89;13010:13;13042:5;13035:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12965:89;:::o;15184:186::-;15257:4;15273:13;15289:12;:10;:12::i;:::-;15273:28;;15311:31;15320:5;15327:7;15336:5;15311:8;:31::i;:::-;15359:4;15352:11;;;15184:186;;;;:::o;14035:97::-;14087:7;14113:12;;14106:19;;14035:97;:::o;15930:244::-;16017:4;16033:15;16051:12;:10;:12::i;:::-;16033:30;;16073:37;16089:4;16095:7;16104:5;16073:15;:37::i;:::-;16120:26;16130:4;16136:2;16140:5;16120:9;:26::i;:::-;16163:4;16156:11;;;15930:244;;;;;:::o;13893:82::-;13942:5;13966:2;13959:9;;13893:82;:::o;79394:112::-;79453:7;79479:20;:18;:20::i;:::-;79472:27;;79394:112;:::o;79896:93::-;23542:13;:11;:13::i;:::-;79965:17:::1;79971:2;79975:6;79965:5;:17::i;:::-;79896:93:::0;;:::o;14190:116::-;14255:7;14281:9;:18;14291:7;14281:18;;;;;;;;;;;;;;;;14274:25;;14190:116;;;:::o;24304:101::-;23542:13;:11;:13::i;:::-;24368:30:::1;24395:1;24368:18;:30::i;:::-;24304:101::o:0;79144:143::-;79235:7;79261:19;79274:5;79261:12;:19::i;:::-;79254:26;;79144:143;;;:::o;73972:557::-;74070:13;74097:18;74129:21;74164:15;74193:25;74232:12;74258:27;74361:13;:11;:13::i;:::-;74388:16;:14;:16::i;:::-;74418:13;74453:4;74480:1;74472:10;;74510:1;74496:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;74310:212;;;;;;;;;;;;;;;;;;;;;73972:557;;;;;;;:::o;23649:85::-;23695:7;23721:6;;;;;;;;;;;23714:13;;23649:85;:::o;13167:93::-;13214:13;13246:7;13239:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13167:93;:::o;14501:178::-;14570:4;14586:13;14602:12;:10;:12::i;:::-;14586:28;;14624:27;14634:5;14641:2;14645:5;14624:9;:27::i;:::-;14668:4;14661:11;;;14501:178;;;;:::o;78418:672::-;78639:8;78621:15;:26;78617:97;;;78694:8;78670:33;;;;;;;;;;;:::i;:::-;;;;;;;;78617:97;78724:18;77760:95;78783:5;78790:7;78799:5;78806:16;78816:5;78806:9;:16::i;:::-;78824:8;78755:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;78745:89;;;;;;78724:110;;78845:12;78860:28;78877:10;78860:16;:28::i;:::-;78845:43;;78899:14;78916:28;78930:4;78936:1;78939;78942;78916:13;:28::i;:::-;78899:45;;78968:5;78958:15;;:6;:15;;;78954:88;;79017:6;79025:5;78996:35;;;;;;;;;;;;:::i;:::-;;;;;;;;78954:88;79052:31;79061:5;79068:7;79077:5;79052:8;:31::i;:::-;78607:483;;;78418:672;;;;;;;:::o;14737:140::-;14817:7;14843:11;:18;14855:5;14843:18;;;;;;;;;;;;;;;:27;14862:7;14843:27;;;;;;;;;;;;;;;;14836:34;;14737:140;;;;:::o;24554:215::-;23542:13;:11;:13::i;:::-;24658:1:::1;24638:22;;:8;:22;;::::0;24634:91:::1;;24711:1;24683:31;;;;;;;;;;;:::i;:::-;;;;;;;;24634:91;24734:28;24753:8;24734:18;:28::i;:::-;24554:215:::0;:::o;4205:96::-;4258:7;4284:10;4277:17;;4205:96;:::o;19880:128::-;19964:37;19973:5;19980:7;19989:5;19996:4;19964:8;:37::i;:::-;19880:128;;;:::o;21554:477::-;21653:24;21680:25;21690:5;21697:7;21680:9;:25::i;:::-;21653:52;;21739:17;21719:16;:37;21715:310;;21795:5;21776:16;:24;21772:130;;;21854:7;21863:16;21881:5;21827:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;21772:130;21943:57;21952:5;21959:7;21987:5;21968:16;:24;21994:5;21943:8;:57::i;:::-;21715:310;21643:388;21554:477;;;:::o;16547:300::-;16646:1;16630:18;;:4;:18;;;16626:86;;16698:1;16671:30;;;;;;;;;;;:::i;:::-;;;;;;;;16626:86;16739:1;16725:16;;:2;:16;;;16721:86;;16793:1;16764:32;;;;;;;;;;;:::i;:::-;;;;;;;;16721:86;16816:24;16824:4;16830:2;16834:5;16816:7;:24::i;:::-;16547:300;;;:::o;72673:262::-;72726:7;72766:11;72749:28;;72757:4;72749:28;;;:63;;;;;72798:14;72781:13;:31;72749:63;72745:184;;;72835:22;72828:29;;;;72745:184;72895:23;:21;:23::i;:::-;72888:30;;72673:262;;:::o;23807:162::-;23877:12;:10;:12::i;:::-;23866:23;;:7;:5;:7::i;:::-;:23;;;23862:101;;23939:12;:10;:12::i;:::-;23912:40;;;;;;;;;;;:::i;:::-;;;;;;;;23862:101;23807:162::o;18612:208::-;18701:1;18682:21;;:7;:21;;;18678:91;;18755:1;18726:32;;;;;;;;;;;:::i;:::-;;;;;;;;18678:91;18778:35;18794:1;18798:7;18807:5;18778:7;:35::i;:::-;18612:208;;:::o;24923:187::-;24996:16;25015:6;;;;;;;;;;;24996:25;;25040:8;25031:6;;:17;;;;;;;;;;;;;;;;;;25094:8;25063:40;;25084:8;25063:40;;;;;;;;;;;;24986:124;24923:187;:::o;75998:107::-;76058:7;76084;:14;76092:5;76084:14;;;;;;;;;;;;;;;;76077:21;;75998:107;;;:::o;74849:126::-;74895:13;74927:41;74954:13;74927:5;:26;;:41;;;;:::i;:::-;74920:48;;74849:126;:::o;75301:135::-;75350:13;75382:47;75412:16;75382:8;:29;;:47;;;;:::i;:::-;75375:54;;75301:135;:::o;76219:395::-;76279:7;76581;:14;76589:5;76581:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;76574:23;;76219:395;;;:::o;73745:176::-;73822:7;73848:66;73881:20;:18;:20::i;:::-;73903:10;73848:32;:66::i;:::-;73841:73;;73745:176;;;:::o;35796:260::-;35881:7;35901:17;35920:18;35940:16;35960:25;35971:4;35977:1;35980;35983;35960:10;:25::i;:::-;35900:85;;;;;;35995:28;36007:5;36014:8;35995:11;:28::i;:::-;36040:9;36033:16;;;;;35796:260;;;;;;:::o;20840:432::-;20969:1;20952:19;;:5;:19;;;20948:89;;21023:1;20994:32;;;;;;;;;;;:::i;:::-;;;;;;;;20948:89;21069:1;21050:21;;:7;:21;;;21046:90;;21122:1;21094:31;;;;;;;;;;;:::i;:::-;;;;;;;;21046:90;21175:5;21145:11;:18;21157:5;21145:18;;;;;;;;;;;;;;;:27;21164:7;21145:27;;;;;;;;;;;;;;;:35;;;;21194:9;21190:76;;;21240:7;21224:31;;21233:5;21224:31;;;21249:5;21224:31;;;;;;:::i;:::-;;;;;;;;21190:76;20840:432;;;;:::o;17162:1107::-;17267:1;17251:18;;:4;:18;;;17247:540;;17403:5;17387:12;;:21;;;;;;;:::i;:::-;;;;;;;;17247:540;;;17439:19;17461:9;:15;17471:4;17461:15;;;;;;;;;;;;;;;;17439:37;;17508:5;17494:11;:19;17490:115;;;17565:4;17571:11;17584:5;17540:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17490:115;17757:5;17743:11;:19;17725:9;:15;17735:4;17725:15;;;;;;;;;;;;;;;:37;;;;17425:362;17247:540;17815:1;17801:16;;:2;:16;;;17797:425;;17980:5;17964:12;;:21;;;;;;;;;;;17797:425;;;18192:5;18175:9;:13;18185:2;18175:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;17797:425;18252:2;18237:25;;18246:4;18237:25;;;18256:5;18237:25;;;;;;:::i;:::-;;;;;;;;17162:1107;;;:::o;72941:179::-;72996:7;70907:95;73054:11;73067:14;73083:13;73106:4;73032:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;73022:91;;;;;;73015:98;;72941:179;:::o;67277:267::-;67371:13;65282:66;67429:17;;67419:5;67400:46;67396:142;;67469:15;67478:5;67469:8;:15::i;:::-;67462:22;;;;67396:142;67522:5;67515:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;67277:267;;;;;:::o;59551:401::-;59644:14;59753:4;59747:11;59783:10;59778:3;59771:23;59830:15;59823:4;59818:3;59814:14;59807:39;59882:10;59875:4;59870:3;59866:14;59859:34;59931:4;59926:3;59916:20;59906:30;;59722:224;59551:401;;;;:::o;34133:1530::-;34259:7;34268:12;34282:7;35192:66;35187:1;35179:10;;:79;35175:164;;;35290:1;35294:30;35326:1;35274:54;;;;;;;;35175:164;35433:14;35450:24;35460:4;35466:1;35469;35472;35450:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35433:41;;35506:1;35488:20;;:6;:20;;;35484:113;;35540:1;35544:29;35583:1;35575:10;;35524:62;;;;;;;;;35484:113;35615:6;35623:20;35653:1;35645:10;;35607:49;;;;;;;34133:1530;;;;;;;;;:::o;36189:532::-;36284:20;36275:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;36271:444;36320:7;36271:444;36380:29;36371:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;36367:348;;36432:23;;;;;;;;;;;;;;36367:348;36485:35;36476:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;36472:243;;36579:8;36571:17;;36543:46;;;;;;;;;;;:::i;:::-;;;;;;;;36472:243;36619:30;36610:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;36606:109;;36695:8;36672:32;;;;;;;;;;;:::i;:::-;;;;;;;;36606:109;36189:532;;;:::o;65970:405::-;66029:13;66054:11;66068:16;66079:4;66068:10;:16::i;:::-;66054:30;;66172:17;66203:2;66192:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;66172:34;;66294:3;66289;66282:16;66334:4;66327;66322:3;66318:14;66311:28;66365:3;66358:10;;;;65970:405;;;:::o;66447:245::-;66508:7;66527:14;66580:4;66571;66544:33;;:40;66527:57;;66607:2;66598:6;:11;66594:69;;;66632:20;;;;;;;;;;;;;;66594:69;66679:6;66672:13;;;66447:245;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:149::-;5659:7;5699:66;5692:5;5688:78;5677:89;;5623:149;;;:::o;5778:115::-;5863:23;5880:5;5863:23;:::i;:::-;5858:3;5851:36;5778:115;;:::o;5899:118::-;5986:24;6004:5;5986:24;:::i;:::-;5981:3;5974:37;5899:118;;:::o;6023:114::-;6090:6;6124:5;6118:12;6108:22;;6023:114;;;:::o;6143:184::-;6242:11;6276:6;6271:3;6264:19;6316:4;6311:3;6307:14;6292:29;;6143:184;;;;:::o;6333:132::-;6400:4;6423:3;6415:11;;6453:4;6448:3;6444:14;6436:22;;6333:132;;;:::o;6471:108::-;6548:24;6566:5;6548:24;:::i;:::-;6543:3;6536:37;6471:108;;:::o;6585:179::-;6654:10;6675:46;6717:3;6709:6;6675:46;:::i;:::-;6753:4;6748:3;6744:14;6730:28;;6585:179;;;;:::o;6770:113::-;6840:4;6872;6867:3;6863:14;6855:22;;6770:113;;;:::o;6919:732::-;7038:3;7067:54;7115:5;7067:54;:::i;:::-;7137:86;7216:6;7211:3;7137:86;:::i;:::-;7130:93;;7247:56;7297:5;7247:56;:::i;:::-;7326:7;7357:1;7342:284;7367:6;7364:1;7361:13;7342:284;;;7443:6;7437:13;7470:63;7529:3;7514:13;7470:63;:::i;:::-;7463:70;;7556:60;7609:6;7556:60;:::i;:::-;7546:70;;7402:224;7389:1;7386;7382:9;7377:14;;7342:284;;;7346:14;7642:3;7635:10;;7043:608;;;6919:732;;;;:::o;7657:1215::-;8006:4;8044:3;8033:9;8029:19;8021:27;;8058:69;8124:1;8113:9;8109:17;8100:6;8058:69;:::i;:::-;8174:9;8168:4;8164:20;8159:2;8148:9;8144:18;8137:48;8202:78;8275:4;8266:6;8202:78;:::i;:::-;8194:86;;8327:9;8321:4;8317:20;8312:2;8301:9;8297:18;8290:48;8355:78;8428:4;8419:6;8355:78;:::i;:::-;8347:86;;8443:72;8511:2;8500:9;8496:18;8487:6;8443:72;:::i;:::-;8525:73;8593:3;8582:9;8578:19;8569:6;8525:73;:::i;:::-;8608;8676:3;8665:9;8661:19;8652:6;8608:73;:::i;:::-;8729:9;8723:4;8719:20;8713:3;8702:9;8698:19;8691:49;8757:108;8860:4;8851:6;8757:108;:::i;:::-;8749:116;;7657:1215;;;;;;;;;;:::o;8878:222::-;8971:4;9009:2;8998:9;8994:18;8986:26;;9022:71;9090:1;9079:9;9075:17;9066:6;9022:71;:::i;:::-;8878:222;;;;:::o;9106:118::-;9177:22;9193:5;9177:22;:::i;:::-;9170:5;9167:33;9157:61;;9214:1;9211;9204:12;9157:61;9106:118;:::o;9230:135::-;9274:5;9312:6;9299:20;9290:29;;9328:31;9353:5;9328:31;:::i;:::-;9230:135;;;;:::o;9371:122::-;9444:24;9462:5;9444:24;:::i;:::-;9437:5;9434:35;9424:63;;9483:1;9480;9473:12;9424:63;9371:122;:::o;9499:139::-;9545:5;9583:6;9570:20;9561:29;;9599:33;9626:5;9599:33;:::i;:::-;9499:139;;;;:::o;9644:1199::-;9755:6;9763;9771;9779;9787;9795;9803;9852:3;9840:9;9831:7;9827:23;9823:33;9820:120;;;9859:79;;:::i;:::-;9820:120;9979:1;10004:53;10049:7;10040:6;10029:9;10025:22;10004:53;:::i;:::-;9994:63;;9950:117;10106:2;10132:53;10177:7;10168:6;10157:9;10153:22;10132:53;:::i;:::-;10122:63;;10077:118;10234:2;10260:53;10305:7;10296:6;10285:9;10281:22;10260:53;:::i;:::-;10250:63;;10205:118;10362:2;10388:53;10433:7;10424:6;10413:9;10409:22;10388:53;:::i;:::-;10378:63;;10333:118;10490:3;10517:51;10560:7;10551:6;10540:9;10536:22;10517:51;:::i;:::-;10507:61;;10461:117;10617:3;10644:53;10689:7;10680:6;10669:9;10665:22;10644:53;:::i;:::-;10634:63;;10588:119;10746:3;10773:53;10818:7;10809:6;10798:9;10794:22;10773:53;:::i;:::-;10763:63;;10717:119;9644:1199;;;;;;;;;;:::o;10849:474::-;10917:6;10925;10974:2;10962:9;10953:7;10949:23;10945:32;10942:119;;;10980:79;;:::i;:::-;10942:119;11100:1;11125:53;11170:7;11161:6;11150:9;11146:22;11125:53;:::i;:::-;11115:63;;11071:117;11227:2;11253:53;11298:7;11289:6;11278:9;11274:22;11253:53;:::i;:::-;11243:63;;11198:118;10849:474;;;;;:::o;11329:180::-;11377:77;11374:1;11367:88;11474:4;11471:1;11464:15;11498:4;11495:1;11488:15;11515:320;11559:6;11596:1;11590:4;11586:12;11576:22;;11643:1;11637:4;11633:12;11664:18;11654:81;;11720:4;11712:6;11708:17;11698:27;;11654:81;11782:2;11774:6;11771:14;11751:18;11748:38;11745:84;;11801:18;;:::i;:::-;11745:84;11566:269;11515:320;;;:::o;11841:180::-;11889:77;11886:1;11879:88;11986:4;11983:1;11976:15;12010:4;12007:1;12000:15;12027:775;12260:4;12298:3;12287:9;12283:19;12275:27;;12312:71;12380:1;12369:9;12365:17;12356:6;12312:71;:::i;:::-;12393:72;12461:2;12450:9;12446:18;12437:6;12393:72;:::i;:::-;12475;12543:2;12532:9;12528:18;12519:6;12475:72;:::i;:::-;12557;12625:2;12614:9;12610:18;12601:6;12557:72;:::i;:::-;12639:73;12707:3;12696:9;12692:19;12683:6;12639:73;:::i;:::-;12722;12790:3;12779:9;12775:19;12766:6;12722:73;:::i;:::-;12027:775;;;;;;;;;:::o;12808:332::-;12929:4;12967:2;12956:9;12952:18;12944:26;;12980:71;13048:1;13037:9;13033:17;13024:6;12980:71;:::i;:::-;13061:72;13129:2;13118:9;13114:18;13105:6;13061:72;:::i;:::-;12808:332;;;;;:::o;13146:442::-;13295:4;13333:2;13322:9;13318:18;13310:26;;13346:71;13414:1;13403:9;13399:17;13390:6;13346:71;:::i;:::-;13427:72;13495:2;13484:9;13480:18;13471:6;13427:72;:::i;:::-;13509;13577:2;13566:9;13562:18;13553:6;13509:72;:::i;:::-;13146:442;;;;;;:::o;13594:180::-;13642:77;13639:1;13632:88;13739:4;13736:1;13729:15;13763:4;13760:1;13753:15;13780:191;13820:3;13839:20;13857:1;13839:20;:::i;:::-;13834:25;;13873:20;13891:1;13873:20;:::i;:::-;13868:25;;13916:1;13913;13909:9;13902:16;;13937:3;13934:1;13931:10;13928:36;;;13944:18;;:::i;:::-;13928:36;13780:191;;;;:::o;13977:664::-;14182:4;14220:3;14209:9;14205:19;14197:27;;14234:71;14302:1;14291:9;14287:17;14278:6;14234:71;:::i;:::-;14315:72;14383:2;14372:9;14368:18;14359:6;14315:72;:::i;:::-;14397;14465:2;14454:9;14450:18;14441:6;14397:72;:::i;:::-;14479;14547:2;14536:9;14532:18;14523:6;14479:72;:::i;:::-;14561:73;14629:3;14618:9;14614:19;14605:6;14561:73;:::i;:::-;13977:664;;;;;;;;:::o;14647:545::-;14820:4;14858:3;14847:9;14843:19;14835:27;;14872:71;14940:1;14929:9;14925:17;14916:6;14872:71;:::i;:::-;14953:68;15017:2;15006:9;15002:18;14993:6;14953:68;:::i;:::-;15031:72;15099:2;15088:9;15084:18;15075:6;15031:72;:::i;:::-;15113;15181:2;15170:9;15166:18;15157:6;15113:72;:::i;:::-;14647:545;;;;;;;:::o;15198:180::-;15246:77;15243:1;15236:88;15343:4;15340:1;15333:15;15367:4;15364:1;15357:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1569600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"decimals()": "361",
								"eip712Domain()": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "2916",
								"owner()": "2604",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 79653,
									"end": 79991,
									"name": "PUSH",
									"source": 0,
									"value": "160"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 79705,
									"end": 79890,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 78312,
									"end": 78364,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 78312,
									"end": 78364,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 78312,
									"end": 78364,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 78312,
									"end": 78364,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 78312,
									"end": 78364,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 78312,
									"end": 78364,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 78312,
									"end": 78364,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 78312,
									"end": 78364,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 78312,
									"end": 78364,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 78312,
									"end": 78364,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 78312,
									"end": 78364,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 78312,
									"end": 78364,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 78312,
									"end": 78364,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 78312,
									"end": 78364,
									"name": "PUSH",
									"source": 0,
									"value": "5265796573000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 78312,
									"end": 78364,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 78312,
									"end": 78364,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 78312,
									"end": 78364,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 78351,
									"end": 78355,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72156,
									"end": 72587,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 72156,
									"end": 72587,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 72156,
									"end": 72587,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72156,
									"end": 72587,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 72156,
									"end": 72587,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 72156,
									"end": 72587,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 72156,
									"end": 72587,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72156,
									"end": 72587,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72156,
									"end": 72587,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 72156,
									"end": 72587,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72156,
									"end": 72587,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72156,
									"end": 72587,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72156,
									"end": 72587,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 72156,
									"end": 72587,
									"name": "PUSH",
									"source": 0,
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72156,
									"end": 72587,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72156,
									"end": 72587,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72156,
									"end": 72587,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 79784,
									"end": 79796,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "PUSH",
									"source": 0,
									"value": "5265796573000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "PUSH",
									"source": 0,
									"value": "5259000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12861,
									"end": 12866,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12853,
									"end": 12858,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12853,
									"end": 12866,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12853,
									"end": 12866,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12853,
									"end": 12866,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12853,
									"end": 12866,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12853,
									"end": 12866,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12853,
									"end": 12866,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12853,
									"end": 12866,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12853,
									"end": 12866,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12853,
									"end": 12866,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12853,
									"end": 12866,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12886,
									"end": 12893,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12876,
									"end": 12883,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12876,
									"end": 12893,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12876,
									"end": 12893,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12876,
									"end": 12893,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12876,
									"end": 12893,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12876,
									"end": 12893,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12876,
									"end": 12893,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 12876,
									"end": 12893,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12876,
									"end": 12893,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 12876,
									"end": 12893,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12876,
									"end": 12893,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12787,
									"end": 12900,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23308,
									"end": 23309,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23284,
									"end": 23310,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23284,
									"end": 23310,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23284,
									"end": 23296,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23284,
									"end": 23310,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23284,
									"end": 23310,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23284,
									"end": 23310,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23280,
									"end": 23375,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 23280,
									"end": 23375,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23361,
									"end": 23362,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23333,
									"end": 23364,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23333,
									"end": 23364,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23333,
									"end": 23364,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23333,
									"end": 23364,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23333,
									"end": 23364,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23333,
									"end": 23364,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23333,
									"end": 23364,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23333,
									"end": 23364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 23333,
									"end": 23364,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23333,
									"end": 23364,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23333,
									"end": 23364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 23333,
									"end": 23364,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23333,
									"end": 23364,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 23333,
									"end": 23364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23333,
									"end": 23364,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23333,
									"end": 23364,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23333,
									"end": 23364,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23333,
									"end": 23364,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23333,
									"end": 23364,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23333,
									"end": 23364,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23333,
									"end": 23364,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23280,
									"end": 23375,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 23280,
									"end": 23375,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23384,
									"end": 23416,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 23403,
									"end": 23415,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23384,
									"end": 23402,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 23384,
									"end": 23402,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23384,
									"end": 23402,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 23384,
									"end": 23416,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23384,
									"end": 23416,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 23384,
									"end": 23416,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23384,
									"end": 23416,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 23384,
									"end": 23416,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23236,
									"end": 23423,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72229,
									"end": 72274,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72260,
									"end": 72273,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 72229,
									"end": 72233,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 72229,
									"end": 72259,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 72229,
									"end": 72259,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72229,
									"end": 72259,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 72229,
									"end": 72259,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72229,
									"end": 72274,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 72229,
									"end": 72274,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72229,
									"end": 72274,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72229,
									"end": 72274,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 72229,
									"end": 72274,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 72229,
									"end": 72274,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72229,
									"end": 72274,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72221,
									"end": 72274,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 72221,
									"end": 72274,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72221,
									"end": 72274,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72221,
									"end": 72274,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72221,
									"end": 72274,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72221,
									"end": 72274,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72295,
									"end": 72346,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 72329,
									"end": 72345,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 72295,
									"end": 72302,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72295,
									"end": 72328,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 72295,
									"end": 72328,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72295,
									"end": 72328,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 72295,
									"end": 72328,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72295,
									"end": 72346,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 72295,
									"end": 72346,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72295,
									"end": 72346,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72295,
									"end": 72346,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 72295,
									"end": 72346,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 72295,
									"end": 72346,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 72295,
									"end": 72346,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72284,
									"end": 72346,
									"name": "PUSH",
									"source": 0,
									"value": "140"
								},
								{
									"begin": 72284,
									"end": 72346,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72284,
									"end": 72346,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72284,
									"end": 72346,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72284,
									"end": 72346,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72284,
									"end": 72346,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72386,
									"end": 72390,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72370,
									"end": 72392,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72370,
									"end": 72392,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 72370,
									"end": 72392,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72370,
									"end": 72392,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72370,
									"end": 72392,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 72370,
									"end": 72392,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 72356,
									"end": 72392,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 72356,
									"end": 72392,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72356,
									"end": 72392,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72356,
									"end": 72392,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72356,
									"end": 72392,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72356,
									"end": 72392,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72435,
									"end": 72442,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72419,
									"end": 72444,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72419,
									"end": 72444,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 72419,
									"end": 72444,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72419,
									"end": 72444,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72419,
									"end": 72444,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 72419,
									"end": 72444,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 72402,
									"end": 72444,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 72402,
									"end": 72444,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72402,
									"end": 72444,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72402,
									"end": 72444,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72402,
									"end": 72444,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72402,
									"end": 72444,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72472,
									"end": 72485,
									"name": "CHAINID",
									"source": 0
								},
								{
									"begin": 72455,
									"end": 72485,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 72455,
									"end": 72485,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72455,
									"end": 72485,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72455,
									"end": 72485,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72455,
									"end": 72485,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72455,
									"end": 72485,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72520,
									"end": 72543,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 72520,
									"end": 72541,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 72520,
									"end": 72541,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72520,
									"end": 72541,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 72520,
									"end": 72543,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72520,
									"end": 72543,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 72520,
									"end": 72543,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 72520,
									"end": 72543,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 72520,
									"end": 72543,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72495,
									"end": 72543,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 72495,
									"end": 72543,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72495,
									"end": 72543,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72495,
									"end": 72543,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72495,
									"end": 72543,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72495,
									"end": 72543,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72575,
									"end": 72579,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 72553,
									"end": 72580,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 72553,
									"end": 72580,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 72553,
									"end": 72580,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 72553,
									"end": 72580,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72553,
									"end": 72580,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 72553,
									"end": 72580,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 72553,
									"end": 72580,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72553,
									"end": 72580,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72553,
									"end": 72580,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72553,
									"end": 72580,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72156,
									"end": 72587,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72156,
									"end": 72587,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 78312,
									"end": 78364,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 79841,
									"end": 79883,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 79847,
									"end": 79857,
									"modifierDepth": 3,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 79872,
									"end": 79882,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 79872,
									"end": 79880,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 79872,
									"end": 79880,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 79872,
									"end": 79880,
									"modifierDepth": 3,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 79872,
									"end": 79882,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 79872,
									"end": 79882,
									"modifierDepth": 3,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 79872,
									"end": 79882,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 79872,
									"end": 79882,
									"modifierDepth": 3,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 79872,
									"end": 79882,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 79866,
									"end": 79868,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 79866,
									"end": 79882,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 79866,
									"end": 79882,
									"modifierDepth": 3,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 79866,
									"end": 79882,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 79866,
									"end": 79882,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 79866,
									"end": 79882,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 79866,
									"end": 79882,
									"modifierDepth": 3,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 79866,
									"end": 79882,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 79859,
									"end": 79863,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 0,
									"value": "3E8"
								},
								{
									"begin": 79859,
									"end": 79882,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 79859,
									"end": 79882,
									"modifierDepth": 3,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 79859,
									"end": 79882,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 79859,
									"end": 79882,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 79859,
									"end": 79882,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 79859,
									"end": 79882,
									"modifierDepth": 3,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 79859,
									"end": 79882,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 79841,
									"end": 79846,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 79841,
									"end": 79846,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 79841,
									"end": 79846,
									"modifierDepth": 3,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 79841,
									"end": 79883,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 79841,
									"end": 79883,
									"modifierDepth": 3,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 79841,
									"end": 79883,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 79841,
									"end": 79883,
									"modifierDepth": 3,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 79841,
									"end": 79883,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 79705,
									"end": 79890,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24923,
									"end": 25110,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 24923,
									"end": 25110,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24996,
									"end": 25012,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25015,
									"end": 25021,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 25015,
									"end": 25021,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25015,
									"end": 25021,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25015,
									"end": 25021,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25015,
									"end": 25021,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25015,
									"end": 25021,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 25015,
									"end": 25021,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 25015,
									"end": 25021,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25015,
									"end": 25021,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 25015,
									"end": 25021,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25015,
									"end": 25021,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24996,
									"end": 25021,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24996,
									"end": 25021,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25040,
									"end": 25048,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25031,
									"end": 25037,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 25031,
									"end": 25037,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25031,
									"end": 25048,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 25031,
									"end": 25048,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 25031,
									"end": 25048,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25031,
									"end": 25048,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25031,
									"end": 25048,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25031,
									"end": 25048,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25031,
									"end": 25048,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25031,
									"end": 25048,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 25031,
									"end": 25048,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25031,
									"end": 25048,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25031,
									"end": 25048,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25031,
									"end": 25048,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25031,
									"end": 25048,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25031,
									"end": 25048,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25031,
									"end": 25048,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 25031,
									"end": 25048,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25031,
									"end": 25048,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25031,
									"end": 25048,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25094,
									"end": 25102,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25063,
									"end": 25103,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25063,
									"end": 25103,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25084,
									"end": 25092,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25063,
									"end": 25103,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25063,
									"end": 25103,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25063,
									"end": 25103,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 25063,
									"end": 25103,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25063,
									"end": 25103,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25063,
									"end": 25103,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25063,
									"end": 25103,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25063,
									"end": 25103,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25063,
									"end": 25103,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25063,
									"end": 25103,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 25063,
									"end": 25103,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25063,
									"end": 25103,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 24986,
									"end": 25110,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24923,
									"end": 25110,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24923,
									"end": 25110,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 66806,
									"end": 67146,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 66806,
									"end": 67146,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66902,
									"end": 66913,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66951,
									"end": 66953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 66935,
									"end": 66940,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 66929,
									"end": 66948,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 66929,
									"end": 66953,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 66925,
									"end": 67140,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 66925,
									"end": 67140,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 66925,
									"end": 67140,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 66976,
									"end": 66996,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 66990,
									"end": 66995,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 66976,
									"end": 66989,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 66976,
									"end": 66989,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 66976,
									"end": 66989,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 66976,
									"end": 66996,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 66976,
									"end": 66996,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 66976,
									"end": 66996,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 66976,
									"end": 66996,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 66976,
									"end": 66996,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66969,
									"end": 66996,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 66969,
									"end": 66996,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66969,
									"end": 66996,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 66969,
									"end": 66996,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 66925,
									"end": 67140,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 66925,
									"end": 67140,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 67068,
									"end": 67073,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 67027,
									"end": 67059,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 67053,
									"end": 67058,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 67027,
									"end": 67052,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 67027,
									"end": 67052,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 67027,
									"end": 67052,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 67027,
									"end": 67059,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 67027,
									"end": 67059,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 67027,
									"end": 67059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 67027,
									"end": 67059,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 67027,
									"end": 67059,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 67027,
									"end": 67065,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 67027,
									"end": 67065,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 67027,
									"end": 67073,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 67027,
									"end": 67073,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 67027,
									"end": 67073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 67027,
									"end": 67073,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 67027,
									"end": 67073,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 67027,
									"end": 67073,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 67027,
									"end": 67073,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 67027,
									"end": 67073,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 67027,
									"end": 67073,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 67027,
									"end": 67073,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65282,
									"end": 65348,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 67111,
									"end": 67128,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 67111,
									"end": 67128,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 67087,
									"end": 67129,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 67087,
									"end": 67129,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66806,
									"end": 67146,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 66806,
									"end": 67146,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66806,
									"end": 67146,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 66806,
									"end": 67146,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 66806,
									"end": 67146,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66806,
									"end": 67146,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66806,
									"end": 67146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 72941,
									"end": 73120,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 72941,
									"end": 73120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72996,
									"end": 73003,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70907,
									"end": 71002,
									"name": "PUSH",
									"source": 0,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 73054,
									"end": 73065,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 73054,
									"end": 73065,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 73067,
									"end": 73081,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 73067,
									"end": 73081,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 73083,
									"end": 73096,
									"name": "CHAINID",
									"source": 0
								},
								{
									"begin": 73106,
									"end": 73110,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 73032,
									"end": 73112,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 73032,
									"end": 73112,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 73022,
									"end": 73113,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 73022,
									"end": 73113,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 73022,
									"end": 73113,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 73022,
									"end": 73113,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 73022,
									"end": 73113,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 73022,
									"end": 73113,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 73015,
									"end": 73113,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 73015,
									"end": 73113,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72941,
									"end": 73120,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72941,
									"end": 73120,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13893,
									"end": 13975,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 13893,
									"end": 13975,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13942,
									"end": 13947,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13966,
									"end": 13968,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 13959,
									"end": 13968,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13959,
									"end": 13968,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13893,
									"end": 13975,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13893,
									"end": 13975,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18612,
									"end": 18820,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 18612,
									"end": 18820,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18701,
									"end": 18702,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18682,
									"end": 18703,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18682,
									"end": 18703,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18682,
									"end": 18689,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18682,
									"end": 18703,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18682,
									"end": 18703,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18682,
									"end": 18703,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18678,
									"end": 18769,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 18678,
									"end": 18769,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18755,
									"end": 18756,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18726,
									"end": 18758,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18726,
									"end": 18758,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18726,
									"end": 18758,
									"name": "PUSH",
									"source": 0,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18726,
									"end": 18758,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18726,
									"end": 18758,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18726,
									"end": 18758,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18726,
									"end": 18758,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18726,
									"end": 18758,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 18726,
									"end": 18758,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18726,
									"end": 18758,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18726,
									"end": 18758,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 18726,
									"end": 18758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18726,
									"end": 18758,
									"name": "tag",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 18726,
									"end": 18758,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18726,
									"end": 18758,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18726,
									"end": 18758,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18726,
									"end": 18758,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18726,
									"end": 18758,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18726,
									"end": 18758,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18726,
									"end": 18758,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18726,
									"end": 18758,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18678,
									"end": 18769,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 18678,
									"end": 18769,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18778,
									"end": 18813,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 18794,
									"end": 18795,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18798,
									"end": 18805,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18807,
									"end": 18812,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18778,
									"end": 18785,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 18778,
									"end": 18785,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18778,
									"end": 18785,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 18778,
									"end": 18813,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18778,
									"end": 18813,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 18778,
									"end": 18813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18778,
									"end": 18813,
									"name": "tag",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 18778,
									"end": 18813,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18612,
									"end": 18820,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18612,
									"end": 18820,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18612,
									"end": 18820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 65600,
									"end": 65886,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 65600,
									"end": 65886,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 65665,
									"end": 65676,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65688,
									"end": 65705,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65714,
									"end": 65717,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 65688,
									"end": 65718,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 65688,
									"end": 65718,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65746,
									"end": 65748,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 65732,
									"end": 65736,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 65732,
									"end": 65743,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 65732,
									"end": 65748,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 65728,
									"end": 65800,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 65728,
									"end": 65800,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 65728,
									"end": 65800,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 65785,
									"end": 65788,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 65771,
									"end": 65789,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 65771,
									"end": 65789,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 65771,
									"end": 65789,
									"name": "PUSH",
									"source": 0,
									"value": "305A27A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65771,
									"end": 65789,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 65771,
									"end": 65789,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 65771,
									"end": 65789,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 65771,
									"end": 65789,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 65771,
									"end": 65789,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 65771,
									"end": 65789,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 65771,
									"end": 65789,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 65771,
									"end": 65789,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "57"
								},
								{
									"begin": 65771,
									"end": 65789,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 65771,
									"end": 65789,
									"name": "tag",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 65771,
									"end": 65789,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 65771,
									"end": 65789,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 65771,
									"end": 65789,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 65771,
									"end": 65789,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65771,
									"end": 65789,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 65771,
									"end": 65789,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 65771,
									"end": 65789,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 65771,
									"end": 65789,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 65728,
									"end": 65800,
									"name": "tag",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 65728,
									"end": 65800,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 65866,
									"end": 65870,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65866,
									"end": 65877,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 65857,
									"end": 65861,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 65849,
									"end": 65862,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 65849,
									"end": 65862,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 65849,
									"end": 65862,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 65849,
									"end": 65862,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 65849,
									"end": 65862,
									"name": "tag",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 65849,
									"end": 65862,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 65841,
									"end": 65863,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65841,
									"end": 65863,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 65841,
									"end": 65877,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 65833,
									"end": 65878,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65833,
									"end": 65878,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 65809,
									"end": 65879,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 65809,
									"end": 65879,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65809,
									"end": 65879,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65600,
									"end": 65886,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 65600,
									"end": 65886,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 65600,
									"end": 65886,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65600,
									"end": 65886,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 63116,
									"end": 63318,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 63116,
									"end": 63318,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 63184,
									"end": 63204,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63292,
									"end": 63302,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 63282,
									"end": 63302,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 63282,
									"end": 63302,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63116,
									"end": 63318,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 63116,
									"end": 63318,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 63116,
									"end": 63318,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63116,
									"end": 63318,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17162,
									"end": 18269,
									"name": "tag",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 17162,
									"end": 18269,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17267,
									"end": 17268,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17251,
									"end": 17269,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17251,
									"end": 17269,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17251,
									"end": 17255,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17251,
									"end": 17269,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17251,
									"end": 17269,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17251,
									"end": 17269,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17247,
									"end": 17787,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "62"
								},
								{
									"begin": 17247,
									"end": 17787,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17403,
									"end": 17408,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17387,
									"end": 17399,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17387,
									"end": 17399,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17387,
									"end": 17408,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17387,
									"end": 17408,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17387,
									"end": 17408,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17387,
									"end": 17408,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "63"
								},
								{
									"begin": 17387,
									"end": 17408,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17387,
									"end": 17408,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17387,
									"end": 17408,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 17387,
									"end": 17408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17387,
									"end": 17408,
									"name": "tag",
									"source": 0,
									"value": "63"
								},
								{
									"begin": 17387,
									"end": 17408,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17387,
									"end": 17408,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17387,
									"end": 17408,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17387,
									"end": 17408,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17387,
									"end": 17408,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17387,
									"end": 17408,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17387,
									"end": 17408,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17387,
									"end": 17408,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17247,
									"end": 17787,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "65"
								},
								{
									"begin": 17247,
									"end": 17787,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17247,
									"end": 17787,
									"name": "tag",
									"source": 0,
									"value": "62"
								},
								{
									"begin": 17247,
									"end": 17787,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17439,
									"end": 17458,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17461,
									"end": 17470,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17461,
									"end": 17476,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17471,
									"end": 17475,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 17461,
									"end": 17476,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17461,
									"end": 17476,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17461,
									"end": 17476,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17461,
									"end": 17476,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17461,
									"end": 17476,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17461,
									"end": 17476,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17461,
									"end": 17476,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17461,
									"end": 17476,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17461,
									"end": 17476,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17461,
									"end": 17476,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17461,
									"end": 17476,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17461,
									"end": 17476,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17461,
									"end": 17476,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17461,
									"end": 17476,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17461,
									"end": 17476,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17461,
									"end": 17476,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17439,
									"end": 17476,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17439,
									"end": 17476,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17508,
									"end": 17513,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17494,
									"end": 17505,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17494,
									"end": 17513,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17490,
									"end": 17605,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17490,
									"end": 17605,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 17490,
									"end": 17605,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17565,
									"end": 17569,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17571,
									"end": 17582,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17584,
									"end": 17589,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17540,
									"end": 17590,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17540,
									"end": 17590,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17540,
									"end": 17590,
									"name": "PUSH",
									"source": 0,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17540,
									"end": 17590,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17540,
									"end": 17590,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17540,
									"end": 17590,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17540,
									"end": 17590,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17540,
									"end": 17590,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 17540,
									"end": 17590,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 17540,
									"end": 17590,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17540,
									"end": 17590,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17540,
									"end": 17590,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17540,
									"end": 17590,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "68"
								},
								{
									"begin": 17540,
									"end": 17590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17540,
									"end": 17590,
									"name": "tag",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 17540,
									"end": 17590,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17540,
									"end": 17590,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17540,
									"end": 17590,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17540,
									"end": 17590,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17540,
									"end": 17590,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17540,
									"end": 17590,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17540,
									"end": 17590,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17540,
									"end": 17590,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17490,
									"end": 17605,
									"name": "tag",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 17490,
									"end": 17605,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17757,
									"end": 17762,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17743,
									"end": 17754,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17743,
									"end": 17762,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17725,
									"end": 17734,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17725,
									"end": 17740,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17735,
									"end": 17739,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 17725,
									"end": 17740,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17725,
									"end": 17740,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17725,
									"end": 17740,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17725,
									"end": 17740,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17725,
									"end": 17740,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17725,
									"end": 17740,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17725,
									"end": 17740,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17725,
									"end": 17740,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17725,
									"end": 17740,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17725,
									"end": 17740,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17725,
									"end": 17740,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17725,
									"end": 17740,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17725,
									"end": 17740,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17725,
									"end": 17740,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17725,
									"end": 17740,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17725,
									"end": 17762,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17725,
									"end": 17762,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17725,
									"end": 17762,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17725,
									"end": 17762,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17425,
									"end": 17787,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17247,
									"end": 17787,
									"name": "tag",
									"source": 0,
									"value": "65"
								},
								{
									"begin": 17247,
									"end": 17787,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17815,
									"end": 17816,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17801,
									"end": 17817,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17801,
									"end": 17817,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17801,
									"end": 17803,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17801,
									"end": 17817,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17801,
									"end": 17817,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17801,
									"end": 17817,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17797,
									"end": 18222,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 17797,
									"end": 18222,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17980,
									"end": 17985,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17976,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17964,
									"end": 17976,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17964,
									"end": 17985,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17985,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17985,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17985,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17985,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17985,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17985,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17985,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17985,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17985,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17964,
									"end": 17985,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17797,
									"end": 18222,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 17797,
									"end": 18222,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17797,
									"end": 18222,
									"name": "tag",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 17797,
									"end": 18222,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18192,
									"end": 18197,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18175,
									"end": 18184,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18175,
									"end": 18188,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18185,
									"end": 18187,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 18175,
									"end": 18188,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18175,
									"end": 18188,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18175,
									"end": 18188,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18175,
									"end": 18188,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18175,
									"end": 18188,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18175,
									"end": 18188,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18175,
									"end": 18188,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18175,
									"end": 18188,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18175,
									"end": 18188,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18175,
									"end": 18188,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18175,
									"end": 18188,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18175,
									"end": 18188,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18175,
									"end": 18188,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18175,
									"end": 18188,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18175,
									"end": 18188,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 18175,
									"end": 18188,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18175,
									"end": 18197,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18175,
									"end": 18197,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18175,
									"end": 18197,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 18175,
									"end": 18197,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18175,
									"end": 18197,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 18175,
									"end": 18197,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18175,
									"end": 18197,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18175,
									"end": 18197,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18175,
									"end": 18197,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18175,
									"end": 18197,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18175,
									"end": 18197,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17797,
									"end": 18222,
									"name": "tag",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 17797,
									"end": 18222,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18252,
									"end": 18254,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18237,
									"end": 18262,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18237,
									"end": 18262,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18246,
									"end": 18250,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18237,
									"end": 18262,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18237,
									"end": 18262,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18237,
									"end": 18262,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 18256,
									"end": 18261,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18237,
									"end": 18262,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18237,
									"end": 18262,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18237,
									"end": 18262,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "71"
								},
								{
									"begin": 18237,
									"end": 18262,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18237,
									"end": 18262,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18237,
									"end": 18262,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "72"
								},
								{
									"begin": 18237,
									"end": 18262,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18237,
									"end": 18262,
									"name": "tag",
									"source": 0,
									"value": "71"
								},
								{
									"begin": 18237,
									"end": 18262,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18237,
									"end": 18262,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18237,
									"end": 18262,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18237,
									"end": 18262,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18237,
									"end": 18262,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18237,
									"end": 18262,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18237,
									"end": 18262,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18237,
									"end": 18262,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 17162,
									"end": 18269,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17162,
									"end": 18269,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17162,
									"end": 18269,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17162,
									"end": 18269,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "158"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 1,
									"value": "158"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "163"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 1,
									"value": "163"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "167"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 1,
									"value": "167"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "169"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 1,
									"value": "169"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "176"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 1,
									"value": "176"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "181"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 1,
									"value": "181"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "183"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "187"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 1,
									"value": "187"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 1,
									"value": "188"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "190"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "188"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 1,
									"value": "190"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "191"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "192"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 1,
									"value": "192"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 1,
									"value": "191"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 1,
									"value": "183"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "194"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 1,
									"value": "194"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "196"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 1,
									"value": "196"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6829,
									"end": 6906,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6826,
									"end": 6827,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6819,
									"end": 6907,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6926,
									"end": 6930,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 6923,
									"end": 6924,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6916,
									"end": 6931,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6950,
									"end": 6954,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6947,
									"end": 6948,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6940,
									"end": 6955,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7009,
									"end": 7017,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7056,
									"end": 7061,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7053,
									"end": 7054,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7049,
									"end": 7062,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7028,
									"end": 7062,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7028,
									"end": 7062,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7136,
									"end": 7141,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7143,
									"end": 7147,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7167,
									"end": 7173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7158,
									"end": 7173,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7158,
									"end": 7173,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7191,
									"end": 7196,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7182,
									"end": 7196,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7182,
									"end": 7196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "tag",
									"source": 1,
									"value": "200"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7226,
									"end": 7227,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7216,
									"end": 7224,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7213,
									"end": 7228,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "202"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7321,
									"end": 7325,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7316,
									"end": 7319,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 7312,
									"end": 7326,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7306,
									"end": 7310,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7303,
									"end": 7327,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "203"
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "204"
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 7330,
									"end": 7348,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "tag",
									"source": 1,
									"value": "204"
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "tag",
									"source": 1,
									"value": "203"
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7380,
									"end": 7381,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7370,
									"end": 7378,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7366,
									"end": 7382,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "205"
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7795,
									"end": 7799,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7788,
									"end": 7793,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7784,
									"end": 7800,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7775,
									"end": 7800,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7775,
									"end": 7800,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "tag",
									"source": 1,
									"value": "205"
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7845,
									"end": 7849,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7839,
									"end": 7843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7850,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7827,
									"end": 7850,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7827,
									"end": 7850,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "206"
								},
								{
									"begin": 7898,
									"end": 7906,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 7875,
									"end": 7907,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "tag",
									"source": 1,
									"value": "206"
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7863,
									"end": 7907,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 7863,
									"end": 7907,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "200"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "tag",
									"source": 1,
									"value": "202"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "tag",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 7988,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8174,
									"end": 8182,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "208"
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8195,
									"end": 8196,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8186,
									"end": 8196,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8186,
									"end": 8196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8197,
									"end": 8202,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 8197,
									"end": 8202,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "tag",
									"source": 1,
									"value": "208"
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8223,
									"end": 8227,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "209"
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8240,
									"end": 8241,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8231,
									"end": 8241,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8231,
									"end": 8241,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8242,
									"end": 8247,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 8242,
									"end": 8247,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "tag",
									"source": 1,
									"value": "209"
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8309,
									"end": 8313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8357,
									"end": 8358,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "211"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8393,
									"end": 8394,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "212"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "210"
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "tag",
									"source": 1,
									"value": "211"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8361,
									"end": 8371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8361,
									"end": 8371,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "tag",
									"source": 1,
									"value": "212"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8433,
									"end": 8436,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 8423,
									"end": 8431,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8420,
									"end": 8437,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "213"
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "214"
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 8440,
									"end": 8458,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "tag",
									"source": 1,
									"value": "214"
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "tag",
									"source": 1,
									"value": "213"
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8489,
									"end": 8497,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8486,
									"end": 8487,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8482,
									"end": 8498,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 8473,
									"end": 8498,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8473,
									"end": 8498,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8524,
									"end": 8527,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8517,
									"end": 8522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8514,
									"end": 8528,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "215"
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "216"
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 8531,
									"end": 8549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "tag",
									"source": 1,
									"value": "216"
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "tag",
									"source": 1,
									"value": "215"
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "tag",
									"source": 1,
									"value": "210"
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8688,
									"end": 8690,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8678,
									"end": 8686,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8675,
									"end": 8691,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8669,
									"end": 8672,
									"name": "PUSH",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 8663,
									"end": 8667,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8660,
									"end": 8673,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8656,
									"end": 8692,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8638,
									"end": 8640,
									"name": "PUSH",
									"source": 1,
									"value": "4E"
								},
								{
									"begin": 8628,
									"end": 8636,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8625,
									"end": 8641,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8620,
									"end": 8622,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 8614,
									"end": 8618,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8611,
									"end": 8623,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8607,
									"end": 8642,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8591,
									"end": 8702,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "217"
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8744,
									"end": 8752,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8738,
									"end": 8742,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8734,
									"end": 8753,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 8725,
									"end": 8753,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8725,
									"end": 8753,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8779,
									"end": 8782,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8772,
									"end": 8777,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8769,
									"end": 8783,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "218"
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "219"
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 8786,
									"end": 8804,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "tag",
									"source": 1,
									"value": "219"
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "tag",
									"source": 1,
									"value": "218"
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8819,
									"end": 8824,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 8819,
									"end": 8824,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "tag",
									"source": 1,
									"value": "217"
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "220"
								},
								{
									"begin": 8897,
									"end": 8900,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8887,
									"end": 8895,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8881,
									"end": 8885,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8878,
									"end": 8879,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 8859,
									"end": 8901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "tag",
									"source": 1,
									"value": "220"
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8933,
									"end": 8937,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8928,
									"end": 8931,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8924,
									"end": 8938,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 8917,
									"end": 8922,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8914,
									"end": 8939,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "221"
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "222"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 8942,
									"end": 8960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "tag",
									"source": 1,
									"value": "222"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "tag",
									"source": 1,
									"value": "221"
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8991,
									"end": 8995,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8984,
									"end": 8989,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8980,
									"end": 8996,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8971,
									"end": 8996,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8971,
									"end": 8996,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "tag",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "tag",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9043,
									"end": 9050,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9083,
									"end": 9087,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 9076,
									"end": 9081,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9072,
									"end": 9088,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9061,
									"end": 9088,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9061,
									"end": 9088,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9158,
									"end": 9163,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "225"
								},
								{
									"begin": 9200,
									"end": 9204,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 9182,
									"end": 9205,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "tag",
									"source": 1,
									"value": "225"
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9174,
									"end": 9205,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9174,
									"end": 9205,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "226"
								},
								{
									"begin": 9242,
									"end": 9250,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 9226,
									"end": 9251,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "tag",
									"source": 1,
									"value": "226"
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9251,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9251,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "227"
								},
								{
									"begin": 9307,
									"end": 9373,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9297,
									"end": 9305,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9291,
									"end": 9295,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 9270,
									"end": 9374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "tag",
									"source": 1,
									"value": "227"
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9261,
									"end": 9374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9261,
									"end": 9374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9427,
									"end": 9434,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "229"
								},
								{
									"begin": 9468,
									"end": 9469,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 9450,
									"end": 9470,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "tag",
									"source": 1,
									"value": "229"
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9445,
									"end": 9470,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9445,
									"end": 9470,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "230"
								},
								{
									"begin": 9502,
									"end": 9503,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 9484,
									"end": 9504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "tag",
									"source": 1,
									"value": "230"
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9479,
									"end": 9504,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9479,
									"end": 9504,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9539,
									"end": 9540,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9536,
									"end": 9537,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9532,
									"end": 9541,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "231"
								},
								{
									"begin": 9579,
									"end": 9590,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 9561,
									"end": 9591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "tag",
									"source": 1,
									"value": "231"
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9550,
									"end": 9591,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9550,
									"end": 9591,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9740,
									"end": 9741,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9731,
									"end": 9738,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9727,
									"end": 9742,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 9724,
									"end": 9725,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9721,
									"end": 9743,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 9701,
									"end": 9702,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9694,
									"end": 9703,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 9674,
									"end": 9757,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "232"
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "233"
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 9770,
									"end": 9788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "tag",
									"source": 1,
									"value": "233"
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "tag",
									"source": 1,
									"value": "232"
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9435,
									"end": 9797,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9880,
									"name": "tag",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 9803,
									"end": 9880,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9840,
									"end": 9847,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9869,
									"end": 9874,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9858,
									"end": 9874,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9858,
									"end": 9874,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9880,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9880,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9880,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9880,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 10004,
									"name": "tag",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 9886,
									"end": 10004,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9973,
									"end": 9997,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "236"
								},
								{
									"begin": 9991,
									"end": 9996,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9973,
									"end": 9997,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 9973,
									"end": 9997,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9973,
									"end": 9997,
									"name": "tag",
									"source": 1,
									"value": "236"
								},
								{
									"begin": 9973,
									"end": 9997,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9968,
									"end": 9971,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 10004,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 10004,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 10004,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10010,
									"end": 10128,
									"name": "tag",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 10010,
									"end": 10128,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10097,
									"end": 10121,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "238"
								},
								{
									"begin": 10115,
									"end": 10120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10097,
									"end": 10121,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 10097,
									"end": 10121,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10097,
									"end": 10121,
									"name": "tag",
									"source": 1,
									"value": "238"
								},
								{
									"begin": 10097,
									"end": 10121,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10092,
									"end": 10095,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10085,
									"end": 10122,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10010,
									"end": 10128,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10010,
									"end": 10128,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10010,
									"end": 10128,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10339,
									"end": 10343,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10377,
									"end": 10380,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 10366,
									"end": 10375,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10362,
									"end": 10381,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10354,
									"end": 10381,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10354,
									"end": 10381,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10391,
									"end": 10462,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "240"
								},
								{
									"begin": 10459,
									"end": 10460,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10448,
									"end": 10457,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10444,
									"end": 10461,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10435,
									"end": 10441,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 10391,
									"end": 10462,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 10391,
									"end": 10462,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10391,
									"end": 10462,
									"name": "tag",
									"source": 1,
									"value": "240"
								},
								{
									"begin": 10391,
									"end": 10462,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10472,
									"end": 10544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "241"
								},
								{
									"begin": 10540,
									"end": 10542,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10529,
									"end": 10538,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10525,
									"end": 10543,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10516,
									"end": 10522,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 10472,
									"end": 10544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 10472,
									"end": 10544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10472,
									"end": 10544,
									"name": "tag",
									"source": 1,
									"value": "241"
								},
								{
									"begin": 10472,
									"end": 10544,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10554,
									"end": 10626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "242"
								},
								{
									"begin": 10622,
									"end": 10624,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 10611,
									"end": 10620,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10607,
									"end": 10625,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10598,
									"end": 10604,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 10554,
									"end": 10626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 10554,
									"end": 10626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10554,
									"end": 10626,
									"name": "tag",
									"source": 1,
									"value": "242"
								},
								{
									"begin": 10554,
									"end": 10626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10636,
									"end": 10708,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "243"
								},
								{
									"begin": 10704,
									"end": 10706,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 10693,
									"end": 10702,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10689,
									"end": 10707,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10680,
									"end": 10686,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 10636,
									"end": 10708,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 10636,
									"end": 10708,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10636,
									"end": 10708,
									"name": "tag",
									"source": 1,
									"value": "243"
								},
								{
									"begin": 10636,
									"end": 10708,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10718,
									"end": 10791,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "244"
								},
								{
									"begin": 10786,
									"end": 10789,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 10775,
									"end": 10784,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10771,
									"end": 10790,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10762,
									"end": 10768,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 10718,
									"end": 10791,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 10718,
									"end": 10791,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10718,
									"end": 10791,
									"name": "tag",
									"source": 1,
									"value": "244"
								},
								{
									"begin": 10718,
									"end": 10791,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10804,
									"end": 10973,
									"name": "tag",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 10804,
									"end": 10973,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10888,
									"end": 10899,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10922,
									"end": 10928,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10917,
									"end": 10920,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10910,
									"end": 10929,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10962,
									"end": 10966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10957,
									"end": 10960,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10953,
									"end": 10967,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10938,
									"end": 10967,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10938,
									"end": 10967,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10804,
									"end": 10973,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 10804,
									"end": 10973,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10804,
									"end": 10973,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10804,
									"end": 10973,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10804,
									"end": 10973,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10979,
									"end": 11225,
									"name": "tag",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 10979,
									"end": 11225,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11060,
									"end": 11061,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11070,
									"end": 11183,
									"name": "tag",
									"source": 1,
									"value": "247"
								},
								{
									"begin": 11070,
									"end": 11183,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11084,
									"end": 11090,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11081,
									"end": 11082,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11078,
									"end": 11091,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 11070,
									"end": 11183,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 11070,
									"end": 11183,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "249"
								},
								{
									"begin": 11070,
									"end": 11183,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 11169,
									"end": 11170,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 11164,
									"end": 11167,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11160,
									"end": 11171,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11154,
									"end": 11172,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 11150,
									"end": 11151,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11145,
									"end": 11148,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11141,
									"end": 11152,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11134,
									"end": 11173,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 11106,
									"end": 11108,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 11103,
									"end": 11104,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11099,
									"end": 11109,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11094,
									"end": 11109,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11094,
									"end": 11109,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11070,
									"end": 11183,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "247"
								},
								{
									"begin": 11070,
									"end": 11183,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11070,
									"end": 11183,
									"name": "tag",
									"source": 1,
									"value": "249"
								},
								{
									"begin": 11070,
									"end": 11183,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11217,
									"end": 11218,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11208,
									"end": 11214,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11203,
									"end": 11206,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11199,
									"end": 11215,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11192,
									"end": 11219,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 11041,
									"end": 11225,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10979,
									"end": 11225,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10979,
									"end": 11225,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10979,
									"end": 11225,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10979,
									"end": 11225,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11231,
									"end": 11333,
									"name": "tag",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 11231,
									"end": 11333,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11272,
									"end": 11278,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11323,
									"end": 11325,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 11319,
									"end": 11326,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 11314,
									"end": 11316,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 11307,
									"end": 11312,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11303,
									"end": 11317,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11299,
									"end": 11327,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 11289,
									"end": 11327,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11289,
									"end": 11327,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11231,
									"end": 11333,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11231,
									"end": 11333,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11231,
									"end": 11333,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11231,
									"end": 11333,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11339,
									"end": 11716,
									"name": "tag",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 11339,
									"end": 11716,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11427,
									"end": 11430,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11455,
									"end": 11494,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "252"
								},
								{
									"begin": 11488,
									"end": 11493,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11455,
									"end": 11494,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 11455,
									"end": 11494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11455,
									"end": 11494,
									"name": "tag",
									"source": 1,
									"value": "252"
								},
								{
									"begin": 11455,
									"end": 11494,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11510,
									"end": 11581,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "253"
								},
								{
									"begin": 11574,
									"end": 11580,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11569,
									"end": 11572,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 11510,
									"end": 11581,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 11510,
									"end": 11581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11510,
									"end": 11581,
									"name": "tag",
									"source": 1,
									"value": "253"
								},
								{
									"begin": 11510,
									"end": 11581,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11503,
									"end": 11581,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 11503,
									"end": 11581,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11590,
									"end": 11655,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "254"
								},
								{
									"begin": 11648,
									"end": 11654,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11643,
									"end": 11646,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 11636,
									"end": 11640,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 11629,
									"end": 11634,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 11625,
									"end": 11641,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11590,
									"end": 11655,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 11590,
									"end": 11655,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11590,
									"end": 11655,
									"name": "tag",
									"source": 1,
									"value": "254"
								},
								{
									"begin": 11590,
									"end": 11655,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11680,
									"end": 11709,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "255"
								},
								{
									"begin": 11702,
									"end": 11708,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11680,
									"end": 11709,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 11680,
									"end": 11709,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11680,
									"end": 11709,
									"name": "tag",
									"source": 1,
									"value": "255"
								},
								{
									"begin": 11680,
									"end": 11709,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11675,
									"end": 11678,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11671,
									"end": 11710,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11664,
									"end": 11710,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11664,
									"end": 11710,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11431,
									"end": 11716,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11339,
									"end": 11716,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 11339,
									"end": 11716,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11339,
									"end": 11716,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11339,
									"end": 11716,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11339,
									"end": 11716,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11722,
									"end": 12035,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 11722,
									"end": 12035,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11835,
									"end": 11839,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11873,
									"end": 11875,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 11862,
									"end": 11871,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11858,
									"end": 11876,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11850,
									"end": 11876,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11850,
									"end": 11876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11922,
									"end": 11931,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11916,
									"end": 11920,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11912,
									"end": 11932,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 11908,
									"end": 11909,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11897,
									"end": 11906,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11893,
									"end": 11910,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11886,
									"end": 11933,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 11950,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "257"
								},
								{
									"begin": 12023,
									"end": 12027,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 12014,
									"end": 12020,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11950,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 11950,
									"end": 12028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11950,
									"end": 12028,
									"name": "tag",
									"source": 1,
									"value": "257"
								},
								{
									"begin": 11950,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11942,
									"end": 12028,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11942,
									"end": 12028,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11722,
									"end": 12035,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 11722,
									"end": 12035,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11722,
									"end": 12035,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11722,
									"end": 12035,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11722,
									"end": 12035,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12041,
									"end": 12139,
									"name": "tag",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 12041,
									"end": 12139,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12092,
									"end": 12098,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 12126,
									"end": 12131,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 12120,
									"end": 12132,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 12110,
									"end": 12132,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12110,
									"end": 12132,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12041,
									"end": 12139,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 12041,
									"end": 12139,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12041,
									"end": 12139,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12041,
									"end": 12139,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12145,
									"end": 12261,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 12145,
									"end": 12261,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12196,
									"end": 12200,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 12219,
									"end": 12222,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 12211,
									"end": 12222,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12211,
									"end": 12222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12249,
									"end": 12253,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 12244,
									"end": 12247,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12240,
									"end": 12254,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 12232,
									"end": 12254,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12232,
									"end": 12254,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12145,
									"end": 12261,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 12145,
									"end": 12261,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12145,
									"end": 12261,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12145,
									"end": 12261,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12267,
									"end": 12421,
									"name": "tag",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 12267,
									"end": 12421,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12310,
									"end": 12321,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 12346,
									"end": 12375,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "261"
								},
								{
									"begin": 12370,
									"end": 12373,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12364,
									"end": 12374,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 12346,
									"end": 12375,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 12346,
									"end": 12375,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12346,
									"end": 12375,
									"name": "tag",
									"source": 1,
									"value": "261"
								},
								{
									"begin": 12346,
									"end": 12375,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12409,
									"end": 12414,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 12385,
									"end": 12414,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 12385,
									"end": 12414,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12322,
									"end": 12421,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12267,
									"end": 12421,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 12267,
									"end": 12421,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12267,
									"end": 12421,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12267,
									"end": 12421,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12427,
									"end": 13021,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 12427,
									"end": 13021,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12511,
									"end": 12516,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 12542,
									"end": 12580,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "263"
								},
								{
									"begin": 12574,
									"end": 12579,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12542,
									"end": 12580,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 12542,
									"end": 12580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12542,
									"end": 12580,
									"name": "tag",
									"source": 1,
									"value": "263"
								},
								{
									"begin": 12542,
									"end": 12580,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12605,
									"end": 12610,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12632,
									"end": 12672,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "264"
								},
								{
									"begin": 12666,
									"end": 12671,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 12632,
									"end": 12672,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 12632,
									"end": 12672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12632,
									"end": 12672,
									"name": "tag",
									"source": 1,
									"value": "264"
								},
								{
									"begin": 12632,
									"end": 12672,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12620,
									"end": 12672,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12620,
									"end": 12672,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12691,
									"end": 12726,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "265"
								},
								{
									"begin": 12717,
									"end": 12725,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 12691,
									"end": 12726,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 12691,
									"end": 12726,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12691,
									"end": 12726,
									"name": "tag",
									"source": 1,
									"value": "265"
								},
								{
									"begin": 12691,
									"end": 12726,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12682,
									"end": 12726,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 12682,
									"end": 12726,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12750,
									"end": 12752,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 12742,
									"end": 12748,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12739,
									"end": 12753,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 12736,
									"end": 13014,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 12736,
									"end": 13014,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "266"
								},
								{
									"begin": 12736,
									"end": 13014,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 12821,
									"end": 12990,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "267"
								},
								{
									"begin": 12906,
									"end": 12972,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12876,
									"end": 12882,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 12872,
									"end": 12874,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 12868,
									"end": 12883,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 12865,
									"end": 12866,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 12861,
									"end": 12884,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 12821,
									"end": 12990,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 12821,
									"end": 12990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12821,
									"end": 12990,
									"name": "tag",
									"source": 1,
									"value": "267"
								},
								{
									"begin": 12821,
									"end": 12990,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12798,
									"end": 12803,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 12777,
									"end": 13004,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 12768,
									"end": 13004,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 12768,
									"end": 13004,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12736,
									"end": 13014,
									"name": "tag",
									"source": 1,
									"value": "266"
								},
								{
									"begin": 12736,
									"end": 13014,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12517,
									"end": 13021,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12517,
									"end": 13021,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12427,
									"end": 13021,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 12427,
									"end": 13021,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12427,
									"end": 13021,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12427,
									"end": 13021,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13027,
									"end": 13218,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 13027,
									"end": 13218,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13067,
									"end": 13070,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13086,
									"end": 13106,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "269"
								},
								{
									"begin": 13104,
									"end": 13105,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13086,
									"end": 13106,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 13086,
									"end": 13106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13086,
									"end": 13106,
									"name": "tag",
									"source": 1,
									"value": "269"
								},
								{
									"begin": 13086,
									"end": 13106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13081,
									"end": 13106,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 13081,
									"end": 13106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13120,
									"end": 13140,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "270"
								},
								{
									"begin": 13138,
									"end": 13139,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13120,
									"end": 13140,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 13120,
									"end": 13140,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13120,
									"end": 13140,
									"name": "tag",
									"source": 1,
									"value": "270"
								},
								{
									"begin": 13120,
									"end": 13140,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13115,
									"end": 13140,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 13115,
									"end": 13140,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13163,
									"end": 13164,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13160,
									"end": 13161,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13156,
									"end": 13165,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13149,
									"end": 13165,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13149,
									"end": 13165,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13184,
									"end": 13187,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13181,
									"end": 13182,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13178,
									"end": 13188,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 13175,
									"end": 13211,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 13175,
									"end": 13211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "271"
								},
								{
									"begin": 13175,
									"end": 13211,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 13191,
									"end": 13209,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "272"
								},
								{
									"begin": 13191,
									"end": 13209,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 13191,
									"end": 13209,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13191,
									"end": 13209,
									"name": "tag",
									"source": 1,
									"value": "272"
								},
								{
									"begin": 13191,
									"end": 13209,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13175,
									"end": 13211,
									"name": "tag",
									"source": 1,
									"value": "271"
								},
								{
									"begin": 13175,
									"end": 13211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13027,
									"end": 13218,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 13027,
									"end": 13218,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 13027,
									"end": 13218,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13027,
									"end": 13218,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13027,
									"end": 13218,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13224,
									"end": 13666,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 13224,
									"end": 13666,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13373,
									"end": 13377,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13411,
									"end": 13413,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 13400,
									"end": 13409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13396,
									"end": 13414,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13388,
									"end": 13414,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13388,
									"end": 13414,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13424,
									"end": 13495,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "274"
								},
								{
									"begin": 13492,
									"end": 13493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13481,
									"end": 13490,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13477,
									"end": 13494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13468,
									"end": 13474,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 13424,
									"end": 13495,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 13424,
									"end": 13495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13424,
									"end": 13495,
									"name": "tag",
									"source": 1,
									"value": "274"
								},
								{
									"begin": 13424,
									"end": 13495,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13505,
									"end": 13577,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "275"
								},
								{
									"begin": 13573,
									"end": 13575,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13562,
									"end": 13571,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13558,
									"end": 13576,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13549,
									"end": 13555,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 13505,
									"end": 13577,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 13505,
									"end": 13577,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13505,
									"end": 13577,
									"name": "tag",
									"source": 1,
									"value": "275"
								},
								{
									"begin": 13505,
									"end": 13577,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13587,
									"end": 13659,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "276"
								},
								{
									"begin": 13655,
									"end": 13657,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 13644,
									"end": 13653,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13640,
									"end": 13658,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13631,
									"end": 13637,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 13587,
									"end": 13659,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 13587,
									"end": 13659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13587,
									"end": 13659,
									"name": "tag",
									"source": 1,
									"value": "276"
								},
								{
									"begin": 13587,
									"end": 13659,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13224,
									"end": 13666,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 13224,
									"end": 13666,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 13224,
									"end": 13666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13224,
									"end": 13666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13224,
									"end": 13666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13224,
									"end": 13666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13224,
									"end": 13666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13672,
									"end": 13894,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 13672,
									"end": 13894,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13765,
									"end": 13769,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13803,
									"end": 13805,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13792,
									"end": 13801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13788,
									"end": 13806,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13780,
									"end": 13806,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13780,
									"end": 13806,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13816,
									"end": 13887,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "278"
								},
								{
									"begin": 13884,
									"end": 13885,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13873,
									"end": 13882,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13869,
									"end": 13886,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13860,
									"end": 13866,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 13816,
									"end": 13887,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 13816,
									"end": 13887,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13816,
									"end": 13887,
									"name": "tag",
									"source": 1,
									"value": "278"
								},
								{
									"begin": 13816,
									"end": 13887,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13672,
									"end": 13894,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 13672,
									"end": 13894,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 13672,
									"end": 13894,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13672,
									"end": 13894,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13672,
									"end": 13894,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "PUSH",
									"source": 0,
									"value": "140"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3150"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3147"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3144"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3142"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3140"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3138"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3136"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79653,
									"end": 79991,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d38e418eb5a98eda0e98c637a865f7559745e4b3e403bdca14fb94741b2559ef64736f6c63430008180033",
									".code": [
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "D505ACCF"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "7ECEBE00"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "84B0196E"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "3644E515"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79653,
											"end": 79991,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12965,
											"end": 13054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12965,
											"end": 13054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 15184,
											"end": 15370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15184,
											"end": 15370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15184,
											"end": 15370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14035,
											"end": 14132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14035,
											"end": 14132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 15930,
											"end": 16174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15930,
											"end": 16174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15930,
											"end": 16174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13893,
											"end": 13975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 13893,
											"end": 13975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 79394,
											"end": 79506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 79394,
											"end": 79506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 79896,
											"end": 79989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 79896,
											"end": 79989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14190,
											"end": 14306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14190,
											"end": 14306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14190,
											"end": 14306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24304,
											"end": 24405,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 24304,
											"end": 24405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24304,
											"end": 24405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 24304,
											"end": 24405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 24304,
											"end": 24405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24304,
											"end": 24405,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 24304,
											"end": 24405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24304,
											"end": 24405,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 79144,
											"end": 79287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 79144,
											"end": 79287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 79144,
											"end": 79287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 73972,
											"end": 74529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 73972,
											"end": 74529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 23649,
											"end": 23734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 23649,
											"end": 23734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 13167,
											"end": 13260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 13167,
											"end": 13260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14501,
											"end": 14679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 14501,
											"end": 14679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14501,
											"end": 14679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 78418,
											"end": 79090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 78418,
											"end": 79090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 14737,
											"end": 14877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14737,
											"end": 14877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14737,
											"end": 14877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24554,
											"end": 24769,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24554,
											"end": 24769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24554,
											"end": 24769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 24554,
											"end": 24769,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24554,
											"end": 24769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24554,
											"end": 24769,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24554,
											"end": 24769,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24554,
											"end": 24769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24554,
											"end": 24769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24554,
											"end": 24769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24554,
											"end": 24769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 24554,
											"end": 24769,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24554,
											"end": 24769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24554,
											"end": 24769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 24554,
											"end": 24769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24554,
											"end": 24769,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 24554,
											"end": 24769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24554,
											"end": 24769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 24554,
											"end": 24769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24554,
											"end": 24769,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 24554,
											"end": 24769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24554,
											"end": 24769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13010,
											"end": 13023,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13042,
											"end": 13047,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 13035,
											"end": 13047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 13035,
											"end": 13047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13035,
											"end": 13047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12965,
											"end": 13054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12965,
											"end": 13054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15257,
											"end": 15261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15273,
											"end": 15286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15289,
											"end": 15301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 15289,
											"end": 15299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15289,
											"end": 15301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15289,
											"end": 15301,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 15289,
											"end": 15301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15273,
											"end": 15301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15273,
											"end": 15301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15311,
											"end": 15342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 15320,
											"end": 15325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15327,
											"end": 15334,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15336,
											"end": 15341,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15311,
											"end": 15319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 15311,
											"end": 15342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15311,
											"end": 15342,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 15311,
											"end": 15342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15359,
											"end": 15363,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15352,
											"end": 15363,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15352,
											"end": 15363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15352,
											"end": 15363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15184,
											"end": 15370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14113,
											"end": 14125,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14113,
											"end": 14125,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14106,
											"end": 14125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14106,
											"end": 14125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16017,
											"end": 16021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16033,
											"end": 16048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16051,
											"end": 16063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 16051,
											"end": 16061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16051,
											"end": 16063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16051,
											"end": 16063,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 16051,
											"end": 16063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16033,
											"end": 16063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16033,
											"end": 16063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 16089,
											"end": 16093,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16095,
											"end": 16102,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16104,
											"end": 16109,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 16073,
											"end": 16110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16073,
											"end": 16110,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 16073,
											"end": 16110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16120,
											"end": 16146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 16130,
											"end": 16134,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16136,
											"end": 16138,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16140,
											"end": 16145,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16120,
											"end": 16129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 16120,
											"end": 16146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16120,
											"end": 16146,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 16120,
											"end": 16146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16163,
											"end": 16167,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16156,
											"end": 16167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16156,
											"end": 16167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16156,
											"end": 16167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15930,
											"end": 16174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13942,
											"end": 13947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13966,
											"end": 13968,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13959,
											"end": 13968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13959,
											"end": 13968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 13975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13893,
											"end": 13975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79453,
											"end": 79460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79479,
											"end": 79499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 79479,
											"end": 79497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 79479,
											"end": 79499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79479,
											"end": 79499,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 79479,
											"end": 79499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79472,
											"end": 79499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79472,
											"end": 79499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79394,
											"end": 79506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79394,
											"end": 79506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23542,
											"end": 23555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 23542,
											"end": 23553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 23542,
											"end": 23555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23542,
											"end": 23555,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 23542,
											"end": 23555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79965,
											"end": 79982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 79971,
											"end": 79973,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 79975,
											"end": 79981,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 79965,
											"end": 79970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 79965,
											"end": 79982,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79965,
											"end": 79982,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 79965,
											"end": 79982,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79896,
											"end": 79989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79896,
											"end": 79989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14255,
											"end": 14262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14281,
											"end": 14290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14281,
											"end": 14299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14291,
											"end": 14298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14281,
											"end": 14299,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14281,
											"end": 14299,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14281,
											"end": 14299,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14281,
											"end": 14299,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14281,
											"end": 14299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14281,
											"end": 14299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14281,
											"end": 14299,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14281,
											"end": 14299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14281,
											"end": 14299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14281,
											"end": 14299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14281,
											"end": 14299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14281,
											"end": 14299,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14281,
											"end": 14299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14281,
											"end": 14299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14281,
											"end": 14299,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14281,
											"end": 14299,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14274,
											"end": 14299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14274,
											"end": 14299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14190,
											"end": 14306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24304,
											"end": 24405,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 24304,
											"end": 24405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23542,
											"end": 23555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 23542,
											"end": 23553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 23542,
											"end": 23555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23542,
											"end": 23555,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 23542,
											"end": 23555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24368,
											"end": 24398,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 24395,
											"end": 24396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24368,
											"end": 24386,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 24368,
											"end": 24398,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24368,
											"end": 24398,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 24368,
											"end": 24398,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24304,
											"end": 24405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79235,
											"end": 79242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79261,
											"end": 79280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 79274,
											"end": 79279,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 79261,
											"end": 79273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 79261,
											"end": 79280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79261,
											"end": 79280,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 79261,
											"end": 79280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79254,
											"end": 79280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79254,
											"end": 79280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79144,
											"end": 79287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74070,
											"end": 74083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74097,
											"end": 74115,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 74129,
											"end": 74150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74164,
											"end": 74179,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74193,
											"end": 74218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74232,
											"end": 74244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74258,
											"end": 74285,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 74361,
											"end": 74374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 74361,
											"end": 74372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 74361,
											"end": 74374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74361,
											"end": 74374,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 74361,
											"end": 74374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74388,
											"end": 74404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 74388,
											"end": 74402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 74388,
											"end": 74404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74388,
											"end": 74404,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 74388,
											"end": 74404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74418,
											"end": 74431,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 74453,
											"end": 74457,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 74480,
											"end": 74481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74472,
											"end": 74482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74472,
											"end": 74482,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 74510,
											"end": 74511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 74496,
											"end": 74512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74496,
											"end": 74512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74310,
											"end": 74522,
											"name": "PUSH",
											"source": 0,
											"value": "F00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 74310,
											"end": 74522,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 74310,
											"end": 74522,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 74310,
											"end": 74522,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 74310,
											"end": 74522,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 74310,
											"end": 74522,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74310,
											"end": 74522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74310,
											"end": 74522,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 74310,
											"end": 74522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74310,
											"end": 74522,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 74310,
											"end": 74522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74310,
											"end": 74522,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 74310,
											"end": 74522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74310,
											"end": 74522,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 74310,
											"end": 74522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74310,
											"end": 74522,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 74310,
											"end": 74522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74310,
											"end": 74522,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 74310,
											"end": 74522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74310,
											"end": 74522,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 74310,
											"end": 74522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 73972,
											"end": 74529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23695,
											"end": 23702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23721,
											"end": 23727,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23721,
											"end": 23727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23721,
											"end": 23727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23721,
											"end": 23727,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23721,
											"end": 23727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23721,
											"end": 23727,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23721,
											"end": 23727,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23721,
											"end": 23727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23721,
											"end": 23727,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23721,
											"end": 23727,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23721,
											"end": 23727,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23714,
											"end": 23727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23714,
											"end": 23727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13214,
											"end": 13227,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13246,
											"end": 13253,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 13239,
											"end": 13253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 13239,
											"end": 13253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13167,
											"end": 13260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14570,
											"end": 14574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14586,
											"end": 14599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14602,
											"end": 14614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14602,
											"end": 14612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14602,
											"end": 14614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14602,
											"end": 14614,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 14602,
											"end": 14614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14586,
											"end": 14614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14586,
											"end": 14614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14624,
											"end": 14651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14641,
											"end": 14643,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14645,
											"end": 14650,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14624,
											"end": 14633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14624,
											"end": 14651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14624,
											"end": 14651,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 14624,
											"end": 14651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14668,
											"end": 14672,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14661,
											"end": 14672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14661,
											"end": 14672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14661,
											"end": 14672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14501,
											"end": 14679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78639,
											"end": 78647,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78621,
											"end": 78636,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 78621,
											"end": 78647,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 78617,
											"end": 78714,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 78617,
											"end": 78714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 78617,
											"end": 78714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78694,
											"end": 78702,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78670,
											"end": 78703,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78670,
											"end": 78703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78670,
											"end": 78703,
											"name": "PUSH",
											"source": 0,
											"value": "6279130200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 78670,
											"end": 78703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78670,
											"end": 78703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78670,
											"end": 78703,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78670,
											"end": 78703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78670,
											"end": 78703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 78670,
											"end": 78703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78670,
											"end": 78703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78670,
											"end": 78703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 78670,
											"end": 78703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78670,
											"end": 78703,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 78670,
											"end": 78703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78670,
											"end": 78703,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78670,
											"end": 78703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78670,
											"end": 78703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78670,
											"end": 78703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78670,
											"end": 78703,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78670,
											"end": 78703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78670,
											"end": 78703,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 78617,
											"end": 78714,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 78617,
											"end": 78714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78724,
											"end": 78742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77760,
											"end": 77855,
											"name": "PUSH",
											"source": 0,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 78783,
											"end": 78788,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 78790,
											"end": 78797,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 78799,
											"end": 78804,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 78806,
											"end": 78822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 78816,
											"end": 78821,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 78806,
											"end": 78815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 78806,
											"end": 78822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78806,
											"end": 78822,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 78806,
											"end": 78822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78824,
											"end": 78832,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 78755,
											"end": 78833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78755,
											"end": 78833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78745,
											"end": 78834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78745,
											"end": 78834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78745,
											"end": 78834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78745,
											"end": 78834,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78745,
											"end": 78834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78745,
											"end": 78834,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 78724,
											"end": 78834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78724,
											"end": 78834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78845,
											"end": 78857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78860,
											"end": 78888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 78877,
											"end": 78887,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78860,
											"end": 78876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 78860,
											"end": 78888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78860,
											"end": 78888,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 78860,
											"end": 78888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78845,
											"end": 78888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78845,
											"end": 78888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78899,
											"end": 78913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78916,
											"end": 78944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 78930,
											"end": 78934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78936,
											"end": 78937,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 78939,
											"end": 78940,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 78942,
											"end": 78943,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 78916,
											"end": 78929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 78916,
											"end": 78944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78916,
											"end": 78944,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 78916,
											"end": 78944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78899,
											"end": 78944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78899,
											"end": 78944,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78968,
											"end": 78973,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 78958,
											"end": 78973,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78958,
											"end": 78973,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78958,
											"end": 78964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78958,
											"end": 78973,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78958,
											"end": 78973,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78958,
											"end": 78973,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 78954,
											"end": 79042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 78954,
											"end": 79042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79017,
											"end": 79023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79025,
											"end": 79030,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 78996,
											"end": 79031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78996,
											"end": 79031,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78996,
											"end": 79031,
											"name": "PUSH",
											"source": 0,
											"value": "4B800E4600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 78996,
											"end": 79031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78996,
											"end": 79031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78996,
											"end": 79031,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78996,
											"end": 79031,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78996,
											"end": 79031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 78996,
											"end": 79031,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 78996,
											"end": 79031,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78996,
											"end": 79031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78996,
											"end": 79031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 78996,
											"end": 79031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78996,
											"end": 79031,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 78996,
											"end": 79031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78996,
											"end": 79031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78996,
											"end": 79031,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78996,
											"end": 79031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78996,
											"end": 79031,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78996,
											"end": 79031,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78996,
											"end": 79031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78996,
											"end": 79031,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 78954,
											"end": 79042,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 78954,
											"end": 79042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79052,
											"end": 79083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 79061,
											"end": 79066,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 79068,
											"end": 79075,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 79077,
											"end": 79082,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 79052,
											"end": 79060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 79052,
											"end": 79083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79052,
											"end": 79083,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 79052,
											"end": 79083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78607,
											"end": 79090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78607,
											"end": 79090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78607,
											"end": 79090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78418,
											"end": 79090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78418,
											"end": 79090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14817,
											"end": 14824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14843,
											"end": 14854,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14843,
											"end": 14861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14855,
											"end": 14860,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14861,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14843,
											"end": 14861,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14861,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14843,
											"end": 14861,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14861,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14861,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14843,
											"end": 14861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14861,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14861,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14843,
											"end": 14861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14843,
											"end": 14861,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14862,
											"end": 14869,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14870,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14843,
											"end": 14870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14870,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14843,
											"end": 14870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14870,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14843,
											"end": 14870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14870,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14843,
											"end": 14870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14843,
											"end": 14870,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14870,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14836,
											"end": 14870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14836,
											"end": 14870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14737,
											"end": 14877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24554,
											"end": 24769,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 24554,
											"end": 24769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23542,
											"end": 23555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 23542,
											"end": 23553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 23542,
											"end": 23555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23542,
											"end": 23555,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 23542,
											"end": 23555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24658,
											"end": 24659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24638,
											"end": 24660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24638,
											"end": 24660,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24638,
											"end": 24646,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24638,
											"end": 24660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24638,
											"end": 24660,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24638,
											"end": 24660,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24634,
											"end": 24725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 24634,
											"end": 24725,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24711,
											"end": 24712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24683,
											"end": 24714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24683,
											"end": 24714,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24683,
											"end": 24714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24683,
											"end": 24714,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24683,
											"end": 24714,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24683,
											"end": 24714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24683,
											"end": 24714,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24683,
											"end": 24714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 24683,
											"end": 24714,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24683,
											"end": 24714,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24683,
											"end": 24714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 24683,
											"end": 24714,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24683,
											"end": 24714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 24683,
											"end": 24714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24683,
											"end": 24714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24683,
											"end": 24714,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24683,
											"end": 24714,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24683,
											"end": 24714,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24683,
											"end": 24714,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24683,
											"end": 24714,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24683,
											"end": 24714,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24634,
											"end": 24725,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 24634,
											"end": 24725,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24734,
											"end": 24762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 24753,
											"end": 24761,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24734,
											"end": 24752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 24734,
											"end": 24762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24734,
											"end": 24762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 24734,
											"end": 24762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24554,
											"end": 24769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24554,
											"end": 24769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4205,
											"end": 4301,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4205,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4258,
											"end": 4265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4284,
											"end": 4294,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4277,
											"end": 4294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4205,
											"end": 4301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4205,
											"end": 4301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19880,
											"end": 20008,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 19880,
											"end": 20008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19964,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 19973,
											"end": 19978,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19980,
											"end": 19987,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19989,
											"end": 19994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19996,
											"end": 20000,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19964,
											"end": 19972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 19964,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19964,
											"end": 20001,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 19964,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19880,
											"end": 20008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19880,
											"end": 20008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19880,
											"end": 20008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19880,
											"end": 20008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21554,
											"end": 22031,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 21554,
											"end": 22031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21653,
											"end": 21677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21680,
											"end": 21705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 21690,
											"end": 21695,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21697,
											"end": 21704,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21680,
											"end": 21689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 21680,
											"end": 21705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21680,
											"end": 21705,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 21680,
											"end": 21705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21653,
											"end": 21705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21653,
											"end": 21705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21739,
											"end": 21756,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21719,
											"end": 21735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 21756,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21715,
											"end": 22025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 21715,
											"end": 22025,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21795,
											"end": 21800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21776,
											"end": 21800,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21772,
											"end": 21902,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21772,
											"end": 21902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 21772,
											"end": 21902,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21854,
											"end": 21861,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21863,
											"end": 21879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21881,
											"end": 21886,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21827,
											"end": 21887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21887,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21827,
											"end": 21887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21887,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21887,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21827,
											"end": 21887,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 21827,
											"end": 21887,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21887,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 21827,
											"end": 21887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21887,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 21827,
											"end": 21887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21827,
											"end": 21887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21887,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21827,
											"end": 21887,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21772,
											"end": 21902,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 21772,
											"end": 21902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21943,
											"end": 22000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 21952,
											"end": 21957,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21959,
											"end": 21966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21987,
											"end": 21992,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21968,
											"end": 21984,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21968,
											"end": 21992,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21994,
											"end": 21999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21943,
											"end": 21951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 21943,
											"end": 22000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21943,
											"end": 22000,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 21943,
											"end": 22000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21715,
											"end": 22025,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 21715,
											"end": 22025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21643,
											"end": 22031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21554,
											"end": 22031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21554,
											"end": 22031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21554,
											"end": 22031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21554,
											"end": 22031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16547,
											"end": 16847,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 16547,
											"end": 16847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16646,
											"end": 16647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16630,
											"end": 16648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16630,
											"end": 16648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16630,
											"end": 16634,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16630,
											"end": 16648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16630,
											"end": 16648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16630,
											"end": 16648,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16626,
											"end": 16712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16626,
											"end": 16712,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16698,
											"end": 16699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16671,
											"end": 16701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16671,
											"end": 16701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16671,
											"end": 16701,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16671,
											"end": 16701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16671,
											"end": 16701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16671,
											"end": 16701,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16671,
											"end": 16701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16671,
											"end": 16701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 16671,
											"end": 16701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16671,
											"end": 16701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16671,
											"end": 16701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 16671,
											"end": 16701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16671,
											"end": 16701,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 16671,
											"end": 16701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16671,
											"end": 16701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16671,
											"end": 16701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16671,
											"end": 16701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16671,
											"end": 16701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16671,
											"end": 16701,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16671,
											"end": 16701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16671,
											"end": 16701,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16626,
											"end": 16712,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 16626,
											"end": 16712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16739,
											"end": 16740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16725,
											"end": 16741,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16725,
											"end": 16741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16725,
											"end": 16727,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16725,
											"end": 16741,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16725,
											"end": 16741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16725,
											"end": 16741,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16721,
											"end": 16807,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16793,
											"end": 16794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 16764,
											"end": 16796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16764,
											"end": 16796,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16807,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16721,
											"end": 16807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16816,
											"end": 16840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 16824,
											"end": 16828,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16830,
											"end": 16832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16834,
											"end": 16839,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16816,
											"end": 16823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 16816,
											"end": 16840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16816,
											"end": 16840,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 16816,
											"end": 16840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16547,
											"end": 16847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16547,
											"end": 16847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16547,
											"end": 16847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16547,
											"end": 16847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72673,
											"end": 72935,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 72673,
											"end": 72935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72726,
											"end": 72733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72766,
											"end": 72777,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3140"
										},
										{
											"begin": 72749,
											"end": 72777,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72749,
											"end": 72777,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72757,
											"end": 72761,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 72749,
											"end": 72777,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72749,
											"end": 72777,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72749,
											"end": 72777,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72749,
											"end": 72812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72749,
											"end": 72812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72749,
											"end": 72812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 72749,
											"end": 72812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72749,
											"end": 72812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72798,
											"end": 72812,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3138"
										},
										{
											"begin": 72781,
											"end": 72794,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 72781,
											"end": 72812,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72749,
											"end": 72812,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 72749,
											"end": 72812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72745,
											"end": 72929,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72745,
											"end": 72929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 72745,
											"end": 72929,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72835,
											"end": 72857,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3136"
										},
										{
											"begin": 72828,
											"end": 72857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72828,
											"end": 72857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72828,
											"end": 72857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 72828,
											"end": 72857,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72745,
											"end": 72929,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 72745,
											"end": 72929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72895,
											"end": 72918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 72895,
											"end": 72916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 72895,
											"end": 72918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72895,
											"end": 72918,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 72895,
											"end": 72918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72888,
											"end": 72918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72888,
											"end": 72918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72673,
											"end": 72935,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 72673,
											"end": 72935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72673,
											"end": 72935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72673,
											"end": 72935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23807,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 23807,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23877,
											"end": 23889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 23877,
											"end": 23887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23877,
											"end": 23889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23877,
											"end": 23889,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 23877,
											"end": 23889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23866,
											"end": 23889,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23866,
											"end": 23889,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23866,
											"end": 23873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 23866,
											"end": 23871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 23866,
											"end": 23873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23866,
											"end": 23873,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 23866,
											"end": 23873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23866,
											"end": 23889,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23866,
											"end": 23889,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23866,
											"end": 23889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 23963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 23862,
											"end": 23963,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23939,
											"end": 23951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 23939,
											"end": 23949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23939,
											"end": 23951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23939,
											"end": 23951,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 23939,
											"end": 23951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23912,
											"end": 23952,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23912,
											"end": 23952,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23912,
											"end": 23952,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23912,
											"end": 23952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23912,
											"end": 23952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23912,
											"end": 23952,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23912,
											"end": 23952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23912,
											"end": 23952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 23912,
											"end": 23952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23912,
											"end": 23952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23912,
											"end": 23952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 23912,
											"end": 23952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23912,
											"end": 23952,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 23912,
											"end": 23952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23912,
											"end": 23952,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23912,
											"end": 23952,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23912,
											"end": 23952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23912,
											"end": 23952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23912,
											"end": 23952,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23912,
											"end": 23952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23912,
											"end": 23952,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 23963,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 23862,
											"end": 23963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23807,
											"end": 23969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18612,
											"end": 18820,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 18612,
											"end": 18820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18701,
											"end": 18702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18682,
											"end": 18703,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18682,
											"end": 18703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18682,
											"end": 18689,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18682,
											"end": 18703,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18682,
											"end": 18703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18682,
											"end": 18703,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18678,
											"end": 18769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 18678,
											"end": 18769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18755,
											"end": 18756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18726,
											"end": 18758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18726,
											"end": 18758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18726,
											"end": 18758,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18726,
											"end": 18758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18726,
											"end": 18758,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18726,
											"end": 18758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18726,
											"end": 18758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18726,
											"end": 18758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 18726,
											"end": 18758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18726,
											"end": 18758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18726,
											"end": 18758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 18726,
											"end": 18758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18726,
											"end": 18758,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 18726,
											"end": 18758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18726,
											"end": 18758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18726,
											"end": 18758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18726,
											"end": 18758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18726,
											"end": 18758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18726,
											"end": 18758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18726,
											"end": 18758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18726,
											"end": 18758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18678,
											"end": 18769,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 18678,
											"end": 18769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18778,
											"end": 18813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 18794,
											"end": 18795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18798,
											"end": 18805,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18807,
											"end": 18812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18778,
											"end": 18785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 18778,
											"end": 18813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18778,
											"end": 18813,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 18778,
											"end": 18813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18612,
											"end": 18820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18612,
											"end": 18820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18612,
											"end": 18820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24923,
											"end": 25110,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 24923,
											"end": 25110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24996,
											"end": 25012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25015,
											"end": 25021,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25015,
											"end": 25021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25015,
											"end": 25021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25015,
											"end": 25021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25015,
											"end": 25021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25015,
											"end": 25021,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25015,
											"end": 25021,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25015,
											"end": 25021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25015,
											"end": 25021,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25015,
											"end": 25021,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25015,
											"end": 25021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24996,
											"end": 25021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24996,
											"end": 25021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25040,
											"end": 25048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25031,
											"end": 25037,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25031,
											"end": 25037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25031,
											"end": 25048,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25031,
											"end": 25048,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25031,
											"end": 25048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25031,
											"end": 25048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25031,
											"end": 25048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25031,
											"end": 25048,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25031,
											"end": 25048,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25031,
											"end": 25048,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25031,
											"end": 25048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25031,
											"end": 25048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25031,
											"end": 25048,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25031,
											"end": 25048,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25031,
											"end": 25048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25031,
											"end": 25048,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25031,
											"end": 25048,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25031,
											"end": 25048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25031,
											"end": 25048,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25031,
											"end": 25048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25094,
											"end": 25102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25063,
											"end": 25103,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25063,
											"end": 25103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25084,
											"end": 25092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25063,
											"end": 25103,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25063,
											"end": 25103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25063,
											"end": 25103,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 25063,
											"end": 25103,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25063,
											"end": 25103,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25063,
											"end": 25103,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25063,
											"end": 25103,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25063,
											"end": 25103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25063,
											"end": 25103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25063,
											"end": 25103,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25063,
											"end": 25103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25063,
											"end": 25103,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 24986,
											"end": 25110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24923,
											"end": 25110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24923,
											"end": 25110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75998,
											"end": 76105,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 75998,
											"end": 76105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76058,
											"end": 76065,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76084,
											"end": 76091,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 76084,
											"end": 76098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76092,
											"end": 76097,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76084,
											"end": 76098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76084,
											"end": 76098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76084,
											"end": 76098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76084,
											"end": 76098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76084,
											"end": 76098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76084,
											"end": 76098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76084,
											"end": 76098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76084,
											"end": 76098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76084,
											"end": 76098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76084,
											"end": 76098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76084,
											"end": 76098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76084,
											"end": 76098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76084,
											"end": 76098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76084,
											"end": 76098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76084,
											"end": 76098,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 76084,
											"end": 76098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 76077,
											"end": 76098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76077,
											"end": 76098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75998,
											"end": 76105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75998,
											"end": 76105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75998,
											"end": 76105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75998,
											"end": 76105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74849,
											"end": 74975,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 74849,
											"end": 74975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74895,
											"end": 74908,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 74927,
											"end": 74968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 74954,
											"end": 74967,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 74927,
											"end": 74932,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3147"
										},
										{
											"begin": 74927,
											"end": 74953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 74927,
											"end": 74953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74927,
											"end": 74968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74927,
											"end": 74968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74927,
											"end": 74968,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 74927,
											"end": 74968,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74927,
											"end": 74968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74927,
											"end": 74968,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 74927,
											"end": 74968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74920,
											"end": 74968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74920,
											"end": 74968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74849,
											"end": 74975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74849,
											"end": 74975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75301,
											"end": 75436,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 75301,
											"end": 75436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75350,
											"end": 75363,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 75382,
											"end": 75429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 75412,
											"end": 75428,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 75382,
											"end": 75390,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3150"
										},
										{
											"begin": 75382,
											"end": 75411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 75382,
											"end": 75411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75382,
											"end": 75429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75382,
											"end": 75429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75382,
											"end": 75429,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 75382,
											"end": 75429,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75382,
											"end": 75429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75382,
											"end": 75429,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 75382,
											"end": 75429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75375,
											"end": 75429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75375,
											"end": 75429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75301,
											"end": 75436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75301,
											"end": 75436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76219,
											"end": 76614,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 76219,
											"end": 76614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76279,
											"end": 76286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76581,
											"end": 76588,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 76581,
											"end": 76595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76589,
											"end": 76594,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76581,
											"end": 76595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76581,
											"end": 76595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76581,
											"end": 76595,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76581,
											"end": 76595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76581,
											"end": 76595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76581,
											"end": 76595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76581,
											"end": 76595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76581,
											"end": 76595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76581,
											"end": 76595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76581,
											"end": 76595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76581,
											"end": 76595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76581,
											"end": 76595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76581,
											"end": 76595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76581,
											"end": 76595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76581,
											"end": 76595,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 76581,
											"end": 76595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76581,
											"end": 76597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76581,
											"end": 76597,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 76581,
											"end": 76597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76581,
											"end": 76597,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 76581,
											"end": 76597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76581,
											"end": 76597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76581,
											"end": 76597,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 76581,
											"end": 76597,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76581,
											"end": 76597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76581,
											"end": 76597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76581,
											"end": 76597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76581,
											"end": 76597,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 76574,
											"end": 76597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76574,
											"end": 76597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76219,
											"end": 76614,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76219,
											"end": 76614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76219,
											"end": 76614,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76219,
											"end": 76614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73745,
											"end": 73921,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 73745,
											"end": 73921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73822,
											"end": 73829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73848,
											"end": 73914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 73881,
											"end": 73901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 73881,
											"end": 73899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 73881,
											"end": 73901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73881,
											"end": 73901,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 73881,
											"end": 73901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73903,
											"end": 73913,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 73848,
											"end": 73880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 73848,
											"end": 73914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73848,
											"end": 73914,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 73848,
											"end": 73914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73841,
											"end": 73914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73841,
											"end": 73914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 73745,
											"end": 73921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 73745,
											"end": 73921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73745,
											"end": 73921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 73745,
											"end": 73921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35796,
											"end": 36056,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 35796,
											"end": 36056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35881,
											"end": 35888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35901,
											"end": 35918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35920,
											"end": 35938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35940,
											"end": 35956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35960,
											"end": 35985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 35971,
											"end": 35975,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35977,
											"end": 35978,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35980,
											"end": 35981,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35983,
											"end": 35984,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35960,
											"end": 35970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 35960,
											"end": 35985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35960,
											"end": 35985,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 35960,
											"end": 35985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35900,
											"end": 35985,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35900,
											"end": 35985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35900,
											"end": 35985,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35900,
											"end": 35985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35900,
											"end": 35985,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35900,
											"end": 35985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 36007,
											"end": 36012,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36014,
											"end": 36022,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 35995,
											"end": 36023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35995,
											"end": 36023,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 35995,
											"end": 36023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36040,
											"end": 36049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36033,
											"end": 36049,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36033,
											"end": 36049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36033,
											"end": 36049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36033,
											"end": 36049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36033,
											"end": 36049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35796,
											"end": 36056,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 35796,
											"end": 36056,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35796,
											"end": 36056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35796,
											"end": 36056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35796,
											"end": 36056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35796,
											"end": 36056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35796,
											"end": 36056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20840,
											"end": 21272,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 20840,
											"end": 21272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20969,
											"end": 20970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20952,
											"end": 20971,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20952,
											"end": 20971,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20952,
											"end": 20957,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20952,
											"end": 20971,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20952,
											"end": 20971,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20952,
											"end": 20971,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20948,
											"end": 21037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 20948,
											"end": 21037,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21023,
											"end": 21024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20994,
											"end": 21026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20994,
											"end": 21026,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 21026,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20994,
											"end": 21026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 21026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 21026,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20994,
											"end": 21026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 21026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 20994,
											"end": 21026,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 21026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 21026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 20994,
											"end": 21026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 21026,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 20994,
											"end": 21026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 21026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20994,
											"end": 21026,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 21026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 21026,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 21026,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 21026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 21026,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20948,
											"end": 21037,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 20948,
											"end": 21037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21069,
											"end": 21070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21050,
											"end": 21071,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21050,
											"end": 21071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21050,
											"end": 21057,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21050,
											"end": 21071,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21050,
											"end": 21071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21050,
											"end": 21071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21046,
											"end": 21136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 21046,
											"end": 21136,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21122,
											"end": 21123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21094,
											"end": 21125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21094,
											"end": 21125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21094,
											"end": 21125,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21094,
											"end": 21125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21094,
											"end": 21125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21094,
											"end": 21125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21094,
											"end": 21125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21094,
											"end": 21125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 21094,
											"end": 21125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21094,
											"end": 21125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21094,
											"end": 21125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 21094,
											"end": 21125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21094,
											"end": 21125,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 21094,
											"end": 21125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21094,
											"end": 21125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21094,
											"end": 21125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21094,
											"end": 21125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21094,
											"end": 21125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21094,
											"end": 21125,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21094,
											"end": 21125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21094,
											"end": 21125,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21046,
											"end": 21136,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 21046,
											"end": 21136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21175,
											"end": 21180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21156,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21145,
											"end": 21163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21157,
											"end": 21162,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21163,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21145,
											"end": 21163,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21163,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21145,
											"end": 21163,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21145,
											"end": 21163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21145,
											"end": 21163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21145,
											"end": 21163,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21164,
											"end": 21171,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21172,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21145,
											"end": 21172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21172,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21145,
											"end": 21172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21172,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21172,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21145,
											"end": 21172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21172,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21172,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21145,
											"end": 21172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21145,
											"end": 21172,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21180,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21145,
											"end": 21180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21194,
											"end": 21203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21266,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 21190,
											"end": 21266,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21240,
											"end": 21247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 21255,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21224,
											"end": 21255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21233,
											"end": 21238,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 21255,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21224,
											"end": 21255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 21255,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21249,
											"end": 21254,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 21255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21224,
											"end": 21255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 21255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 21224,
											"end": 21255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 21255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 21255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 21224,
											"end": 21255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 21255,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 21224,
											"end": 21255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 21255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21224,
											"end": 21255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 21255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 21255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 21255,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 21255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21224,
											"end": 21255,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21190,
											"end": 21266,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 21190,
											"end": 21266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20840,
											"end": 21272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20840,
											"end": 21272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20840,
											"end": 21272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20840,
											"end": 21272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20840,
											"end": 21272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17162,
											"end": 18269,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 17162,
											"end": 18269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17267,
											"end": 17268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17251,
											"end": 17269,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17251,
											"end": 17269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17251,
											"end": 17255,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17251,
											"end": 17269,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17251,
											"end": 17269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17251,
											"end": 17269,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17247,
											"end": 17787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 17247,
											"end": 17787,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17403,
											"end": 17408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17399,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17387,
											"end": 17399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17387,
											"end": 17408,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17408,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17408,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 17387,
											"end": 17408,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 17387,
											"end": 17408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17408,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 17387,
											"end": 17408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17408,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17408,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17387,
											"end": 17408,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17247,
											"end": 17787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 17247,
											"end": 17787,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17247,
											"end": 17787,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 17247,
											"end": 17787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17439,
											"end": 17458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17461,
											"end": 17470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17471,
											"end": 17475,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17476,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17461,
											"end": 17476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17476,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17461,
											"end": 17476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17461,
											"end": 17476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17461,
											"end": 17476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17461,
											"end": 17476,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17461,
											"end": 17476,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17439,
											"end": 17476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17439,
											"end": 17476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17508,
											"end": 17513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17494,
											"end": 17513,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17490,
											"end": 17605,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17490,
											"end": 17605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 17490,
											"end": 17605,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17565,
											"end": 17569,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17571,
											"end": 17582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17584,
											"end": 17589,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17540,
											"end": 17590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17590,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17540,
											"end": 17590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17590,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17540,
											"end": 17590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 17540,
											"end": 17590,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17590,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 17540,
											"end": 17590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17590,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 17540,
											"end": 17590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17540,
											"end": 17590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17590,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17590,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17490,
											"end": 17605,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 17490,
											"end": 17605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17757,
											"end": 17762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17743,
											"end": 17754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17743,
											"end": 17762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17725,
											"end": 17734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17725,
											"end": 17740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17735,
											"end": 17739,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17725,
											"end": 17740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17725,
											"end": 17740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17725,
											"end": 17740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17725,
											"end": 17740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17725,
											"end": 17740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17725,
											"end": 17740,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17725,
											"end": 17740,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17725,
											"end": 17740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17725,
											"end": 17740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17725,
											"end": 17740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17725,
											"end": 17740,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17725,
											"end": 17740,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17725,
											"end": 17740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17725,
											"end": 17740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17725,
											"end": 17740,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17725,
											"end": 17762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17725,
											"end": 17762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17725,
											"end": 17762,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17725,
											"end": 17762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17425,
											"end": 17787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17247,
											"end": 17787,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 17247,
											"end": 17787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17815,
											"end": 17816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17801,
											"end": 17817,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17801,
											"end": 17817,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17817,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17801,
											"end": 17817,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17801,
											"end": 17817,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17797,
											"end": 18222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 17797,
											"end": 18222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17980,
											"end": 17985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17964,
											"end": 17985,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17985,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17985,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17985,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17985,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17964,
											"end": 17985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17797,
											"end": 18222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 17797,
											"end": 18222,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17797,
											"end": 18222,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 17797,
											"end": 18222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18192,
											"end": 18197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18175,
											"end": 18184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18175,
											"end": 18188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18185,
											"end": 18187,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18175,
											"end": 18188,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18175,
											"end": 18188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18175,
											"end": 18188,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18175,
											"end": 18188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18175,
											"end": 18188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18175,
											"end": 18188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18175,
											"end": 18188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18175,
											"end": 18188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18175,
											"end": 18188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18175,
											"end": 18188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18175,
											"end": 18188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18175,
											"end": 18188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18175,
											"end": 18188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18175,
											"end": 18188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18175,
											"end": 18188,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18175,
											"end": 18188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18175,
											"end": 18197,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18175,
											"end": 18197,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18175,
											"end": 18197,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18175,
											"end": 18197,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18175,
											"end": 18197,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18175,
											"end": 18197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18175,
											"end": 18197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18175,
											"end": 18197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18175,
											"end": 18197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18175,
											"end": 18197,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18175,
											"end": 18197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17797,
											"end": 18222,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 17797,
											"end": 18222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18252,
											"end": 18254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18237,
											"end": 18262,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18237,
											"end": 18262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18246,
											"end": 18250,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18237,
											"end": 18262,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18237,
											"end": 18262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18237,
											"end": 18262,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18256,
											"end": 18261,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18237,
											"end": 18262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18237,
											"end": 18262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18237,
											"end": 18262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 18237,
											"end": 18262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18237,
											"end": 18262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18237,
											"end": 18262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 18237,
											"end": 18262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18237,
											"end": 18262,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 18237,
											"end": 18262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18237,
											"end": 18262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18237,
											"end": 18262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18237,
											"end": 18262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18237,
											"end": 18262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18237,
											"end": 18262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18237,
											"end": 18262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18237,
											"end": 18262,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 17162,
											"end": 18269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17162,
											"end": 18269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17162,
											"end": 18269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17162,
											"end": 18269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72941,
											"end": 73120,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 72941,
											"end": 73120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72996,
											"end": 73003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70907,
											"end": 71002,
											"name": "PUSH",
											"source": 0,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 73054,
											"end": 73065,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3142"
										},
										{
											"begin": 73067,
											"end": 73081,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3144"
										},
										{
											"begin": 73083,
											"end": 73096,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 73106,
											"end": 73110,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 73032,
											"end": 73112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73032,
											"end": 73112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 73022,
											"end": 73113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 73022,
											"end": 73113,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 73015,
											"end": 73113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73015,
											"end": 73113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72941,
											"end": 73120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72941,
											"end": 73120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67277,
											"end": 67544,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 67277,
											"end": 67544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67371,
											"end": 67384,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 65282,
											"end": 65348,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 67429,
											"end": 67446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67429,
											"end": 67446,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 67419,
											"end": 67424,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67400,
											"end": 67446,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 67396,
											"end": 67538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 67396,
											"end": 67538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67469,
											"end": 67484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 67478,
											"end": 67483,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67469,
											"end": 67477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 67469,
											"end": 67484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67469,
											"end": 67484,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 67469,
											"end": 67484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67462,
											"end": 67484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67462,
											"end": 67484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67462,
											"end": 67484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 67462,
											"end": 67484,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67396,
											"end": 67538,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 67396,
											"end": 67538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67522,
											"end": 67527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 67515,
											"end": 67527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 67515,
											"end": 67527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67515,
											"end": 67527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67277,
											"end": 67544,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 67277,
											"end": 67544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67277,
											"end": 67544,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 67277,
											"end": 67544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67277,
											"end": 67544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67277,
											"end": 67544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67277,
											"end": 67544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59551,
											"end": 59952,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 59551,
											"end": 59952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59644,
											"end": 59658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59753,
											"end": 59757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59747,
											"end": 59758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59783,
											"end": 59793,
											"name": "PUSH",
											"source": 0,
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 59778,
											"end": 59781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59771,
											"end": 59794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59830,
											"end": 59845,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59823,
											"end": 59827,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59818,
											"end": 59821,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59814,
											"end": 59828,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59807,
											"end": 59846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59882,
											"end": 59892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59875,
											"end": 59879,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 59870,
											"end": 59873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59866,
											"end": 59880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59859,
											"end": 59893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59931,
											"end": 59935,
											"name": "PUSH",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 59926,
											"end": 59929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59916,
											"end": 59936,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59906,
											"end": 59936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59906,
											"end": 59936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59722,
											"end": 59946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59551,
											"end": 59952,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59551,
											"end": 59952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59551,
											"end": 59952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59551,
											"end": 59952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59551,
											"end": 59952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34133,
											"end": 35663,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 34133,
											"end": 35663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34259,
											"end": 34266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34268,
											"end": 34280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35192,
											"end": 35258,
											"name": "PUSH",
											"source": 0,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 35187,
											"end": 35188,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35179,
											"end": 35189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35179,
											"end": 35189,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 35179,
											"end": 35258,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 35175,
											"end": 35339,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35175,
											"end": 35339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 35175,
											"end": 35339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35294,
											"end": 35324,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35326,
											"end": 35327,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35274,
											"end": 35328,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35274,
											"end": 35328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35274,
											"end": 35328,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35274,
											"end": 35328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35274,
											"end": 35328,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35274,
											"end": 35328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35274,
											"end": 35328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 35274,
											"end": 35328,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35175,
											"end": 35339,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 35175,
											"end": 35339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35433,
											"end": 35447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35460,
											"end": 35464,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35466,
											"end": 35467,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35469,
											"end": 35470,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35472,
											"end": 35473,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 35450,
											"end": 35474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35450,
											"end": 35474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35433,
											"end": 35474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35433,
											"end": 35474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35506,
											"end": 35507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35488,
											"end": 35508,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35488,
											"end": 35508,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35488,
											"end": 35494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35488,
											"end": 35508,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35488,
											"end": 35508,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35488,
											"end": 35508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35484,
											"end": 35597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 35484,
											"end": 35597,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35540,
											"end": 35541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35544,
											"end": 35573,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35583,
											"end": 35584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35575,
											"end": 35585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35575,
											"end": 35585,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 35524,
											"end": 35586,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35524,
											"end": 35586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35524,
											"end": 35586,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35524,
											"end": 35586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35524,
											"end": 35586,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35524,
											"end": 35586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35524,
											"end": 35586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35524,
											"end": 35586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 35524,
											"end": 35586,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35484,
											"end": 35597,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 35484,
											"end": 35597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35615,
											"end": 35621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35623,
											"end": 35643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35653,
											"end": 35654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35645,
											"end": 35655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35645,
											"end": 35655,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 35607,
											"end": 35656,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35607,
											"end": 35656,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35607,
											"end": 35656,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35607,
											"end": 35656,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35607,
											"end": 35656,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35607,
											"end": 35656,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35607,
											"end": 35656,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34133,
											"end": 35663,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 34133,
											"end": 35663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34133,
											"end": 35663,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34133,
											"end": 35663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34133,
											"end": 35663,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34133,
											"end": 35663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34133,
											"end": 35663,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34133,
											"end": 35663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34133,
											"end": 35663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34133,
											"end": 35663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34133,
											"end": 35663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36189,
											"end": 36721,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 36189,
											"end": 36721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36284,
											"end": 36304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 36275,
											"end": 36304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36275,
											"end": 36280,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 36275,
											"end": 36304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36275,
											"end": 36304,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36271,
											"end": 36715,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36320,
											"end": 36327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 36271,
											"end": 36715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36380,
											"end": 36409,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 36371,
											"end": 36409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36371,
											"end": 36376,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 36371,
											"end": 36409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36371,
											"end": 36409,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36367,
											"end": 36715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 36367,
											"end": 36715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36432,
											"end": 36455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36455,
											"name": "PUSH",
											"source": 0,
											"value": "F645EEDF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36432,
											"end": 36455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36432,
											"end": 36455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36432,
											"end": 36455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36432,
											"end": 36455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36367,
											"end": 36715,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 36367,
											"end": 36715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36485,
											"end": 36520,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 36476,
											"end": 36520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36476,
											"end": 36481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 36476,
											"end": 36520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36476,
											"end": 36520,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36472,
											"end": 36715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 36472,
											"end": 36715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36579,
											"end": 36587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36571,
											"end": 36588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36571,
											"end": 36588,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 36543,
											"end": 36589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36543,
											"end": 36589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36543,
											"end": 36589,
											"name": "PUSH",
											"source": 0,
											"value": "FCE698F700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36543,
											"end": 36589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36543,
											"end": 36589,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36543,
											"end": 36589,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36543,
											"end": 36589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36543,
											"end": 36589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 36543,
											"end": 36589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36543,
											"end": 36589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36543,
											"end": 36589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 36543,
											"end": 36589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36543,
											"end": 36589,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 36543,
											"end": 36589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36543,
											"end": 36589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36543,
											"end": 36589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36543,
											"end": 36589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36543,
											"end": 36589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36543,
											"end": 36589,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36543,
											"end": 36589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36543,
											"end": 36589,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36472,
											"end": 36715,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 36472,
											"end": 36715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36619,
											"end": 36649,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 36610,
											"end": 36649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36610,
											"end": 36615,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 36610,
											"end": 36649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36610,
											"end": 36649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36606,
											"end": 36715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 36606,
											"end": 36715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36695,
											"end": 36703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36672,
											"end": 36704,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36672,
											"end": 36704,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36672,
											"end": 36704,
											"name": "PUSH",
											"source": 0,
											"value": "D78BCE0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36672,
											"end": 36704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36672,
											"end": 36704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36672,
											"end": 36704,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36672,
											"end": 36704,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36672,
											"end": 36704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 36672,
											"end": 36704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36672,
											"end": 36704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36672,
											"end": 36704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 36672,
											"end": 36704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36672,
											"end": 36704,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 36672,
											"end": 36704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36672,
											"end": 36704,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36672,
											"end": 36704,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36672,
											"end": 36704,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36672,
											"end": 36704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36672,
											"end": 36704,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36672,
											"end": 36704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36672,
											"end": 36704,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36606,
											"end": 36715,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 36606,
											"end": 36715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36189,
											"end": 36721,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 36189,
											"end": 36721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36189,
											"end": 36721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36189,
											"end": 36721,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36189,
											"end": 36721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 65970,
											"end": 66375,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 65970,
											"end": 66375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66029,
											"end": 66042,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 66054,
											"end": 66065,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66068,
											"end": 66084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 66079,
											"end": 66083,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 66068,
											"end": 66078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 66068,
											"end": 66084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66068,
											"end": 66084,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 66068,
											"end": 66084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66054,
											"end": 66084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66054,
											"end": 66084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66172,
											"end": 66189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66203,
											"end": 66205,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 66192,
											"end": 66206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66192,
											"end": 66206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66172,
											"end": 66206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66172,
											"end": 66206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66294,
											"end": 66297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66289,
											"end": 66292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66282,
											"end": 66298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66334,
											"end": 66338,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 66327,
											"end": 66331,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 66322,
											"end": 66325,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 66318,
											"end": 66332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 66311,
											"end": 66339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66365,
											"end": 66368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66358,
											"end": 66368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 66358,
											"end": 66368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66358,
											"end": 66368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66358,
											"end": 66368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65970,
											"end": 66375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 65970,
											"end": 66375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 65970,
											"end": 66375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65970,
											"end": 66375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66447,
											"end": 66692,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 66447,
											"end": 66692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66508,
											"end": 66515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66527,
											"end": 66541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66580,
											"end": 66584,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 66571,
											"end": 66575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 66544,
											"end": 66577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66544,
											"end": 66577,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 66544,
											"end": 66584,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 66527,
											"end": 66584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66527,
											"end": 66584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66607,
											"end": 66609,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 66598,
											"end": 66604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66598,
											"end": 66609,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 66594,
											"end": 66663,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 66594,
											"end": 66663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 66594,
											"end": 66663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66632,
											"end": 66652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66632,
											"end": 66652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 66632,
											"end": 66652,
											"name": "PUSH",
											"source": 0,
											"value": "B3512B0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 66632,
											"end": 66652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66632,
											"end": 66652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66632,
											"end": 66652,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66632,
											"end": 66652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 66632,
											"end": 66652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66632,
											"end": 66652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 66632,
											"end": 66652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66632,
											"end": 66652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 66632,
											"end": 66652,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 66632,
											"end": 66652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66632,
											"end": 66652,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 66594,
											"end": 66663,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 66594,
											"end": 66663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66679,
											"end": 66685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66672,
											"end": 66685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 66672,
											"end": 66685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66672,
											"end": 66685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66447,
											"end": 66692,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 66447,
											"end": 66692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66447,
											"end": 66692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66447,
											"end": 66692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 4897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 5041,
											"end": 5046,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5023,
											"end": 5047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4936,
											"end": 5054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5153,
											"end": 5157,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5193,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5180,
											"end": 5189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 5272,
											"end": 5273,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5270,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5257,
											"end": 5274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5248,
											"end": 5254,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 5204,
											"end": 5275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5396,
											"end": 5398,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5384,
											"end": 5393,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5382,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5371,
											"end": 5394,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5399,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 5402,
											"end": 5481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5522,
											"end": 5523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 5592,
											"end": 5599,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5589,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5572,
											"end": 5581,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5568,
											"end": 5590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 5547,
											"end": 5600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5600,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5493,
											"end": 5610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5659,
											"end": 5666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5699,
											"end": 5765,
											"name": "PUSH",
											"source": 1,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5692,
											"end": 5697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5766,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 5880,
											"end": 5885,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 5863,
											"end": 5886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5858,
											"end": 5861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5851,
											"end": 5887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 6004,
											"end": 6009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 5986,
											"end": 6010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 5984,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 6017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6090,
											"end": 6096,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6124,
											"end": 6129,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6130,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6108,
											"end": 6130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6108,
											"end": 6130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6242,
											"end": 6253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6274,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6264,
											"end": 6283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6311,
											"end": 6314,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6321,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6400,
											"end": 6404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6415,
											"end": 6426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6415,
											"end": 6426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6453,
											"end": 6457,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6448,
											"end": 6451,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6444,
											"end": 6458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6436,
											"end": 6458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6436,
											"end": 6458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 6566,
											"end": 6571,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 6548,
											"end": 6572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6543,
											"end": 6546,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6536,
											"end": 6573,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6471,
											"end": 6579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6654,
											"end": 6664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 6717,
											"end": 6720,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6709,
											"end": 6715,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 6675,
											"end": 6721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6757,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6744,
											"end": 6758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 6758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 6758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6840,
											"end": 6844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6872,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6867,
											"end": 6870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6863,
											"end": 6877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6855,
											"end": 6877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6855,
											"end": 6877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6770,
											"end": 6883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7041,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 7115,
											"end": 7120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 7067,
											"end": 7121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "tag",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 7216,
											"end": 7222,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7211,
											"end": 7214,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 7137,
											"end": 7223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "tag",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7130,
											"end": 7223,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7130,
											"end": 7223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 7297,
											"end": 7302,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 7247,
											"end": 7303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7357,
											"end": 7358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7367,
											"end": 7373,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7364,
											"end": 7365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7374,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7443,
											"end": 7449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 7529,
											"end": 7532,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7514,
											"end": 7527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 7470,
											"end": 7533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7463,
											"end": 7533,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 7463,
											"end": 7533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 7609,
											"end": 7615,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 7556,
											"end": 7616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7616,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7389,
											"end": 7390,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7386,
											"end": 7387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7377,
											"end": 7391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7377,
											"end": 7391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7642,
											"end": 7645,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7635,
											"end": 7645,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7635,
											"end": 7645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7043,
											"end": 7651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7043,
											"end": 7651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7043,
											"end": 7651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 7651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8044,
											"end": 8047,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8033,
											"end": 8042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8021,
											"end": 8048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8021,
											"end": 8048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 8124,
											"end": 8125,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8122,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8109,
											"end": 8126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8100,
											"end": 8106,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 8058,
											"end": 8127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8174,
											"end": 8183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8168,
											"end": 8172,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8164,
											"end": 8184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8159,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8148,
											"end": 8157,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8144,
											"end": 8162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8137,
											"end": 8185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 8275,
											"end": 8279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8272,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 8202,
											"end": 8280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8194,
											"end": 8280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8194,
											"end": 8280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8327,
											"end": 8336,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8321,
											"end": 8325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8337,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8314,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8301,
											"end": 8310,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8297,
											"end": 8315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8290,
											"end": 8338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 8428,
											"end": 8432,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8425,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 8355,
											"end": 8433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8347,
											"end": 8433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8347,
											"end": 8433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 8511,
											"end": 8513,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8500,
											"end": 8509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8496,
											"end": 8514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8493,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 8443,
											"end": 8515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 8593,
											"end": 8596,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8582,
											"end": 8591,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8578,
											"end": 8597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8569,
											"end": 8575,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 8525,
											"end": 8598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 8676,
											"end": 8679,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 8665,
											"end": 8674,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8661,
											"end": 8680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8652,
											"end": 8658,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 8608,
											"end": 8681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8729,
											"end": 8738,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8723,
											"end": 8727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8719,
											"end": 8739,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8713,
											"end": 8716,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 8702,
											"end": 8711,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 8717,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8691,
											"end": 8740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 8860,
											"end": 8864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8851,
											"end": 8857,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 8757,
											"end": 8865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8749,
											"end": 8865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8749,
											"end": 8865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8971,
											"end": 8975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9009,
											"end": 9011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8998,
											"end": 9007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8994,
											"end": 9012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8986,
											"end": 9012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8986,
											"end": 9012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 9090,
											"end": 9091,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9079,
											"end": 9088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9075,
											"end": 9092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9072,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 9022,
											"end": 9093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8878,
											"end": 9100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9106,
											"end": 9224,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 9106,
											"end": 9224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 9193,
											"end": 9198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 9177,
											"end": 9199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9199,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 9177,
											"end": 9199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9170,
											"end": 9175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9167,
											"end": 9200,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 9157,
											"end": 9218,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9215,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9211,
											"end": 9212,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9204,
											"end": 9216,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9218,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 9157,
											"end": 9218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9106,
											"end": 9224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9106,
											"end": 9224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9274,
											"end": 9279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9312,
											"end": 9318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9299,
											"end": 9319,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9319,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9328,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 9353,
											"end": 9358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9328,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 9328,
											"end": 9359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9328,
											"end": 9359,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 9328,
											"end": 9359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9230,
											"end": 9365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9371,
											"end": 9493,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 9371,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 9462,
											"end": 9467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 9444,
											"end": 9468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9468,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 9444,
											"end": 9468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9437,
											"end": 9442,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9434,
											"end": 9469,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9424,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 9424,
											"end": 9487,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9483,
											"end": 9484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9480,
											"end": 9481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9473,
											"end": 9485,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9424,
											"end": 9487,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 9424,
											"end": 9487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9371,
											"end": 9493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9371,
											"end": 9493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9545,
											"end": 9550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9583,
											"end": 9589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9570,
											"end": 9590,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9561,
											"end": 9590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9561,
											"end": 9590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9599,
											"end": 9632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 9626,
											"end": 9631,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9599,
											"end": 9632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 9599,
											"end": 9632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9599,
											"end": 9632,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 9599,
											"end": 9632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9499,
											"end": 9638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9755,
											"end": 9761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9763,
											"end": 9769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9779,
											"end": 9785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9787,
											"end": 9793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9801,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9803,
											"end": 9809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9852,
											"end": 9855,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9831,
											"end": 9838,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 9827,
											"end": 9850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9823,
											"end": 9856,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 9820,
											"end": 9940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 9859,
											"end": 9938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 9859,
											"end": 9938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9938,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 9859,
											"end": 9938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9940,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 9820,
											"end": 9940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9979,
											"end": 9980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10004,
											"end": 10057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 10049,
											"end": 10056,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10046,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10029,
											"end": 10038,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10025,
											"end": 10047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10004,
											"end": 10057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 10004,
											"end": 10057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10004,
											"end": 10057,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 10004,
											"end": 10057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9994,
											"end": 10057,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 9994,
											"end": 10057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9950,
											"end": 10067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10106,
											"end": 10108,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10132,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 10177,
											"end": 10184,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10168,
											"end": 10174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10157,
											"end": 10166,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 10132,
											"end": 10185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10185,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 10132,
											"end": 10185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10122,
											"end": 10185,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 10122,
											"end": 10185,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10260,
											"end": 10313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 10305,
											"end": 10312,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10296,
											"end": 10302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10285,
											"end": 10294,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10281,
											"end": 10303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10260,
											"end": 10313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 10260,
											"end": 10313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10260,
											"end": 10313,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 10260,
											"end": 10313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10250,
											"end": 10313,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 10250,
											"end": 10313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10205,
											"end": 10323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10362,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10388,
											"end": 10441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 10433,
											"end": 10440,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10424,
											"end": 10430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10413,
											"end": 10422,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10388,
											"end": 10441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 10388,
											"end": 10441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10388,
											"end": 10441,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 10388,
											"end": 10441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10378,
											"end": 10441,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10378,
											"end": 10441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10490,
											"end": 10493,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10517,
											"end": 10568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 10560,
											"end": 10567,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10551,
											"end": 10557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10549,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10517,
											"end": 10568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 10517,
											"end": 10568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10517,
											"end": 10568,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 10517,
											"end": 10568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10507,
											"end": 10568,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10507,
											"end": 10568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10461,
											"end": 10578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10620,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 10644,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 10689,
											"end": 10696,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10680,
											"end": 10686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10669,
											"end": 10678,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10665,
											"end": 10687,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10644,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 10644,
											"end": 10697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10644,
											"end": 10697,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 10644,
											"end": 10697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10634,
											"end": 10697,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10634,
											"end": 10697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10588,
											"end": 10707,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10746,
											"end": 10749,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 10773,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 10818,
											"end": 10825,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10809,
											"end": 10815,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10798,
											"end": 10807,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10794,
											"end": 10816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10773,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 10773,
											"end": 10826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10773,
											"end": 10826,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 10773,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10763,
											"end": 10826,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10763,
											"end": 10826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10717,
											"end": 10836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10925,
											"end": 10931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10974,
											"end": 10976,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10962,
											"end": 10971,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10953,
											"end": 10960,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10949,
											"end": 10972,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10945,
											"end": 10977,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10942,
											"end": 11061,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10942,
											"end": 11061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 10942,
											"end": 11061,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10980,
											"end": 11059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 10980,
											"end": 11059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 10980,
											"end": 11059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10980,
											"end": 11059,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 10980,
											"end": 11059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10942,
											"end": 11061,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 10942,
											"end": 11061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11100,
											"end": 11101,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11125,
											"end": 11178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 11170,
											"end": 11177,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11167,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11150,
											"end": 11159,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11146,
											"end": 11168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11125,
											"end": 11178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 11125,
											"end": 11178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11125,
											"end": 11178,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 11125,
											"end": 11178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11115,
											"end": 11178,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11115,
											"end": 11178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11071,
											"end": 11188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11227,
											"end": 11229,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11253,
											"end": 11306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 11298,
											"end": 11305,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11289,
											"end": 11295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11278,
											"end": 11287,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11274,
											"end": 11296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11253,
											"end": 11306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 11253,
											"end": 11306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11253,
											"end": 11306,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 11253,
											"end": 11306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11306,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11198,
											"end": 11316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11329,
											"end": 11509,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 11329,
											"end": 11509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11377,
											"end": 11454,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11374,
											"end": 11375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11367,
											"end": 11455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11474,
											"end": 11478,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 11471,
											"end": 11472,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11464,
											"end": 11479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11498,
											"end": 11502,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11495,
											"end": 11496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11488,
											"end": 11503,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11515,
											"end": 11835,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 11515,
											"end": 11835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11559,
											"end": 11565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11596,
											"end": 11597,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11590,
											"end": 11594,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11586,
											"end": 11598,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11576,
											"end": 11598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11576,
											"end": 11598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11643,
											"end": 11644,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11637,
											"end": 11641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11645,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11664,
											"end": 11682,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11654,
											"end": 11735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 11654,
											"end": 11735,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11720,
											"end": 11724,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 11712,
											"end": 11718,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11708,
											"end": 11725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11698,
											"end": 11725,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11698,
											"end": 11725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11654,
											"end": 11735,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 11654,
											"end": 11735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11782,
											"end": 11784,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11774,
											"end": 11780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11771,
											"end": 11785,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11751,
											"end": 11769,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11748,
											"end": 11786,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11745,
											"end": 11829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 11745,
											"end": 11829,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11801,
											"end": 11819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 11801,
											"end": 11819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 11801,
											"end": 11819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11801,
											"end": 11819,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 11801,
											"end": 11819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11745,
											"end": 11829,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 11745,
											"end": 11829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11566,
											"end": 11835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11515,
											"end": 11835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11515,
											"end": 11835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11515,
											"end": 11835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11515,
											"end": 11835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11841,
											"end": 12021,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 11841,
											"end": 12021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11889,
											"end": 11966,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11886,
											"end": 11887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11879,
											"end": 11967,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 11990,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 11983,
											"end": 11984,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11976,
											"end": 11991,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12010,
											"end": 12014,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12007,
											"end": 12008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12000,
											"end": 12015,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12260,
											"end": 12264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12298,
											"end": 12301,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 12287,
											"end": 12296,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12302,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12275,
											"end": 12302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12275,
											"end": 12302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12312,
											"end": 12383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 12380,
											"end": 12381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12369,
											"end": 12378,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12365,
											"end": 12382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12356,
											"end": 12362,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 12312,
											"end": 12383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 12312,
											"end": 12383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12312,
											"end": 12383,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 12312,
											"end": 12383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 12461,
											"end": 12463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12450,
											"end": 12459,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12446,
											"end": 12464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12437,
											"end": 12443,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 12393,
											"end": 12465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12465,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 12393,
											"end": 12465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12475,
											"end": 12547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 12543,
											"end": 12545,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12532,
											"end": 12541,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12528,
											"end": 12546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12519,
											"end": 12525,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12475,
											"end": 12547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 12475,
											"end": 12547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12475,
											"end": 12547,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 12475,
											"end": 12547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12557,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 12625,
											"end": 12627,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12614,
											"end": 12623,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12610,
											"end": 12628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12601,
											"end": 12607,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12557,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 12557,
											"end": 12629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12557,
											"end": 12629,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 12557,
											"end": 12629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12639,
											"end": 12712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 12707,
											"end": 12710,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 12696,
											"end": 12705,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12692,
											"end": 12711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12683,
											"end": 12689,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12639,
											"end": 12712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 12639,
											"end": 12712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12639,
											"end": 12712,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 12639,
											"end": 12712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12722,
											"end": 12795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 12790,
											"end": 12793,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 12779,
											"end": 12788,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12775,
											"end": 12794,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12766,
											"end": 12772,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12722,
											"end": 12795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 12722,
											"end": 12795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12722,
											"end": 12795,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 12722,
											"end": 12795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 13140,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 12808,
											"end": 13140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12929,
											"end": 12933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12967,
											"end": 12969,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12956,
											"end": 12965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12944,
											"end": 12970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12944,
											"end": 12970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12980,
											"end": 13051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 13048,
											"end": 13049,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13037,
											"end": 13046,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13033,
											"end": 13050,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13024,
											"end": 13030,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12980,
											"end": 13051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 12980,
											"end": 13051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12980,
											"end": 13051,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 12980,
											"end": 13051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 13129,
											"end": 13131,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13118,
											"end": 13127,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13105,
											"end": 13111,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 13061,
											"end": 13133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13133,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 13061,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 13140,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 13140,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 13140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 13140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 13140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 13140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13295,
											"end": 13299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13333,
											"end": 13335,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13322,
											"end": 13331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13318,
											"end": 13336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13310,
											"end": 13336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13310,
											"end": 13336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13346,
											"end": 13417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 13414,
											"end": 13415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13403,
											"end": 13412,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13399,
											"end": 13416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13390,
											"end": 13396,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13346,
											"end": 13417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 13346,
											"end": 13417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13346,
											"end": 13417,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 13346,
											"end": 13417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13427,
											"end": 13499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 13495,
											"end": 13497,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13484,
											"end": 13493,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13480,
											"end": 13498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13471,
											"end": 13477,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13427,
											"end": 13499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 13427,
											"end": 13499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13427,
											"end": 13499,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 13427,
											"end": 13499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13509,
											"end": 13581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 13577,
											"end": 13579,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13566,
											"end": 13575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13562,
											"end": 13580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13553,
											"end": 13559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13509,
											"end": 13581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 13509,
											"end": 13581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13509,
											"end": 13581,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 13509,
											"end": 13581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13594,
											"end": 13774,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 13594,
											"end": 13774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13642,
											"end": 13719,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13639,
											"end": 13640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13632,
											"end": 13720,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13739,
											"end": 13743,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 13736,
											"end": 13737,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13729,
											"end": 13744,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13763,
											"end": 13767,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13760,
											"end": 13761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13753,
											"end": 13768,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13820,
											"end": 13823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13839,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 13857,
											"end": 13858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13839,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 13839,
											"end": 13859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13839,
											"end": 13859,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 13839,
											"end": 13859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13834,
											"end": 13859,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13834,
											"end": 13859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13873,
											"end": 13893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 13891,
											"end": 13892,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13873,
											"end": 13893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 13873,
											"end": 13893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13873,
											"end": 13893,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 13873,
											"end": 13893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13868,
											"end": 13893,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13868,
											"end": 13893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13916,
											"end": 13917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13913,
											"end": 13914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13909,
											"end": 13918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13902,
											"end": 13918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13902,
											"end": 13918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13937,
											"end": 13940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13934,
											"end": 13935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13931,
											"end": 13941,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13928,
											"end": 13964,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13928,
											"end": 13964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 13928,
											"end": 13964,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 13944,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 13944,
											"end": 13962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13962,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 13944,
											"end": 13962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13928,
											"end": 13964,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 13928,
											"end": 13964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13780,
											"end": 13971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14182,
											"end": 14186,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14220,
											"end": 14223,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 14209,
											"end": 14218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14205,
											"end": 14224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14197,
											"end": 14224,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14197,
											"end": 14224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14234,
											"end": 14305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 14302,
											"end": 14303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14291,
											"end": 14300,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14287,
											"end": 14304,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14278,
											"end": 14284,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14234,
											"end": 14305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 14234,
											"end": 14305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14234,
											"end": 14305,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 14234,
											"end": 14305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 14383,
											"end": 14385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14372,
											"end": 14381,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14368,
											"end": 14386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14359,
											"end": 14365,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 14315,
											"end": 14387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14387,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 14315,
											"end": 14387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14397,
											"end": 14469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 14465,
											"end": 14467,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14454,
											"end": 14463,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14450,
											"end": 14468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14441,
											"end": 14447,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14397,
											"end": 14469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 14397,
											"end": 14469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14397,
											"end": 14469,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 14397,
											"end": 14469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14479,
											"end": 14551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 14547,
											"end": 14549,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14536,
											"end": 14545,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14532,
											"end": 14550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14523,
											"end": 14529,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14479,
											"end": 14551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 14479,
											"end": 14551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14479,
											"end": 14551,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 14479,
											"end": 14551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14561,
											"end": 14634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 14629,
											"end": 14632,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14618,
											"end": 14627,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14614,
											"end": 14633,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14605,
											"end": 14611,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14561,
											"end": 14634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 14561,
											"end": 14634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14561,
											"end": 14634,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 14561,
											"end": 14634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14820,
											"end": 14824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14858,
											"end": 14861,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14847,
											"end": 14856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14843,
											"end": 14862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14835,
											"end": 14862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14835,
											"end": 14862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14872,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 14940,
											"end": 14941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14929,
											"end": 14938,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14925,
											"end": 14942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14916,
											"end": 14922,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14872,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 14872,
											"end": 14943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14872,
											"end": 14943,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 14872,
											"end": 14943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14953,
											"end": 15021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 15017,
											"end": 15019,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15006,
											"end": 15015,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15002,
											"end": 15020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14993,
											"end": 14999,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14953,
											"end": 15021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 14953,
											"end": 15021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14953,
											"end": 15021,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 14953,
											"end": 15021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15031,
											"end": 15103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 15099,
											"end": 15101,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15088,
											"end": 15097,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15084,
											"end": 15102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15075,
											"end": 15081,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15031,
											"end": 15103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 15031,
											"end": 15103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15031,
											"end": 15103,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 15031,
											"end": 15103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15113,
											"end": 15185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 15181,
											"end": 15183,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15170,
											"end": 15179,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15166,
											"end": 15184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15157,
											"end": 15163,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15113,
											"end": 15185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 15113,
											"end": 15185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15113,
											"end": 15185,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 15113,
											"end": 15185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15198,
											"end": 15378,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 15198,
											"end": 15378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15246,
											"end": 15323,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15243,
											"end": 15244,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15236,
											"end": 15324,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15343,
											"end": 15347,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 15340,
											"end": 15341,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15333,
											"end": 15348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15367,
											"end": 15371,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15364,
											"end": 15365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15357,
											"end": 15372,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Token_RY_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"owner()": "8da5cb5b",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"orc@org.com\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token_RY_flattened.sol\":\"Reyes\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token_RY_flattened.sol\":{\"keccak256\":\"0x3277a6b4e22b080ba3cb68cc4a976d0354efc6d032889f1b67d92ba9c63a0a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://181b37f6b11531a7e4913184048a38f15db33033acc02b9808ae692ed4a340aa\",\"dweb:/ipfs/QmYxUMMzfasKoLuRCxie5PWMqUUBBRrAZJQbAXa6A8zkbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "Token_RY_flattened.sol:Reyes",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "Token_RY_flattened.sol:Reyes",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "Token_RY_flattened.sol:Reyes",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "Token_RY_flattened.sol:Reyes",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "Token_RY_flattened.sol:Reyes",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 777,
								"contract": "Token_RY_flattened.sol:Reyes",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 3152,
								"contract": "Token_RY_flattened.sol:Reyes",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 3154,
								"contract": "Token_RY_flattened.sol:Reyes",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "7",
								"type": "t_string_storage"
							},
							{
								"astId": 3355,
								"contract": "Token_RY_flattened.sol:Reyes",
								"label": "_nonces",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ShortStrings": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Token_RY_flattened.sol\":65147:68200  library ShortStrings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Token_RY_flattened.sol\":65147:68200  library ShortStrings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d2fb029f2003d7b33911349a9df31bc082558fefb34ff036307f7607d6a0b71064736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d2fb029f2003d7b33911349a9df31bc082558fefb34ff036307f7607d6a0b71064736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xFB MUL SWAP16 KECCAK256 SUB 0xD7 0xB3 CODECOPY GT CALLVALUE SWAP11 SWAP14 RETURN SHL 0xC0 DUP3 SSTORE DUP16 0xEF 0xB3 0x4F CREATE CALLDATASIZE ADDRESS PUSH32 0x7607D6A0B71064736F6C63430008180033000000000000000000000000000000 ",
							"sourceMap": "65147:3053:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d2fb029f2003d7b33911349a9df31bc082558fefb34ff036307f7607d6a0b71064736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xFB MUL SWAP16 KECCAK256 SUB 0xD7 0xB3 CODECOPY GT CALLVALUE SWAP11 SWAP14 RETURN SHL 0xC0 DUP3 SSTORE DUP16 0xEF 0xB3 0x4F CREATE CALLDATASIZE ADDRESS PUSH32 0x7607D6A0B71064736F6C63430008180033000000000000000000000000000000 ",
							"sourceMap": "65147:3053:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"byteLength(ShortString)": "infinite",
								"byteLengthWithFallback(ShortString,string storage pointer)": "infinite",
								"toShortString(string memory)": "infinite",
								"toShortStringWithFallback(string memory,string storage pointer)": "infinite",
								"toString(ShortString)": "infinite",
								"toStringWithFallback(ShortString,string storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 65147,
									"end": 68200,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 65147,
									"end": 68200,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d2fb029f2003d7b33911349a9df31bc082558fefb34ff036307f7607d6a0b71064736f6c63430008180033",
									".code": [
										{
											"begin": 65147,
											"end": 68200,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 65147,
											"end": 68200,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 65147,
											"end": 68200,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65147,
											"end": 68200,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 65147,
											"end": 68200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 65147,
											"end": 68200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 65147,
											"end": 68200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65147,
											"end": 68200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65147,
											"end": 68200,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Token_RY_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token_RY_flattened.sol\":\"ShortStrings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token_RY_flattened.sol\":{\"keccak256\":\"0x3277a6b4e22b080ba3cb68cc4a976d0354efc6d032889f1b67d92ba9c63a0a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://181b37f6b11531a7e4913184048a38f15db33033acc02b9808ae692ed4a340aa\",\"dweb:/ipfs/QmYxUMMzfasKoLuRCxie5PWMqUUBBRrAZJQbAXa6A8zkbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Token_RY_flattened.sol\":52112:53159  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Token_RY_flattened.sol\":52112:53159  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cc83990128c0807aca8e4189452405e26265bfe1d6b64f7ddf00b4bf91abff1064736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cc83990128c0807aca8e4189452405e26265bfe1d6b64f7ddf00b4bf91abff1064736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC DUP4 SWAP10 ADD 0x28 0xC0 DUP1 PUSH27 0xCA8E4189452405E26265BFE1D6B64F7DDF00B4BF91ABFF1064736F PUSH13 0x63430008180033000000000000 ",
							"sourceMap": "52112:1047:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cc83990128c0807aca8e4189452405e26265bfe1d6b64f7ddf00b4bf91abff1064736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC DUP4 SWAP10 ADD 0x28 0xC0 DUP1 PUSH27 0xCA8E4189452405E26265BFE1D6B64F7DDF00B4BF91ABFF1064736F PUSH13 0x63430008180033000000000000 ",
							"sourceMap": "52112:1047:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 52112,
									"end": 53159,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 52112,
									"end": 53159,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cc83990128c0807aca8e4189452405e26265bfe1d6b64f7ddf00b4bf91abff1064736f6c63430008180033",
									".code": [
										{
											"begin": 52112,
											"end": 53159,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 52112,
											"end": 53159,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 52112,
											"end": 53159,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 52112,
											"end": 53159,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 52112,
											"end": 53159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52112,
											"end": 53159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52112,
											"end": 53159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52112,
											"end": 53159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52112,
											"end": 53159,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Token_RY_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token_RY_flattened.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token_RY_flattened.sol\":{\"keccak256\":\"0x3277a6b4e22b080ba3cb68cc4a976d0354efc6d032889f1b67d92ba9c63a0a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://181b37f6b11531a7e4913184048a38f15db33033acc02b9808ae692ed4a340aa\",\"dweb:/ipfs/QmYxUMMzfasKoLuRCxie5PWMqUUBBRrAZJQbAXa6A8zkbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Token_RY_flattened.sol\":61226:63911  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Token_RY_flattened.sol\":61226:63911  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204376af6dcd5d64674392d7daafc8d2bae9838c03b2a06307fa5495cdba30e64364736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204376af6dcd5d64674392d7daafc8d2bae9838c03b2a06307fa5495cdba30e64364736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER PUSH23 0xAF6DCD5D64674392D7DAAFC8D2BAE9838C03B2A06307FA SLOAD SWAP6 0xCD 0xBA ADDRESS 0xE6 NUMBER PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "61226:2685:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204376af6dcd5d64674392d7daafc8d2bae9838c03b2a06307fa5495cdba30e64364736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER PUSH23 0xAF6DCD5D64674392D7DAAFC8D2BAE9838C03B2A06307FA SLOAD SWAP6 0xCD 0xBA ADDRESS 0xE6 NUMBER PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "61226:2685:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61226,
									"end": 63911,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61226,
									"end": 63911,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204376af6dcd5d64674392d7daafc8d2bae9838c03b2a06307fa5495cdba30e64364736f6c63430008180033",
									".code": [
										{
											"begin": 61226,
											"end": 63911,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 61226,
											"end": 63911,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 61226,
											"end": 63911,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61226,
											"end": 63911,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61226,
											"end": 63911,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61226,
											"end": 63911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61226,
											"end": 63911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61226,
											"end": 63911,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61226,
											"end": 63911,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Token_RY_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token_RY_flattened.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token_RY_flattened.sol\":{\"keccak256\":\"0x3277a6b4e22b080ba3cb68cc4a976d0354efc6d032889f1b67d92ba9c63a0a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://181b37f6b11531a7e4913184048a38f15db33033acc02b9808ae692ed4a340aa\",\"dweb:/ipfs/QmYxUMMzfasKoLuRCxie5PWMqUUBBRrAZJQbAXa6A8zkbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Token_RY_flattened.sol\":53346:56193  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Token_RY_flattened.sol\":53346:56193  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220132bf4228f68ca562850bf9eecaf874d6a1da9785d524683daa4270ebfc6246264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220132bf4228f68ca562850bf9eecaf874d6a1da9785d524683daa4270ebfc6246264736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0x2B DELEGATECALL 0x22 DUP16 PUSH9 0xCA562850BF9EECAF87 0x4D PUSH11 0x1DA9785D524683DAA4270E 0xBF 0xC6 0x24 PUSH3 0x64736F PUSH13 0x63430008180033000000000000 ",
							"sourceMap": "53346:2847:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220132bf4228f68ca562850bf9eecaf874d6a1da9785d524683daa4270ebfc6246264736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0x2B DELEGATECALL 0x22 DUP16 PUSH9 0xCA562850BF9EECAF87 0x4D PUSH11 0x1DA9785D524683DAA4270E 0xBF 0xC6 0x24 PUSH3 0x64736F PUSH13 0x63430008180033000000000000 ",
							"sourceMap": "53346:2847:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 53346,
									"end": 56193,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 53346,
									"end": 56193,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220132bf4228f68ca562850bf9eecaf874d6a1da9785d524683daa4270ebfc6246264736f6c63430008180033",
									".code": [
										{
											"begin": 53346,
											"end": 56193,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 53346,
											"end": 56193,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 53346,
											"end": 56193,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 53346,
											"end": 56193,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 53346,
											"end": 56193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53346,
											"end": 56193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53346,
											"end": 56193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53346,
											"end": 56193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53346,
											"end": 56193,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Token_RY_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token_RY_flattened.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Token_RY_flattened.sol\":{\"keccak256\":\"0x3277a6b4e22b080ba3cb68cc4a976d0354efc6d032889f1b67d92ba9c63a0a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://181b37f6b11531a7e4913184048a38f15db33033acc02b9808ae692ed4a340aa\",\"dweb:/ipfs/QmYxUMMzfasKoLuRCxie5PWMqUUBBRrAZJQbAXa6A8zkbW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Token_RY_flattened.sol": {
				"ast": {
					"absolutePath": "Token_RY_flattened.sol",
					"exportedSymbols": {
						"Context": [
							129
						],
						"ECDSA": [
							1298
						],
						"EIP712": [
							3342
						],
						"ERC20": [
							771
						],
						"ERC20Permit": [
							3552
						],
						"IERC1155Errors": [
							265
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							100
						],
						"IERC20Permit": [
							951
						],
						"IERC5267": [
							3123
						],
						"IERC721Errors": [
							218
						],
						"Math": [
							2351
						],
						"MessageHashUtils": [
							2776
						],
						"Nonces": [
							3409
						],
						"Ownable": [
							916
						],
						"Reyes": [
							3603
						],
						"ShortString": [
							2888
						],
						"ShortStrings": [
							3099
						],
						"SignedMath": [
							2455
						],
						"StorageSlot": [
							2885
						],
						"Strings": [
							2705
						]
					},
					"id": 3604,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "163:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "189:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "270:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "283:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "452:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "477:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "461:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "499:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "483:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "511:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "503:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "460:57:0"
									},
									"src": "446:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "524:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "683:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "708:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "692:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "731:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "715:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "748:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "740:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "691:63:0"
									},
									"src": "677:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "761:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "840:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "851:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "877:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:9:0"
									},
									"scope": 77,
									"src": "831:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "892:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "977:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "995:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "987:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "986:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1027:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:9:0"
									},
									"scope": 77,
									"src": "968:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1042:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1269:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1286:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1278:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1278:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1298:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1290:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1323:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1323:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:6:0"
									},
									"scope": 77,
									"src": "1260:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1335:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1613:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1631:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1623:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1646:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1638:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1678:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1677:9:0"
									},
									"scope": 77,
									"src": "1604:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1693:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2374:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2390:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2382:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2382:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2407:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2399:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2381:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2432:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2432:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2431:6:0"
									},
									"scope": 77,
									"src": "2365:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2444:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2755:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2776:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2768:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2790:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2782:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2802:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2794:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2794:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2827:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2827:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2826:6:0"
									},
									"scope": 77,
									"src": "2746:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3604,
							"src": "260:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3007:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3149:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3149:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3149:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3034:86:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3131:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3162:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3230:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3234:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3260:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3260:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3259:15:0"
									},
									"scope": 100,
									"src": "3221:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3281:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3351:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3357:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3383:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3383:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3382:15:0"
									},
									"scope": 100,
									"src": "3342:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3404:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3483:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3491:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3517:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3517:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:7:0"
									},
									"scope": 100,
									"src": "3474:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3604,
							"src": "3121:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3650:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3676:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "Context",
							"nameLocation": "4191:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4267:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4284:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4288:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4284:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4277:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4214:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4224:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4258:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:9:0"
									},
									"scope": 129,
									"src": "4205:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4374:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4391:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4395:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4391:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4384:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4316:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4324:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4358:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4358:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4357:16:0"
									},
									"scope": 129,
									"src": "4307:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4484:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4501:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "4494:8:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4421:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4441:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4475:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4474:9:0"
									},
									"scope": 129,
									"src": "4412:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3604,
							"src": "4173:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4658:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "4684:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "4834:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4853:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5173:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5206:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5198:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5198:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5222:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5214:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5214:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5239:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5231:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5231:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5197:49:0"
									},
									"src": "5167:80:0"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "5253:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "5416:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5443:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5435:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5435:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5434:16:0"
									},
									"src": "5410:41:0"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5457:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5627:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5656:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5648:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5648:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5647:18:0"
									},
									"src": "5621:45:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5672:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "6028:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6063:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6055:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6055:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6080:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6072:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6072:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6099:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6091:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6054:52:0"
									},
									"src": "6022:85:0"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6113:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6298:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6327:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6319:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6319:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6318:18:0"
									},
									"src": "6292:45:0"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6343:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6549:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6577:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6569:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6569:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6568:17:0"
									},
									"src": "6543:43:0"
								}
							],
							"scope": 3604,
							"src": "4824:1764:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "6590:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC721Errors",
							"nameLocation": "6742:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6762:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 176,
									"name": "ERC721InvalidOwner",
									"nameLocation": "6992:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7019:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "7011:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7011:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7010:15:0"
									},
									"src": "6986:40:0"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "7032:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 181,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7175:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7206:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "7198:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7197:17:0"
									},
									"src": "7169:46:0"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "7221:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 190,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7521:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7550:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7542:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7542:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7566:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7558:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7583:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7575:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7541:48:0"
									},
									"src": "7515:75:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "7596:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 195,
									"name": "ERC721InvalidSender",
									"nameLocation": "7759:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7787:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7779:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7779:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7778:16:0"
									},
									"src": "7753:42:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "7801:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 200,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "7971:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "8001:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "7993:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7992:18:0"
									},
									"src": "7965:46:0"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "8017:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 207,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8275:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8310:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8302:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8302:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8328:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8320:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8301:35:0"
									},
									"src": "8269:68:0"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8343:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 212,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8528:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8558:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8550:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8549:18:0"
									},
									"src": "8522:46:0"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8574:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 217,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8782:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8812:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "8804:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8804:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8803:18:0"
									},
									"src": "8776:46:0"
								}
							],
							"scope": 3604,
							"src": "6732:2092:0",
							"usedErrors": [
								176,
								181,
								190,
								195,
								200,
								207,
								212,
								217
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "8826:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IERC1155Errors",
							"nameLocation": "8980:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "9001:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 230,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9373:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9408:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9400:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9400:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9424:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9416:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9416:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9441:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9433:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9433:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9457:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9449:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9399:66:0"
									},
									"src": "9367:99:0"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9472:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 235,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9635:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9664:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "9656:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9655:16:0"
									},
									"src": "9629:43:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "9678:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 240,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "9848:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9879:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "9871:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9870:18:0"
									},
									"src": "9842:47:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "9895:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 247,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10162:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10199:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10191:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10191:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10217:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10209:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10209:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10190:33:0"
									},
									"src": "10156:68:0"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "10230:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 252,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10415:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10446:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10438:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10438:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10437:18:0"
									},
									"src": "10409:47:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10462:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 257,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10670:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10701:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "10693:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10692:18:0"
									},
									"src": "10664:47:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "10717:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 264,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "11008:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11042:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11034:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11061:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11053:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11053:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11033:41:0"
									},
									"src": "11002:73:0"
								}
							],
							"scope": 3604,
							"src": "8970:2107:0",
							"usedErrors": [
								230,
								235,
								240,
								247,
								252,
								257,
								264
							],
							"usedEvents": []
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11209:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12319:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "12319:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12319:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12328:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "12328:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12328:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12336:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "12336:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12336:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12352:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "12352:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12352:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11239:1052:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20",
							"nameLocation": "12310:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12415:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12371:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "12387:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12379:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12371:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12398:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12503:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12431:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "account",
										"keyNameLocation": "12447:7:0",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12439:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12431:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "spender",
											"keyNameLocation": "12474:7:0",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12466:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12458:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12485:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12537:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12521:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12521:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12571:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12556:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12556:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12597:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12582:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12582:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12843:57:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12853:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12861:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12853:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12853:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12876:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12886:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12876:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12876:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12611:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12813:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12799:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12799:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12834:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12820:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12820:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12798:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12843:0:0"
									},
									"scope": 771,
									"src": "12787:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "13025:29:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "13042:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "13035:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "12906:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12974:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12978:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "13010:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13010:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13009:15:0"
									},
									"scope": 771,
									"src": "12965:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "13229:31:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "13246:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "13239:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "13060:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "13176:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13182:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "13214:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13214:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13213:15:0"
									},
									"scope": 771,
									"src": "13167:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "13949:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13966:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "13959:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "13266:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13902:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13910:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "13942:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13942:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13941:7:0"
									},
									"scope": 771,
									"src": "13893:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "14096:36:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "14113:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "14106:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "13981:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "14044:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14055:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "14087:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14087:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14086:9:0"
									},
									"scope": 771,
									"src": "14035:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "14264:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "14281:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "14291:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14281:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "14274:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "14138:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "14199:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14217:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14209:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14209:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14208:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "14255:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14255:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14254:9:0"
									},
									"scope": 771,
									"src": "14190:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "14576:103:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14594:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "14586:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14586:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14602:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14602:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14586:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "14634:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14641:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "14645:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "14624:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14624:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "14624:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14668:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 379,
												"nodeType": "Return",
												"src": "14661:11:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "14312:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14510:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14527:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14519:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14519:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14539:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14531:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14518:27:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14570:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14570:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14569:6:0"
									},
									"scope": 771,
									"src": "14501:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "14826:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 391,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "14843:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "14855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14843:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 395,
													"indexExpression": {
														"id": 394,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "14862:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14843:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "14836:34:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "14685:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14746:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14764:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14756:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14779:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14771:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14771:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14755:32:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14817:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14816:9:0"
									},
									"scope": 771,
									"src": "14737:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "15263:107:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "15281:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "15273:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15273:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15289:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15289:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15273:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "15320:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "15327:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "15336:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "15311:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15311:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "15311:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15359:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 420,
												"nodeType": "Return",
												"src": "15352:11:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "14883:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "15193:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15209:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15201:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15226:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15218:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15218:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15200:32:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "15257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15256:6:0"
									},
									"scope": 771,
									"src": "15184:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "16023:151:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "16041:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "16033:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16033:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "16051:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16051:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16033:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "16089:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "16095:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "16104:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "16073:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16073:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "16073:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "16130:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "16136:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "16140:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "16120:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16120:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "16120:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16163:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 433,
												"id": 452,
												"nodeType": "Return",
												"src": "16156:11:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "15376:549:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15939:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15960:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15952:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15974:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15966:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15966:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15986:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15978:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15951:41:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "16017:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16017:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16016:6:0"
									},
									"scope": 771,
									"src": "15930:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "16616:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16630:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16646:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16638:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16638:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16638:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16630:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "16626:86:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "16650:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16698:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16690:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16690:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16690:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "16671:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16671:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "16664:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "16725:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16739:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16731:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16731:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16731:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16725:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "16721:86:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "16743:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16793:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16785:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16785:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16785:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "16764:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16764:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "16757:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "16824:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "16830:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "16834:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "16816:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16816:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "16816:24:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "16180:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16574:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16566:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16588:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16580:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16600:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16592:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16565:41:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16616:0:0"
									},
									"scope": 771,
									"src": "16547:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "17237:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "17251:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17267:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17259:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17259:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17259:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17251:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "17425:362:0",
													"statements": [
														{
															"assignments": [
																523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 523,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17447:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 548,
																	"src": "17439:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17439:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"baseExpression": {
																	"id": 524,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17461:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"id": 525,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17471:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17461:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17439:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17494:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17508:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17494:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 538,
															"nodeType": "IfStatement",
															"src": "17490:115:0",
															"trueBody": {
																"id": 537,
																"nodeType": "Block",
																"src": "17515:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 532,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17565:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 533,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "17571:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "17584:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 531,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "17540:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17540:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 536,
																		"nodeType": "RevertStatement",
																		"src": "17533:57:0"
																	}
																]
															}
														},
														{
															"id": 547,
															"nodeType": "UncheckedBlock",
															"src": "17618:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 539,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17725:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "17735:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17725:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 542,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "17743:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 543,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "17757:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17743:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17725:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "17725:37:0"
																}
															]
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "17247:540:0",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "17271:148:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17387:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17403:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17387:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17387:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "17801:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17815:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17807:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17807:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17807:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17801:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "18016:206:0",
													"statements": [
														{
															"id": 568,
															"nodeType": "UncheckedBlock",
															"src": "18030:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 562,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "18175:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "18185:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "18175:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "18192:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18175:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 567,
																	"nodeType": "ExpressionStatement",
																	"src": "18175:22:0"
																}
															]
														}
													]
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "17797:425:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "17819:191:0",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "17833:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 556,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "17964:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17980:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17964:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "17964:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "18246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "18252:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "18256:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "18237:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18237:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "18232:30:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "16853:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "17171:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17187:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17179:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17201:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17193:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17193:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17213:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "17205:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17178:41:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17237:0:0"
									},
									"scope": 771,
									"src": "17162:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18668:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "18682:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18701:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18693:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18693:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18693:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18682:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "18678:91:0",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "18705:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18755:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18747:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18747:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18747:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "18726:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18726:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "18719:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18794:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18786:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18786:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18786:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "18798:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "18807:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18778:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18778:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "18778:35:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "18275:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18621:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18635:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18627:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18627:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18652:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18644:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18644:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18626:32:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18668:0:0"
									},
									"scope": 771,
									"src": "18612:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "19194:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "19208:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19227:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19219:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "19219:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19219:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "19208:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "19204:89:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "19231:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19279:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19271:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19271:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19271:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "19252:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19252:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "19245:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "19310:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19327:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19319:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19319:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19319:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "19331:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "19302:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19302:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "19302:35:0"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "18826:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "19147:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19161:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "19153:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19178:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "19170:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19152:32:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19194:0:0"
									},
									"scope": 771,
									"src": "19138:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "19954:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "19973:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "19980:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "19989:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19996:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 722,
														"src": "19964:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19964:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "19964:37:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "19350:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19889:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19906:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19898:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19921:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19913:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19913:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19938:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19930:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19930:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19897:47:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19954:0:0"
									},
									"scope": 771,
									"src": "19880:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "20938:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "20952:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20969:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20961:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20961:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20961:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20952:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "20948:89:0",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "20973:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21023:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "21015:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 681,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "21015:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21015:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "20994:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20994:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "20987:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "21050:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21069:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21061:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21061:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21061:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21050:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "21046:90:0",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "21073:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21122:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "21114:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "21114:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21114:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 695,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "21094:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21094:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "21087:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "21145:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "21157:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21145:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "21164:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21145:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "21175:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21145:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "21145:35:0"
											},
											{
												"condition": {
													"id": 712,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "21194:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "21190:76:0",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "21205:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 714,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "21233:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 715,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "21240:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "21249:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 713,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "21224:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21224:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "EmitStatement",
															"src": "21219:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "20014:821:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20849:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20866:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20858:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20881:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20873:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20898:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20890:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20890:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20910:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20905:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20905:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20857:63:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20938:0:0"
									},
									"scope": 771,
									"src": "20840:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "21643:388:0",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21661:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "21653:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21653:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "21690:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "21697:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "21680:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21680:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21653:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "21719:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21744:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21744:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21739:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21739:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21753:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21739:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21719:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "21715:310:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "21758:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "21776:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "21795:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21776:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 756,
															"nodeType": "IfStatement",
															"src": "21772:130:0",
															"trueBody": {
																"id": 755,
																"nodeType": "Block",
																"src": "21802:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "21854:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 751,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21863:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21881:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "21827:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21827:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 754,
																		"nodeType": "RevertStatement",
																		"src": "21820:67:0"
																	}
																]
															}
														},
														{
															"id": 766,
															"nodeType": "UncheckedBlock",
															"src": "21915:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "21952:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "21959:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21968:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21987:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21968:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21994:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 757,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				662,
																				722
																			],
																			"referencedDeclaration": 722,
																			"src": "21943:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21943:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "21943:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "21278:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21563:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21587:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21579:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21579:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21602:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21594:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21594:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21619:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21611:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21578:47:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21643:0:0"
									},
									"scope": 771,
									"src": "21554:477:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3604,
							"src": "12292:9741:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "22159:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 774,
										"name": "Context",
										"nameLocations": [
											"22703:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "22703:7:0"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "22703:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 773,
								"nodeType": "StructuredDocumentation",
								"src": "22186:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 916,
							"linearizedBaseContracts": [
								916,
								129
							],
							"name": "Ownable",
							"nameLocation": "22692:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 777,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "22733:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 916,
									"src": "22717:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 776,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22717:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "22746:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 782,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "22842:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22877:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "22869:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22869:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22868:17:0"
									},
									"src": "22836:50:0"
								},
								{
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "22892:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 787,
									"name": "OwnableInvalidOwner",
									"nameLocation": "22985:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "23013:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "23005:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23005:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23004:15:0"
									},
									"src": "22979:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 793,
									"name": "OwnershipTransferred",
									"nameLocation": "23032:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "23069:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "23053:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23053:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "23100:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "23084:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23084:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23052:57:0"
									},
									"src": "23026:84:0"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "23270:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 799,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "23284:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23308:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23300:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 800,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "23300:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23300:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23284:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "23280:95:0",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "23312:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23361:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "23353:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 806,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "23353:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23353:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 805,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "23333:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23333:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 811,
															"nodeType": "RevertStatement",
															"src": "23326:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "23403:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 814,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "23384:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23384:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "23384:32:0"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "23116:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 819,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "23256:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "23248:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23248:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23247:22:0"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23270:0:0"
									},
									"scope": 916,
									"src": "23236:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "23532:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 822,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "23542:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23542:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "23542:13:0"
											},
											{
												"id": 825,
												"nodeType": "PlaceholderStatement",
												"src": "23565:1:0"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "23429:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 827,
									"name": "onlyOwner",
									"nameLocation": "23520:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23529:2:0"
									},
									"src": "23511:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "23704:30:0",
										"statements": [
											{
												"expression": {
													"id": 833,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "23721:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 832,
												"id": 834,
												"nodeType": "Return",
												"src": "23714:13:0"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "23579:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "23658:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23663:2:0"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "23695:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23694:9:0"
									},
									"scope": 916,
									"src": "23649:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "23852:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 840,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "23866:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23866:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 842,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "23877:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23877:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23866:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "23862:101:0",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "23891:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 846,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "23939:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23939:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 845,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "23912:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23912:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 849,
															"nodeType": "RevertStatement",
															"src": "23905:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "23740:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "23816:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23827:2:0"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23852:0:0"
									},
									"scope": 916,
									"src": "23807:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "24358:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24395:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24387:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 860,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24387:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24387:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 859,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "24368:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24368:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "24368:30:0"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "23975:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 857,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 856,
												"name": "onlyOwner",
												"nameLocations": [
													"24348:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "24348:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24348:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "24313:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24330:2:0"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24358:0:0"
									},
									"scope": 916,
									"src": "24304:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "24624:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "24638:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24658:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24650:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 876,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "24650:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24650:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24638:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 889,
												"nodeType": "IfStatement",
												"src": "24634:91:0",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "24662:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24711:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "24703:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 882,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "24703:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24703:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 881,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "24683:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24683:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 887,
															"nodeType": "RevertStatement",
															"src": "24676:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 891,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "24753:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 890,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "24734:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24734:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "24734:28:0"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "24411:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 873,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 872,
												"name": "onlyOwner",
												"nameLocations": [
													"24614:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "24614:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24614:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "24563:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24589:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "24581:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24580:18:0"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24624:0:0"
									},
									"scope": 916,
									"src": "24554:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "24986:124:0",
										"statements": [
											{
												"assignments": [
													902
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "25004:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "24996:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 901,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "24996:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 904,
												"initialValue": {
													"id": 903,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "25015:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24996:25:0"
											},
											{
												"expression": {
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 905,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "25031:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 906,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "25040:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "25031:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "25031:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 910,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "25084:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 911,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "25094:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 909,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "25063:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25063:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "EmitStatement",
												"src": "25058:45:0"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "24775:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "24932:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24959:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "24951:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24951:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24950:18:0"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24986:0:0"
									},
									"scope": 916,
									"src": "24923:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3604,
							"src": "22674:2438:0",
							"usedErrors": [
								782,
								787
							],
							"usedEvents": [
								793
							]
						},
						{
							"id": 917,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "25280:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 918,
								"nodeType": "StructuredDocumentation",
								"src": "25306:1963:0",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 951,
							"linearizedBaseContracts": [
								951
							],
							"name": "IERC20Permit",
							"nameLocation": "27280:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "27299:850:0",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "28163:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "28187:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "28179:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28179:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "28210:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "28202:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28235:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "28227:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28227:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "28258:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "28250:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28250:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "28282:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "28276:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 928,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "28276:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "28301:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "28293:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 930,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "28293:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "28320:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "28312:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 932,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "28312:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28169:158:0"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28336:0:0"
									},
									"scope": 951,
									"src": "28154:183:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "28343:294:0",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 944,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "28651:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "28666:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "28658:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28657:15:0"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "28696:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28695:9:0"
									},
									"scope": 951,
									"src": "28642:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "28711:128:0",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 950,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "28906:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28922:2:0"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "28948:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 947,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "28948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28947:9:0"
									},
									"scope": 951,
									"src": "28897:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3604,
							"src": "27270:1689:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 952,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "29105:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 953,
								"nodeType": "StructuredDocumentation",
								"src": "29131:205:0",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 1298,
							"linearizedBaseContracts": [
								1298
							],
							"name": "ECDSA",
							"nameLocation": "29345:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 958,
									"members": [
										{
											"id": 954,
											"name": "NoError",
											"nameLocation": "29385:7:0",
											"nodeType": "EnumValue",
											"src": "29385:7:0"
										},
										{
											"id": 955,
											"name": "InvalidSignature",
											"nameLocation": "29402:16:0",
											"nodeType": "EnumValue",
											"src": "29402:16:0"
										},
										{
											"id": 956,
											"name": "InvalidSignatureLength",
											"nameLocation": "29428:22:0",
											"nodeType": "EnumValue",
											"src": "29428:22:0"
										},
										{
											"id": 957,
											"name": "InvalidSignatureS",
											"nameLocation": "29460:17:0",
											"nodeType": "EnumValue",
											"src": "29460:17:0"
										}
									],
									"name": "RecoverError",
									"nameLocation": "29362:12:0",
									"nodeType": "EnumDefinition",
									"src": "29357:126:0"
								},
								{
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "29489:63:0",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 961,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "29563:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29584:2:0"
									},
									"src": "29557:30:0"
								},
								{
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "29593:60:0",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 966,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "29664:27:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "29700:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "29692:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29691:16:0"
									},
									"src": "29658:50:0"
								},
								{
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "29714:85:0",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 971,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "29810:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "29841:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "29833:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 968,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "29833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29832:11:0"
									},
									"src": "29804:40:0"
								},
								{
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "31235:653:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 986,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "31249:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31259:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "31249:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31269:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "31249:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1021,
													"nodeType": "Block",
													"src": "31774:108:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1010,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31804:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "31796:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1008,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "31796:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31796:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1012,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 958,
																			"src": "31808:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "31821:22:0",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "31808:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$958",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1016,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 976,
																					"src": "31853:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1017,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "31863:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "31853:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "31845:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1014,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "31845:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31845:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1019,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "31795:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 985,
															"id": 1020,
															"nodeType": "Return",
															"src": "31788:83:0"
														}
													]
												},
												"id": 1022,
												"nodeType": "IfStatement",
												"src": "31245:637:0",
												"trueBody": {
													"id": 1007,
													"nodeType": "Block",
													"src": "31273:495:0",
													"statements": [
														{
															"assignments": [
																991
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 991,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "31295:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1007,
																	"src": "31287:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 990,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "31287:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 992,
															"nodeType": "VariableDeclarationStatement",
															"src": "31287:9:0"
														},
														{
															"assignments": [
																994
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 994,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "31318:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1007,
																	"src": "31310:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 993,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "31310:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 995,
															"nodeType": "VariableDeclarationStatement",
															"src": "31310:9:0"
														},
														{
															"assignments": [
																997
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 997,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "31339:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1007,
																	"src": "31333:7:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 996,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "31333:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 998,
															"nodeType": "VariableDeclarationStatement",
															"src": "31333:7:0"
														},
														{
															"AST": {
																"nativeSrc": "31541:171:0",
																"nodeType": "YulBlock",
																"src": "31541:171:0",
																"statements": [
																	{
																		"nativeSrc": "31559:32:0",
																		"nodeType": "YulAssignment",
																		"src": "31559:32:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "31574:9:0",
																							"nodeType": "YulIdentifier",
																							"src": "31574:9:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "31585:4:0",
																							"nodeType": "YulLiteral",
																							"src": "31585:4:0",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "31570:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "31570:3:0"
																					},
																					"nativeSrc": "31570:20:0",
																					"nodeType": "YulFunctionCall",
																					"src": "31570:20:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "31564:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "31564:5:0"
																			},
																			"nativeSrc": "31564:27:0",
																			"nodeType": "YulFunctionCall",
																			"src": "31564:27:0"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "31559:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "31559:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "31608:32:0",
																		"nodeType": "YulAssignment",
																		"src": "31608:32:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "31623:9:0",
																							"nodeType": "YulIdentifier",
																							"src": "31623:9:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "31634:4:0",
																							"nodeType": "YulLiteral",
																							"src": "31634:4:0",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "31619:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "31619:3:0"
																					},
																					"nativeSrc": "31619:20:0",
																					"nodeType": "YulFunctionCall",
																					"src": "31619:20:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "31613:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "31613:5:0"
																			},
																			"nativeSrc": "31613:27:0",
																			"nodeType": "YulFunctionCall",
																			"src": "31613:27:0"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "31608:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "31608:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "31657:41:0",
																		"nodeType": "YulAssignment",
																		"src": "31657:41:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "31667:1:0",
																					"nodeType": "YulLiteral",
																					"src": "31667:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "31680:9:0",
																									"nodeType": "YulIdentifier",
																									"src": "31680:9:0"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "31691:4:0",
																									"nodeType": "YulLiteral",
																									"src": "31691:4:0",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "31676:3:0",
																								"nodeType": "YulIdentifier",
																								"src": "31676:3:0"
																							},
																							"nativeSrc": "31676:20:0",
																							"nodeType": "YulFunctionCall",
																							"src": "31676:20:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "31670:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "31670:5:0"
																					},
																					"nativeSrc": "31670:27:0",
																					"nodeType": "YulFunctionCall",
																					"src": "31670:27:0"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "31662:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "31662:4:0"
																			},
																			"nativeSrc": "31662:36:0",
																			"nodeType": "YulFunctionCall",
																			"src": "31662:36:0"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "31657:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "31657:1:0"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 991,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "31559:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 994,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "31608:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 976,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "31574:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 976,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "31623:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 976,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "31680:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 997,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "31657:1:0",
																	"valueSize": 1
																}
															],
															"id": 999,
															"nodeType": "InlineAssembly",
															"src": "31532:180:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1001,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 974,
																		"src": "31743:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1002,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "31749:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 1003,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 991,
																		"src": "31752:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1004,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 994,
																		"src": "31755:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1000,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1024,
																		1104,
																		1212
																	],
																	"referencedDeclaration": 1212,
																	"src": "31732:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31732:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 985,
															"id": 1006,
															"nodeType": "Return",
															"src": "31725:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "29850:1267:0",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "31131:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "31150:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "31142:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 973,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "31142:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "31169:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "31156:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 975,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "31156:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31141:38:0"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "31203:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "31212:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$958",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 981,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 980,
														"name": "RecoverError",
														"nameLocations": [
															"31212:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 958,
														"src": "31212:12:0"
													},
													"referencedDeclaration": 958,
													"src": "31212:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$958",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "31226:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 983,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "31226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31202:32:0"
									},
									"scope": 1298,
									"src": "31122:766:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "32782:168:0",
										"statements": [
											{
												"assignments": [
													1035,
													1038,
													1040
												],
												"declarations": [
													{
														"constant": false,
														"id": 1035,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "32801:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1053,
														"src": "32793:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1034,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "32793:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1038,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "32825:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1053,
														"src": "32812:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$958",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1037,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1036,
																"name": "RecoverError",
																"nameLocations": [
																	"32812:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 958,
																"src": "32812:12:0"
															},
															"referencedDeclaration": 958,
															"src": "32812:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1040,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "32840:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1053,
														"src": "32832:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1039,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "32832:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1045,
												"initialValue": {
													"arguments": [
														{
															"id": 1042,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "32863:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1043,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "32869:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1041,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1024,
															1104,
															1212
														],
														"referencedDeclaration": 1024,
														"src": "32852:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32852:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32792:87:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1047,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "32901:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1048,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "32908:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1046,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "32889:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$958_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32889:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "32889:28:0"
											},
											{
												"expression": {
													"id": 1051,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1035,
													"src": "32934:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1033,
												"id": 1052,
												"nodeType": "Return",
												"src": "32927:16:0"
											}
										]
									},
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "31894:796:0",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "32704:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "32720:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "32712:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1026,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "32739:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "32726:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1028,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32726:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32711:38:0"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "32773:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32772:9:0"
									},
									"scope": 1298,
									"src": "32695:255:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "33278:342:0",
										"statements": [
											{
												"id": 1102,
												"nodeType": "UncheckedBlock",
												"src": "33288:326:0",
												"statements": [
													{
														"assignments": [
															1072
														],
														"declarations": [
															{
																"constant": false,
																"id": 1072,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "33320:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1102,
																"src": "33312:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 1071,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "33312:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1079,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1073,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "33324:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33337:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "33329:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1074,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "33329:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33329:75:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "33324:80:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "33312:92:0"
													},
													{
														"assignments": [
															1081
														],
														"declarations": [
															{
																"constant": false,
																"id": 1081,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "33521:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1102,
																"src": "33515:7:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 1080,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "33515:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1094,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1089,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 1086,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1061,
																							"src": "33540:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 1085,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "33532:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1084,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "33532:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1087,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "33532:11:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 1088,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "33547:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "33532:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1090,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "33531:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33554:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "33531:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33525:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1082,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "33525:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33525:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "33515:42:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1096,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "33589:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1097,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "33595:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 1098,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "33598:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1099,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1072,
																	"src": "33601:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1095,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1024,
																	1104,
																	1212
																],
																"referencedDeclaration": 1212,
																"src": "33578:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33578:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 1070,
														"id": 1101,
														"nodeType": "Return",
														"src": "33571:32:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "32956:205:0",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "33175:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "33194:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "33186:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1056,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "33208:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "33200:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1058,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33200:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "33219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "33211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1060,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33211:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33185:37:0"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "33246:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "33255:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$958",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1066,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1065,
														"name": "RecoverError",
														"nameLocations": [
															"33255:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 958,
														"src": "33255:12:0"
													},
													"referencedDeclaration": 958,
													"src": "33255:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$958",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "33269:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1068,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33245:32:0"
									},
									"scope": 1298,
									"src": "33166:454:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "33833:164:0",
										"statements": [
											{
												"assignments": [
													1117,
													1120,
													1122
												],
												"declarations": [
													{
														"constant": false,
														"id": 1117,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "33852:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "33844:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1116,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "33844:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1120,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "33876:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "33863:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$958",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1119,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1118,
																"name": "RecoverError",
																"nameLocations": [
																	"33863:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 958,
																"src": "33863:12:0"
															},
															"referencedDeclaration": 958,
															"src": "33863:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1122,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "33891:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "33883:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1121,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "33883:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1128,
												"initialValue": {
													"arguments": [
														{
															"id": 1124,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "33914:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1125,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "33920:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1126,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "33923:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1123,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1024,
															1104,
															1212
														],
														"referencedDeclaration": 1104,
														"src": "33903:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33903:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33843:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1130,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "33948:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1131,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "33955:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1129,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "33936:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$958_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33936:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "33936:28:0"
											},
											{
												"expression": {
													"id": 1134,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1117,
													"src": "33981:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1115,
												"id": 1135,
												"nodeType": "Return",
												"src": "33974:16:0"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "33626:116:0",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "33756:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "33772:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "33764:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1106,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33764:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "33786:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "33778:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1108,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "33797:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "33789:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1110,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33763:37:0"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "33824:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33824:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33823:9:0"
									},
									"scope": 1298,
									"src": "33747:250:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "34291:1372:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1158,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "35187:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "35179:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1156,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "35179:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35179:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 1160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "35192:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "35179:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1172,
												"nodeType": "IfStatement",
												"src": "35175:164:0",
												"trueBody": {
													"id": 1171,
													"nodeType": "Block",
													"src": "35260:79:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1164,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35290:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "35282:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1162,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "35282:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35282:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1166,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 958,
																			"src": "35294:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "35307:17:0",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 957,
																		"src": "35294:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$958",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 1168,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1146,
																		"src": "35326:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1169,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "35281:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1155,
															"id": 1170,
															"nodeType": "Return",
															"src": "35274:54:0"
														}
													]
												}
											},
											{
												"assignments": [
													1174
												],
												"declarations": [
													{
														"constant": false,
														"id": 1174,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "35441:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1211,
														"src": "35433:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1173,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35433:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1181,
												"initialValue": {
													"arguments": [
														{
															"id": 1176,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "35460:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1177,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "35466:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1178,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "35469:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1179,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "35472:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1175,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "35450:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35450:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35433:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1182,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "35488:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35506:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "35498:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1183,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "35498:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35498:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "35488:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1201,
												"nodeType": "IfStatement",
												"src": "35484:113:0",
												"trueBody": {
													"id": 1200,
													"nodeType": "Block",
													"src": "35510:87:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1190,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35540:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "35532:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1188,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "35532:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35532:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1192,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 958,
																			"src": "35544:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "35557:16:0",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 955,
																		"src": "35544:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$958",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35583:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "35575:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1194,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "35575:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35575:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1198,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "35531:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1155,
															"id": 1199,
															"nodeType": "Return",
															"src": "35524:62:0"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 1202,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "35615:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1203,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "35623:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "35636:7:0",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 954,
															"src": "35623:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35653:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35645:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1205,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "35645:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35645:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 1209,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "35614:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 1155,
												"id": 1210,
												"nodeType": "Return",
												"src": "35607:49:0"
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "34003:125:0",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "34142:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "34170:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "34162:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1139,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34162:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "34190:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "34184:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1141,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "34184:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "34209:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "34201:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1143,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34201:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "34228:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "34220:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1145,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34152:83:0"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "34259:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "34268:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$958",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1151,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1150,
														"name": "RecoverError",
														"nameLocations": [
															"34268:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 958,
														"src": "34268:12:0"
													},
													"referencedDeclaration": 958,
													"src": "34268:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$958",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "34282:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1153,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34258:32:0"
									},
									"scope": 1298,
									"src": "34133:1530:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "35890:166:0",
										"statements": [
											{
												"assignments": [
													1227,
													1230,
													1232
												],
												"declarations": [
													{
														"constant": false,
														"id": 1227,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "35909:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "35901:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1226,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35901:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1230,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "35933:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "35920:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$958",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1229,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1228,
																"name": "RecoverError",
																"nameLocations": [
																	"35920:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 958,
																"src": "35920:12:0"
															},
															"referencedDeclaration": 958,
															"src": "35920:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1232,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "35948:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "35940:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1231,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "35940:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1239,
												"initialValue": {
													"arguments": [
														{
															"id": 1234,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "35971:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1235,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "35977:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1236,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "35980:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1237,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "35983:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1233,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1024,
															1104,
															1212
														],
														"referencedDeclaration": 1212,
														"src": "35960:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35960:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$958_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35900:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1241,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "36007:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1242,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "36014:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1240,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "35995:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$958_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35995:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "35995:28:0"
											},
											{
												"expression": {
													"id": 1245,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1227,
													"src": "36040:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1225,
												"id": 1246,
												"nodeType": "Return",
												"src": "36033:16:0"
											}
										]
									},
									"documentation": {
										"id": 1213,
										"nodeType": "StructuredDocumentation",
										"src": "35669:122:0",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "35805:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "35821:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "35813:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1214,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "35813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "35833:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "35827:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1216,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "35827:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "35844:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "35836:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1218,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "35836:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "35855:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "35847:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "35847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35812:45:0"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "35881:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35880:9:0"
									},
									"scope": 1298,
									"src": "35796:260:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "36261:460:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$958",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1257,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "36275:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$958",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1258,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "36284:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "36297:7:0",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 954,
														"src": "36284:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$958",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "36275:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$958",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1263,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "36371:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1264,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "36380:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "36393:16:0",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 955,
															"src": "36380:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "36371:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$958",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1271,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "36476:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$958",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1272,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "36485:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "36498:22:0",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 956,
																"src": "36485:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$958",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "36476:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$958",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1283,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "36610:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$958",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1284,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 958,
																		"src": "36619:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$958_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "36632:17:0",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 957,
																	"src": "36619:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$958",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "36610:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1292,
															"nodeType": "IfStatement",
															"src": "36606:109:0",
															"trueBody": {
																"id": 1291,
																"nodeType": "Block",
																"src": "36651:64:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1288,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1254,
																					"src": "36695:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 1287,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 971,
																				"src": "36672:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																					"typeString": "function (bytes32) pure"
																				}
																			},
																			"id": 1289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36672:32:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1290,
																		"nodeType": "RevertStatement",
																		"src": "36665:39:0"
																	}
																]
															}
														},
														"id": 1293,
														"nodeType": "IfStatement",
														"src": "36472:243:0",
														"trueBody": {
															"id": 1282,
															"nodeType": "Block",
															"src": "36522:78:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1278,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1254,
																						"src": "36579:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 1277,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "36571:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1276,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "36571:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1279,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "36571:17:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1275,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 966,
																			"src": "36543:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 1280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "36543:46:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1281,
																	"nodeType": "RevertStatement",
																	"src": "36536:53:0"
																}
															]
														}
													},
													"id": 1294,
													"nodeType": "IfStatement",
													"src": "36367:348:0",
													"trueBody": {
														"id": 1270,
														"nodeType": "Block",
														"src": "36411:55:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1267,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 961,
																		"src": "36432:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36432:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1269,
																"nodeType": "RevertStatement",
																"src": "36425:30:0"
															}
														]
													}
												},
												"id": 1295,
												"nodeType": "IfStatement",
												"src": "36271:444:0",
												"trueBody": {
													"id": 1262,
													"nodeType": "Block",
													"src": "36306:55:0",
													"statements": [
														{
															"functionReturnParameters": 1256,
															"id": 1261,
															"nodeType": "Return",
															"src": "36320:7:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "36062:122:0",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "36198:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "36223:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "36210:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$958",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1251,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1250,
														"name": "RecoverError",
														"nameLocations": [
															"36210:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 958,
														"src": "36210:12:0"
													},
													"referencedDeclaration": 958,
													"src": "36210:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$958",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "36238:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "36230:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1253,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "36230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36209:38:0"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36261:0:0"
									},
									"scope": 1298,
									"src": "36189:532:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3604,
							"src": "29337:7386:0",
							"usedErrors": [
								961,
								966,
								971
							],
							"usedEvents": []
						},
						{
							"id": 1299,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "36851:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1300,
								"nodeType": "StructuredDocumentation",
								"src": "36877:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2351,
							"linearizedBaseContracts": [
								2351
							],
							"name": "Math",
							"nameLocation": "36959:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "36970:50:0",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1303,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "37031:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37051:2:0"
									},
									"src": "37025:29:0"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1308,
									"members": [
										{
											"id": 1304,
											"name": "Floor",
											"nameLocation": "37084:5:0",
											"nodeType": "EnumValue",
											"src": "37084:5:0"
										},
										{
											"id": 1305,
											"name": "Ceil",
											"nameLocation": "37127:4:0",
											"nodeType": "EnumValue",
											"src": "37127:4:0"
										},
										{
											"id": 1306,
											"name": "Trunc",
											"nameLocation": "37169:5:0",
											"nodeType": "EnumValue",
											"src": "37169:5:0"
										},
										{
											"id": 1307,
											"name": "Expand",
											"nameLocation": "37199:6:0",
											"nodeType": "EnumValue",
											"src": "37199:6:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "37065:8:0",
									"nodeType": "EnumDefinition",
									"src": "37060:169:0"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "37409:140:0",
										"statements": [
											{
												"id": 1338,
												"nodeType": "UncheckedBlock",
												"src": "37419:124:0",
												"statements": [
													{
														"assignments": [
															1321
														],
														"declarations": [
															{
																"constant": false,
																"id": 1321,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "37451:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1338,
																"src": "37443:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1320,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "37443:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1325,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1322,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1311,
																"src": "37455:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1323,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1313,
																"src": "37459:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37455:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "37443:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1326,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1321,
																"src": "37478:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1327,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1311,
																"src": "37482:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37478:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1333,
														"nodeType": "IfStatement",
														"src": "37474:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37493:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37500:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1331,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "37492:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1319,
															"id": 1332,
															"nodeType": "Return",
															"src": "37485:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37524:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1335,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1321,
																	"src": "37530:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1336,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "37523:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1319,
														"id": 1337,
														"nodeType": "Return",
														"src": "37516:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "37235:93:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "37342:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "37357:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "37349:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37349:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "37368:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "37360:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37360:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37348:22:0"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "37394:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1315,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37394:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "37400:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37393:15:0"
									},
									"scope": 2351,
									"src": "37333:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "37732:113:0",
										"statements": [
											{
												"id": 1366,
												"nodeType": "UncheckedBlock",
												"src": "37742:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1352,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1345,
																"src": "37770:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1353,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "37774:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37770:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1359,
														"nodeType": "IfStatement",
														"src": "37766:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37785:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37792:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1357,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "37784:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1351,
															"id": 1358,
															"nodeType": "Return",
															"src": "37777:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37816:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1361,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1343,
																		"src": "37822:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1362,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1345,
																		"src": "37826:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "37822:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1364,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "37815:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1351,
														"id": 1365,
														"nodeType": "Return",
														"src": "37808:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "37555:96:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "37665:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "37680:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "37672:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "37691:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "37683:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37671:22:0"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "37717:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1347,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37717:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "37723:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37716:15:0"
									},
									"scope": 2351,
									"src": "37656:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "38031:417:0",
										"statements": [
											{
												"id": 1408,
												"nodeType": "UncheckedBlock",
												"src": "38041:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1380,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "38299:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "38304:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "38299:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1387,
														"nodeType": "IfStatement",
														"src": "38295:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38315:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38321:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1385,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "38314:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1379,
															"id": 1386,
															"nodeType": "Return",
															"src": "38307:16:0"
														}
													},
													{
														"assignments": [
															1389
														],
														"declarations": [
															{
																"constant": false,
																"id": 1389,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "38345:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 1408,
																"src": "38337:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1388,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "38337:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1393,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1390,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "38349:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1391,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "38353:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38349:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "38337:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1394,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1389,
																	"src": "38372:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1395,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1371,
																	"src": "38376:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "38372:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1397,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "38381:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38372:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1403,
														"nodeType": "IfStatement",
														"src": "38368:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38392:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38399:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1401,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "38391:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1379,
															"id": 1402,
															"nodeType": "Return",
															"src": "38384:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38423:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1405,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1389,
																	"src": "38429:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1406,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "38422:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1379,
														"id": 1407,
														"nodeType": "Return",
														"src": "38415:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1369,
										"nodeType": "StructuredDocumentation",
										"src": "37851:99:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "37964:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "37979:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "37971:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "37990:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "37982:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37982:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37970:22:0"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "38016:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1375,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "38016:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "38022:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38022:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38015:15:0"
									},
									"scope": 2351,
									"src": "37955:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1437,
										"nodeType": "Block",
										"src": "38635:114:0",
										"statements": [
											{
												"id": 1436,
												"nodeType": "UncheckedBlock",
												"src": "38645:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1422,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1415,
																"src": "38673:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "38678:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "38673:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1429,
														"nodeType": "IfStatement",
														"src": "38669:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38689:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "38696:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1427,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "38688:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1421,
															"id": 1428,
															"nodeType": "Return",
															"src": "38681:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38720:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1431,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1413,
																		"src": "38726:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1432,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1415,
																		"src": "38730:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "38726:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1434,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "38719:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1421,
														"id": 1435,
														"nodeType": "Return",
														"src": "38712:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1411,
										"nodeType": "StructuredDocumentation",
										"src": "38454:100:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "38568:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "38583:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "38575:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38575:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "38594:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "38586:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38574:22:0"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "38620:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "38620:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "38626:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38626:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38619:15:0"
									},
									"scope": 2351,
									"src": "38559:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "38946:114:0",
										"statements": [
											{
												"id": 1464,
												"nodeType": "UncheckedBlock",
												"src": "38956:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1450,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1443,
																"src": "38984:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "38989:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "38984:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1457,
														"nodeType": "IfStatement",
														"src": "38980:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "39000:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "39007:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1455,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "38999:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1449,
															"id": 1456,
															"nodeType": "Return",
															"src": "38992:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "39031:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1459,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1441,
																		"src": "39037:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1460,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1443,
																		"src": "39041:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "39037:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1462,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "39030:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1449,
														"id": 1463,
														"nodeType": "Return",
														"src": "39023:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "38755:110:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "38879:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "38894:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "38886:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "38905:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "38897:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38897:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38885:22:0"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "38931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1445,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "38931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "38937:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38937:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38930:15:0"
									},
									"scope": 2351,
									"src": "38870:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1483,
										"nodeType": "Block",
										"src": "39197:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1476,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "39214:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1477,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "39218:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "39214:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1480,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "39226:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "39214:13:0",
													"trueExpression": {
														"id": 1479,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "39222:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1475,
												"id": 1482,
												"nodeType": "Return",
												"src": "39207:20:0"
											}
										]
									},
									"documentation": {
										"id": 1467,
										"nodeType": "StructuredDocumentation",
										"src": "39066:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "39139:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "39151:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "39143:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "39162:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "39154:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39154:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39142:22:0"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "39188:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39187:9:0"
									},
									"scope": 2351,
									"src": "39130:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1501,
										"nodeType": "Block",
										"src": "39372:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1494,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "39389:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1495,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "39393:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "39389:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1498,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1489,
														"src": "39401:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "39389:13:0",
													"trueExpression": {
														"id": 1497,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "39397:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1493,
												"id": 1500,
												"nodeType": "Return",
												"src": "39382:20:0"
											}
										]
									},
									"documentation": {
										"id": 1485,
										"nodeType": "StructuredDocumentation",
										"src": "39240:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "39314:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "39326:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "39318:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39318:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "39337:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "39329:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39317:22:0"
									},
									"returnParameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "39363:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39363:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39362:9:0"
									},
									"scope": 2351,
									"src": "39305:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1524,
										"nodeType": "Block",
										"src": "39593:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1512,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1505,
																	"src": "39648:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1513,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1507,
																	"src": "39652:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "39648:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1515,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "39647:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1516,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1505,
																		"src": "39658:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1517,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1507,
																		"src": "39662:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "39658:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1519,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "39657:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39667:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "39657:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39647:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1511,
												"id": 1523,
												"nodeType": "Return",
												"src": "39640:28:0"
											}
										]
									},
									"documentation": {
										"id": 1503,
										"nodeType": "StructuredDocumentation",
										"src": "39415:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "39531:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "39547:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "39539:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39539:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "39558:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "39550:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39550:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39538:22:0"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "39584:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39583:9:0"
									},
									"scope": 2351,
									"src": "39522:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "39967:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1535,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "39981:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "39986:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "39981:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1543,
												"nodeType": "IfStatement",
												"src": "39977:127:0",
												"trueBody": {
													"id": 1542,
													"nodeType": "Block",
													"src": "39989:115:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1538,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1528,
																	"src": "40088:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1539,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1530,
																	"src": "40092:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "40088:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1534,
															"id": 1541,
															"nodeType": "Return",
															"src": "40081:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1544,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "40192:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40197:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "40192:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1548,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1528,
																			"src": "40206:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "40210:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "40206:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1551,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "40205:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1552,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1530,
																"src": "40215:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "40205:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40219:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "40205:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "40192:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 1547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40201:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1534,
												"id": 1557,
												"nodeType": "Return",
												"src": "40185:35:0"
											}
										]
									},
									"documentation": {
										"id": 1526,
										"nodeType": "StructuredDocumentation",
										"src": "39681:210:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "39905:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "39921:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "39913:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "39932:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "39924:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39924:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39912:22:0"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "39958:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39957:9:0"
									},
									"scope": 2351,
									"src": "39896:331:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1684,
										"nodeType": "Block",
										"src": "40649:4018:0",
										"statements": [
											{
												"id": 1683,
												"nodeType": "UncheckedBlock",
												"src": "40659:4002:0",
												"statements": [
													{
														"assignments": [
															1572
														],
														"declarations": [
															{
																"constant": false,
																"id": 1572,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "40988:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 1683,
																"src": "40980:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1571,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "40980:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1576,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1573,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1562,
																"src": "40996:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1574,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1564,
																"src": "41000:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "40996:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "40980:21:0"
													},
													{
														"assignments": [
															1578
														],
														"declarations": [
															{
																"constant": false,
																"id": 1578,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "41068:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 1683,
																"src": "41060:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1577,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "41060:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1579,
														"nodeType": "VariableDeclarationStatement",
														"src": "41060:13:0"
													},
													{
														"AST": {
															"nativeSrc": "41140:122:0",
															"nodeType": "YulBlock",
															"src": "41140:122:0",
															"statements": [
																{
																	"nativeSrc": "41158:30:0",
																	"nodeType": "YulVariableDeclaration",
																	"src": "41158:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "41175:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "41175:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "41178:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "41178:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "41185:1:0",
																						"nodeType": "YulLiteral",
																						"src": "41185:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "41181:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "41181:3:0"
																				},
																				"nativeSrc": "41181:6:0",
																				"nodeType": "YulFunctionCall",
																				"src": "41181:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "41168:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "41168:6:0"
																		},
																		"nativeSrc": "41168:20:0",
																		"nodeType": "YulFunctionCall",
																		"src": "41168:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "41162:2:0",
																			"nodeType": "YulTypedName",
																			"src": "41162:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "41205:43:0",
																	"nodeType": "YulAssignment",
																	"src": "41205:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "41222:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "41222:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "41226:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "41226:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "41218:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "41218:3:0"
																				},
																				"nativeSrc": "41218:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "41218:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "41237:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "41237:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "41241:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "41241:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "41234:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "41234:2:0"
																				},
																				"nativeSrc": "41234:13:0",
																				"nodeType": "YulFunctionCall",
																				"src": "41234:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "41214:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "41214:3:0"
																		},
																		"nativeSrc": "41214:34:0",
																		"nodeType": "YulFunctionCall",
																		"src": "41214:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "41205:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "41205:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1572,
																"isOffset": false,
																"isSlot": false,
																"src": "41226:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1572,
																"isOffset": false,
																"isSlot": false,
																"src": "41241:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1578,
																"isOffset": false,
																"isSlot": false,
																"src": "41205:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1562,
																"isOffset": false,
																"isSlot": false,
																"src": "41175:1:0",
																"valueSize": 1
															},
															{
																"declaration": 1564,
																"isOffset": false,
																"isSlot": false,
																"src": "41178:1:0",
																"valueSize": 1
															}
														],
														"id": 1580,
														"nodeType": "InlineAssembly",
														"src": "41131:131:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1581,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1578,
																"src": "41343:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "41352:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "41343:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1589,
														"nodeType": "IfStatement",
														"src": "41339:368:0",
														"trueBody": {
															"id": 1588,
															"nodeType": "Block",
															"src": "41355:352:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1584,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1572,
																			"src": "41673:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1585,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1566,
																			"src": "41681:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "41673:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1570,
																	"id": 1587,
																	"nodeType": "Return",
																	"src": "41666:26:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1590,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1566,
																"src": "41813:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1591,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1578,
																"src": "41828:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "41813:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1597,
														"nodeType": "IfStatement",
														"src": "41809:88:0",
														"trueBody": {
															"id": 1596,
															"nodeType": "Block",
															"src": "41835:62:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1593,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1303,
																			"src": "41860:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "41860:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1595,
																	"nodeType": "RevertStatement",
																	"src": "41853:29:0"
																}
															]
														}
													},
													{
														"assignments": [
															1599
														],
														"declarations": [
															{
																"constant": false,
																"id": 1599,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "42160:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 1683,
																"src": "42152:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1598,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "42152:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1600,
														"nodeType": "VariableDeclarationStatement",
														"src": "42152:17:0"
													},
													{
														"AST": {
															"nativeSrc": "42192:291:0",
															"nodeType": "YulBlock",
															"src": "42192:291:0",
															"statements": [
																{
																	"nativeSrc": "42261:38:0",
																	"nodeType": "YulAssignment",
																	"src": "42261:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "42281:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "42281:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "42284:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "42284:1:0"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "42287:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "42287:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "42274:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "42274:6:0"
																		},
																		"nativeSrc": "42274:25:0",
																		"nodeType": "YulFunctionCall",
																		"src": "42274:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "42261:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "42261:9:0"
																		}
																	]
																},
																{
																	"nativeSrc": "42381:41:0",
																	"nodeType": "YulAssignment",
																	"src": "42381:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "42394:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "42394:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "42404:9:0",
																						"nodeType": "YulIdentifier",
																						"src": "42404:9:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "42415:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "42415:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "42401:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "42401:2:0"
																				},
																				"nativeSrc": "42401:20:0",
																				"nodeType": "YulFunctionCall",
																				"src": "42401:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "42390:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "42390:3:0"
																		},
																		"nativeSrc": "42390:32:0",
																		"nodeType": "YulFunctionCall",
																		"src": "42390:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "42381:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "42381:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "42439:30:0",
																	"nodeType": "YulAssignment",
																	"src": "42439:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "42452:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "42452:5:0"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "42459:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "42459:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "42448:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "42448:3:0"
																		},
																		"nativeSrc": "42448:21:0",
																		"nodeType": "YulFunctionCall",
																		"src": "42448:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "42439:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "42439:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1566,
																"isOffset": false,
																"isSlot": false,
																"src": "42287:11:0",
																"valueSize": 1
															},
															{
																"declaration": 1572,
																"isOffset": false,
																"isSlot": false,
																"src": "42415:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1572,
																"isOffset": false,
																"isSlot": false,
																"src": "42439:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1572,
																"isOffset": false,
																"isSlot": false,
																"src": "42452:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1578,
																"isOffset": false,
																"isSlot": false,
																"src": "42381:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1578,
																"isOffset": false,
																"isSlot": false,
																"src": "42394:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1599,
																"isOffset": false,
																"isSlot": false,
																"src": "42261:9:0",
																"valueSize": 1
															},
															{
																"declaration": 1599,
																"isOffset": false,
																"isSlot": false,
																"src": "42404:9:0",
																"valueSize": 1
															},
															{
																"declaration": 1599,
																"isOffset": false,
																"isSlot": false,
																"src": "42459:9:0",
																"valueSize": 1
															},
															{
																"declaration": 1562,
																"isOffset": false,
																"isSlot": false,
																"src": "42281:1:0",
																"valueSize": 1
															},
															{
																"declaration": 1564,
																"isOffset": false,
																"isSlot": false,
																"src": "42284:1:0",
																"valueSize": 1
															}
														],
														"id": 1601,
														"nodeType": "InlineAssembly",
														"src": "42183:300:0"
													},
													{
														"assignments": [
															1603
														],
														"declarations": [
															{
																"constant": false,
																"id": 1603,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "42695:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 1683,
																"src": "42687:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1602,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "42687:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1610,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1604,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1566,
																"src": "42702:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "42717:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1606,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1566,
																			"src": "42721:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "42717:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1608,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "42716:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "42702:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "42687:46:0"
													},
													{
														"AST": {
															"nativeSrc": "42756:362:0",
															"nodeType": "YulBlock",
															"src": "42756:362:0",
															"statements": [
																{
																	"nativeSrc": "42821:37:0",
																	"nodeType": "YulAssignment",
																	"src": "42821:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "42840:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "42840:11:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "42853:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "42853:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "42836:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "42836:3:0"
																		},
																		"nativeSrc": "42836:22:0",
																		"nodeType": "YulFunctionCall",
																		"src": "42836:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "42821:11:0",
																			"nodeType": "YulIdentifier",
																			"src": "42821:11:0"
																		}
																	]
																},
																{
																	"nativeSrc": "42925:25:0",
																	"nodeType": "YulAssignment",
																	"src": "42925:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "42938:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "42938:5:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "42945:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "42945:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "42934:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "42934:3:0"
																		},
																		"nativeSrc": "42934:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "42934:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "42925:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "42925:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "43065:39:0",
																	"nodeType": "YulAssignment",
																	"src": "43065:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "43085:1:0",
																								"nodeType": "YulLiteral",
																								"src": "43085:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "43088:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "43088:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "43081:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "43081:3:0"
																						},
																						"nativeSrc": "43081:12:0",
																						"nodeType": "YulFunctionCall",
																						"src": "43081:12:0"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "43095:4:0",
																						"nodeType": "YulIdentifier",
																						"src": "43095:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "43077:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "43077:3:0"
																				},
																				"nativeSrc": "43077:23:0",
																				"nodeType": "YulFunctionCall",
																				"src": "43077:23:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "43102:1:0",
																				"nodeType": "YulLiteral",
																				"src": "43102:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "43073:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "43073:3:0"
																		},
																		"nativeSrc": "43073:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "43073:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "43065:4:0",
																			"nodeType": "YulIdentifier",
																			"src": "43065:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1566,
																"isOffset": false,
																"isSlot": false,
																"src": "42821:11:0",
																"valueSize": 1
															},
															{
																"declaration": 1566,
																"isOffset": false,
																"isSlot": false,
																"src": "42840:11:0",
																"valueSize": 1
															},
															{
																"declaration": 1572,
																"isOffset": false,
																"isSlot": false,
																"src": "42925:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1572,
																"isOffset": false,
																"isSlot": false,
																"src": "42938:5:0",
																"valueSize": 1
															},
															{
																"declaration": 1603,
																"isOffset": false,
																"isSlot": false,
																"src": "42853:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1603,
																"isOffset": false,
																"isSlot": false,
																"src": "42945:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1603,
																"isOffset": false,
																"isSlot": false,
																"src": "43065:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1603,
																"isOffset": false,
																"isSlot": false,
																"src": "43088:4:0",
																"valueSize": 1
															},
															{
																"declaration": 1603,
																"isOffset": false,
																"isSlot": false,
																"src": "43095:4:0",
																"valueSize": 1
															}
														],
														"id": 1611,
														"nodeType": "InlineAssembly",
														"src": "42747:371:0"
													},
													{
														"expression": {
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1612,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "43184:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1613,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1578,
																	"src": "43193:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1614,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1603,
																	"src": "43201:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "43193:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "43184:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1617,
														"nodeType": "ExpressionStatement",
														"src": "43184:21:0"
													},
													{
														"assignments": [
															1619
														],
														"declarations": [
															{
																"constant": false,
																"id": 1619,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "43531:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 1683,
																"src": "43523:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1618,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "43523:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1626,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "43542:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1621,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1566,
																			"src": "43546:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "43542:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1623,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "43541:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43561:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "43541:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "43523:39:0"
													},
													{
														"expression": {
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1627,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "43779:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43790:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1629,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "43794:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1630,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "43808:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "43794:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "43790:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "43779:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1634,
														"nodeType": "ExpressionStatement",
														"src": "43779:36:0"
													},
													{
														"expression": {
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1635,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "43848:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43859:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1637,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "43863:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1638,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "43877:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "43863:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "43859:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "43848:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1642,
														"nodeType": "ExpressionStatement",
														"src": "43848:36:0"
													},
													{
														"expression": {
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1643,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "43918:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43929:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1645,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "43933:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1646,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "43947:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "43933:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "43929:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "43918:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1650,
														"nodeType": "ExpressionStatement",
														"src": "43918:36:0"
													},
													{
														"expression": {
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1651,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "43988:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43999:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1653,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "44003:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1654,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "44017:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "44003:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "43999:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "43988:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1658,
														"nodeType": "ExpressionStatement",
														"src": "43988:36:0"
													},
													{
														"expression": {
															"id": 1665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1659,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "44058:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "44069:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1661,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "44073:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1662,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "44087:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "44073:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "44069:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "44058:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1666,
														"nodeType": "ExpressionStatement",
														"src": "44058:36:0"
													},
													{
														"expression": {
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1667,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "44129:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "44140:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1669,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "44144:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1670,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "44158:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "44144:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "44140:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "44129:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1674,
														"nodeType": "ExpressionStatement",
														"src": "44129:36:0"
													},
													{
														"expression": {
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1675,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1569,
																"src": "44599:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1676,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1572,
																	"src": "44608:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1677,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1619,
																	"src": "44616:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "44608:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "44599:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1680,
														"nodeType": "ExpressionStatement",
														"src": "44599:24:0"
													},
													{
														"expression": {
															"id": 1681,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "44644:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1570,
														"id": 1682,
														"nodeType": "Return",
														"src": "44637:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "40233:313:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "40560:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "40575:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "40567:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "40586:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "40578:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "40597:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "40589:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40589:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40566:43:0"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "40641:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "40633:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40633:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40632:16:0"
									},
									"scope": 2351,
									"src": "40551:4116:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1727,
										"nodeType": "Block",
										"src": "44909:192:0",
										"statements": [
											{
												"assignments": [
													1701
												],
												"declarations": [
													{
														"constant": false,
														"id": 1701,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "44927:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1727,
														"src": "44919:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1700,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "44919:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1707,
												"initialValue": {
													"arguments": [
														{
															"id": 1703,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1688,
															"src": "44943:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1704,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "44946:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1705,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "44949:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1702,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1685,
															1728
														],
														"referencedDeclaration": 1685,
														"src": "44936:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44936:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44919:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1709,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1695,
																"src": "44992:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1308",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1308",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 1708,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2350,
															"src": "44975:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1308_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 1710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "44975:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1712,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1688,
																	"src": "45012:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1713,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1690,
																	"src": "45015:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1714,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1692,
																	"src": "45018:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1711,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "45005:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45005:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45033:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "45005:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "44975:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1724,
												"nodeType": "IfStatement",
												"src": "44971:101:0",
												"trueBody": {
													"id": 1723,
													"nodeType": "Block",
													"src": "45036:36:0",
													"statements": [
														{
															"expression": {
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1719,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1701,
																	"src": "45050:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "45060:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "45050:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1722,
															"nodeType": "ExpressionStatement",
															"src": "45050:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1725,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1701,
													"src": "45088:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1699,
												"id": 1726,
												"nodeType": "Return",
												"src": "45081:13:0"
											}
										]
									},
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "44673:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "44808:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "44823:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "44815:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44815:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "44834:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "44826:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44826:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "44845:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "44837:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44837:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "44867:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "44858:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1308",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1694,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1693,
														"name": "Rounding",
														"nameLocations": [
															"44858:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1308,
														"src": "44858:8:0"
													},
													"referencedDeclaration": 1308,
													"src": "44858:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1308",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44814:62:0"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "44900:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44899:9:0"
									},
									"scope": 2351,
									"src": "44799:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1839,
										"nodeType": "Block",
										"src": "45392:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1736,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1731,
														"src": "45406:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1737,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "45411:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "45406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1742,
												"nodeType": "IfStatement",
												"src": "45402:45:0",
												"trueBody": {
													"id": 1741,
													"nodeType": "Block",
													"src": "45414:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "45435:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1735,
															"id": 1740,
															"nodeType": "Return",
															"src": "45428:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													1744
												],
												"declarations": [
													{
														"constant": false,
														"id": 1744,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "46134:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1839,
														"src": "46126:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1743,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "46126:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1753,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1745,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "46143:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1747,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1731,
																			"src": "46154:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1746,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2007,
																			2042
																		],
																		"referencedDeclaration": 2007,
																		"src": "46149:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "46149:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46160:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "46149:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1751,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "46148:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46143:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46126:36:0"
											},
											{
												"id": 1838,
												"nodeType": "UncheckedBlock",
												"src": "46563:408:0",
												"statements": [
													{
														"expression": {
															"id": 1763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1754,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "46587:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1759,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1755,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1744,
																				"src": "46597:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1758,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1756,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1731,
																					"src": "46606:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1757,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1744,
																					"src": "46610:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "46606:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "46597:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1760,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "46596:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46621:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "46596:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46587:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1764,
														"nodeType": "ExpressionStatement",
														"src": "46587:35:0"
													},
													{
														"expression": {
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1765,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "46636:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1766,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1744,
																				"src": "46646:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1767,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1731,
																					"src": "46655:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1768,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1744,
																					"src": "46659:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "46655:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "46646:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1771,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "46645:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46670:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "46645:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46636:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1775,
														"nodeType": "ExpressionStatement",
														"src": "46636:35:0"
													},
													{
														"expression": {
															"id": 1785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1776,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "46685:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1777,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1744,
																				"src": "46695:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1780,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1778,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1731,
																					"src": "46704:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1779,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1744,
																					"src": "46708:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "46704:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "46695:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1782,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "46694:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46719:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "46694:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46685:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1786,
														"nodeType": "ExpressionStatement",
														"src": "46685:35:0"
													},
													{
														"expression": {
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1787,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "46734:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1788,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1744,
																				"src": "46744:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1789,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1731,
																					"src": "46753:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1790,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1744,
																					"src": "46757:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "46753:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "46744:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1793,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "46743:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46768:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "46743:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46734:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1797,
														"nodeType": "ExpressionStatement",
														"src": "46734:35:0"
													},
													{
														"expression": {
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1798,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "46783:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1799,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1744,
																				"src": "46793:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1802,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1800,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1731,
																					"src": "46802:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1801,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1744,
																					"src": "46806:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "46802:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "46793:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1804,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "46792:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46817:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "46792:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46783:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1808,
														"nodeType": "ExpressionStatement",
														"src": "46783:35:0"
													},
													{
														"expression": {
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1809,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "46832:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1810,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1744,
																				"src": "46842:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1813,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1811,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1731,
																					"src": "46851:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1812,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1744,
																					"src": "46855:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "46851:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "46842:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1815,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "46841:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46866:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "46841:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46832:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1819,
														"nodeType": "ExpressionStatement",
														"src": "46832:35:0"
													},
													{
														"expression": {
															"id": 1829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1820,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "46881:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1821,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1744,
																				"src": "46891:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1824,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1822,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1731,
																					"src": "46900:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1823,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1744,
																					"src": "46904:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "46900:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "46891:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1826,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "46890:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "46890:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46881:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1830,
														"nodeType": "ExpressionStatement",
														"src": "46881:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1832,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1744,
																	"src": "46941:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1833,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1731,
																		"src": "46949:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1834,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1744,
																		"src": "46953:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "46949:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1831,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "46937:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46937:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1735,
														"id": 1837,
														"nodeType": "Return",
														"src": "46930:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1729,
										"nodeType": "StructuredDocumentation",
										"src": "45107:223:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "45344:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "45357:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "45349:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45349:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45348:11:0"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "45383:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45382:9:0"
									},
									"scope": 2351,
									"src": "45335:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1874,
										"nodeType": "Block",
										"src": "47153:164:0",
										"statements": [
											{
												"id": 1873,
												"nodeType": "UncheckedBlock",
												"src": "47163:148:0",
												"statements": [
													{
														"assignments": [
															1852
														],
														"declarations": [
															{
																"constant": false,
																"id": 1852,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "47195:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1873,
																"src": "47187:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1851,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "47187:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1856,
														"initialValue": {
															"arguments": [
																{
																	"id": 1854,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1843,
																	"src": "47209:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1853,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1840,
																	1875
																],
																"referencedDeclaration": 1840,
																"src": "47204:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "47204:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "47187:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1857,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1852,
																"src": "47232:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1859,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1846,
																						"src": "47259:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1308",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1308",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1858,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2350,
																					"src": "47242:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1308_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1860,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "47242:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1865,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1863,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1861,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1852,
																						"src": "47272:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1862,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1852,
																						"src": "47281:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "47272:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1864,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1843,
																					"src": "47290:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "47272:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "47242:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1868,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47298:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "47242:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47294:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1870,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "47241:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "47232:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1850,
														"id": 1872,
														"nodeType": "Return",
														"src": "47225:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1841,
										"nodeType": "StructuredDocumentation",
										"src": "46983:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "47086:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "47099:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "47091:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "47111:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "47102:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1308",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1845,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1844,
														"name": "Rounding",
														"nameLocations": [
															"47102:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1308,
														"src": "47102:8:0"
													},
													"referencedDeclaration": 1308,
													"src": "47102:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1308",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47090:30:0"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1875,
												"src": "47144:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47144:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47143:9:0"
									},
									"scope": 2351,
									"src": "47077:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2006,
										"nodeType": "Block",
										"src": "47508:922:0",
										"statements": [
											{
												"assignments": [
													1884
												],
												"declarations": [
													{
														"constant": false,
														"id": 1884,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "47526:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2006,
														"src": "47518:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1883,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "47518:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1886,
												"initialValue": {
													"hexValue": "30",
													"id": 1885,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "47535:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47518:18:0"
											},
											{
												"id": 2003,
												"nodeType": "UncheckedBlock",
												"src": "47546:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1887,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1878,
																	"src": "47574:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47583:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "47574:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47589:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "47574:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1901,
														"nodeType": "IfStatement",
														"src": "47570:99:0",
														"trueBody": {
															"id": 1900,
															"nodeType": "Block",
															"src": "47592:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 1894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1892,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1878,
																			"src": "47610:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47620:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "47610:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1895,
																	"nodeType": "ExpressionStatement",
																	"src": "47610:13:0"
																},
																{
																	"expression": {
																		"id": 1898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1896,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "47641:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47651:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "47641:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1899,
																	"nodeType": "ExpressionStatement",
																	"src": "47641:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1902,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1878,
																	"src": "47686:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47695:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "47686:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47700:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "47686:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1916,
														"nodeType": "IfStatement",
														"src": "47682:96:0",
														"trueBody": {
															"id": 1915,
															"nodeType": "Block",
															"src": "47703:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 1909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1907,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1878,
																			"src": "47721:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47731:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "47721:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1910,
																	"nodeType": "ExpressionStatement",
																	"src": "47721:12:0"
																},
																{
																	"expression": {
																		"id": 1913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1911,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "47751:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47761:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "47751:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1914,
																	"nodeType": "ExpressionStatement",
																	"src": "47751:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1917,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1878,
																	"src": "47795:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47804:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "47795:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47809:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "47795:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1931,
														"nodeType": "IfStatement",
														"src": "47791:96:0",
														"trueBody": {
															"id": 1930,
															"nodeType": "Block",
															"src": "47812:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 1924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1922,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1878,
																			"src": "47830:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47840:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "47830:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1925,
																	"nodeType": "ExpressionStatement",
																	"src": "47830:12:0"
																},
																{
																	"expression": {
																		"id": 1928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1926,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "47860:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47870:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "47860:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1929,
																	"nodeType": "ExpressionStatement",
																	"src": "47860:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1932,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1878,
																	"src": "47904:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47913:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "47904:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47918:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "47904:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1946,
														"nodeType": "IfStatement",
														"src": "47900:96:0",
														"trueBody": {
															"id": 1945,
															"nodeType": "Block",
															"src": "47921:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 1939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1937,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1878,
																			"src": "47939:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1938,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47949:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "47939:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1940,
																	"nodeType": "ExpressionStatement",
																	"src": "47939:12:0"
																},
																{
																	"expression": {
																		"id": 1943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1941,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "47969:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47979:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "47969:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1944,
																	"nodeType": "ExpressionStatement",
																	"src": "47969:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1947,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1878,
																	"src": "48013:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48022:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "48013:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48026:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "48013:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1961,
														"nodeType": "IfStatement",
														"src": "48009:93:0",
														"trueBody": {
															"id": 1960,
															"nodeType": "Block",
															"src": "48029:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1952,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1878,
																			"src": "48047:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48057:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "48047:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1955,
																	"nodeType": "ExpressionStatement",
																	"src": "48047:11:0"
																},
																{
																	"expression": {
																		"id": 1958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1956,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "48076:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48086:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "48076:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1959,
																	"nodeType": "ExpressionStatement",
																	"src": "48076:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1962,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1878,
																	"src": "48119:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48128:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "48119:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48132:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "48119:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1976,
														"nodeType": "IfStatement",
														"src": "48115:93:0",
														"trueBody": {
															"id": 1975,
															"nodeType": "Block",
															"src": "48135:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1967,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1878,
																			"src": "48153:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48163:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "48153:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1970,
																	"nodeType": "ExpressionStatement",
																	"src": "48153:11:0"
																},
																{
																	"expression": {
																		"id": 1973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1971,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "48182:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48192:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "48182:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1974,
																	"nodeType": "ExpressionStatement",
																	"src": "48182:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1977,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1878,
																	"src": "48225:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48234:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "48225:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48238:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "48225:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1991,
														"nodeType": "IfStatement",
														"src": "48221:93:0",
														"trueBody": {
															"id": 1990,
															"nodeType": "Block",
															"src": "48241:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1982,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1878,
																			"src": "48259:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48269:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "48259:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1985,
																	"nodeType": "ExpressionStatement",
																	"src": "48259:11:0"
																},
																{
																	"expression": {
																		"id": 1988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1986,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "48288:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48298:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "48288:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1989,
																	"nodeType": "ExpressionStatement",
																	"src": "48288:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1992,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1878,
																	"src": "48331:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48340:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "48331:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48344:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "48331:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2002,
														"nodeType": "IfStatement",
														"src": "48327:64:0",
														"trueBody": {
															"id": 2001,
															"nodeType": "Block",
															"src": "48347:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1997,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "48365:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48375:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "48365:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2000,
																	"nodeType": "ExpressionStatement",
																	"src": "48365:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2004,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1884,
													"src": "48417:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1882,
												"id": 2005,
												"nodeType": "Return",
												"src": "48410:13:0"
											}
										]
									},
									"documentation": {
										"id": 1876,
										"nodeType": "StructuredDocumentation",
										"src": "47323:119:0",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "47456:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "47469:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "47461:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47461:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47460:15:0"
									},
									"returnParameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "47499:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47498:9:0"
									},
									"scope": 2351,
									"src": "47447:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2041,
										"nodeType": "Block",
										"src": "48663:168:0",
										"statements": [
											{
												"id": 2040,
												"nodeType": "UncheckedBlock",
												"src": "48673:152:0",
												"statements": [
													{
														"assignments": [
															2019
														],
														"declarations": [
															{
																"constant": false,
																"id": 2019,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "48705:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 2040,
																"src": "48697:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2018,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "48697:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2023,
														"initialValue": {
															"arguments": [
																{
																	"id": 2021,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2010,
																	"src": "48719:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2020,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2007,
																	2042
																],
																"referencedDeclaration": 2007,
																"src": "48714:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "48714:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "48697:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2024,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2019,
																"src": "48746:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2026,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2013,
																						"src": "48773:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1308",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1308",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2025,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2350,
																					"src": "48756:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1308_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2027,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "48756:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2032,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2030,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2028,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "48786:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2029,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2019,
																						"src": "48791:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "48786:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2031,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2010,
																					"src": "48800:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "48786:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "48756:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48812:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "48756:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48808:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2037,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "48755:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "48746:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2017,
														"id": 2039,
														"nodeType": "Return",
														"src": "48739:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2008,
										"nodeType": "StructuredDocumentation",
										"src": "48436:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "48592:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "48605:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "48597:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48597:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "48621:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "48612:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1308",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2012,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2011,
														"name": "Rounding",
														"nameLocations": [
															"48612:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1308,
														"src": "48612:8:0"
													},
													"referencedDeclaration": 1308,
													"src": "48612:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1308",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48596:34:0"
									},
									"returnParameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "48654:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48653:9:0"
									},
									"scope": 2351,
									"src": "48583:248:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2170,
										"nodeType": "Block",
										"src": "49024:854:0",
										"statements": [
											{
												"assignments": [
													2051
												],
												"declarations": [
													{
														"constant": false,
														"id": 2051,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "49042:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2170,
														"src": "49034:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2050,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "49034:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2053,
												"initialValue": {
													"hexValue": "30",
													"id": 2052,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "49051:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "49034:18:0"
											},
											{
												"id": 2167,
												"nodeType": "UncheckedBlock",
												"src": "49062:787:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2054,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "49090:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49099:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49105:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "49099:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "49090:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2070,
														"nodeType": "IfStatement",
														"src": "49086:103:0",
														"trueBody": {
															"id": 2069,
															"nodeType": "Block",
															"src": "49109:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 2063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2059,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2045,
																			"src": "49127:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2060,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49136:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2061,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49142:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "49136:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "49127:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2064,
																	"nodeType": "ExpressionStatement",
																	"src": "49127:17:0"
																},
																{
																	"expression": {
																		"id": 2067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2065,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2051,
																			"src": "49162:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "49172:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "49162:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2068,
																	"nodeType": "ExpressionStatement",
																	"src": "49162:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2071,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "49206:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49215:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49221:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "49215:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "49206:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2087,
														"nodeType": "IfStatement",
														"src": "49202:103:0",
														"trueBody": {
															"id": 2086,
															"nodeType": "Block",
															"src": "49225:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 2080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2076,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2045,
																			"src": "49243:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2079,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2077,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49252:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2078,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49258:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "49252:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "49243:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2081,
																	"nodeType": "ExpressionStatement",
																	"src": "49243:17:0"
																},
																{
																	"expression": {
																		"id": 2084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2082,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2051,
																			"src": "49278:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2083,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "49288:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "49278:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2085,
																	"nodeType": "ExpressionStatement",
																	"src": "49278:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2088,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "49322:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2091,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49331:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49337:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "49331:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "49322:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2104,
														"nodeType": "IfStatement",
														"src": "49318:103:0",
														"trueBody": {
															"id": 2103,
															"nodeType": "Block",
															"src": "49341:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 2097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2093,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2045,
																			"src": "49359:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2094,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49368:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2095,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49374:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "49368:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "49359:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2098,
																	"nodeType": "ExpressionStatement",
																	"src": "49359:17:0"
																},
																{
																	"expression": {
																		"id": 2101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2099,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2051,
																			"src": "49394:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "49404:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "49394:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2102,
																	"nodeType": "ExpressionStatement",
																	"src": "49394:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2105,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "49438:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49447:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49453:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "49447:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "49438:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2121,
														"nodeType": "IfStatement",
														"src": "49434:100:0",
														"trueBody": {
															"id": 2120,
															"nodeType": "Block",
															"src": "49456:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 2114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2110,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2045,
																			"src": "49474:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2111,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49483:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2112,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49489:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "49483:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "49474:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2115,
																	"nodeType": "ExpressionStatement",
																	"src": "49474:16:0"
																},
																{
																	"expression": {
																		"id": 2118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2116,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2051,
																			"src": "49508:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "49518:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "49508:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2119,
																	"nodeType": "ExpressionStatement",
																	"src": "49508:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2122,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "49551:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49560:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49566:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "49560:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "49551:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2138,
														"nodeType": "IfStatement",
														"src": "49547:100:0",
														"trueBody": {
															"id": 2137,
															"nodeType": "Block",
															"src": "49569:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 2131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2127,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2045,
																			"src": "49587:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49596:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2129,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49602:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "49596:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "49587:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2132,
																	"nodeType": "ExpressionStatement",
																	"src": "49587:16:0"
																},
																{
																	"expression": {
																		"id": 2135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2133,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2051,
																			"src": "49621:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "49631:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "49621:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2136,
																	"nodeType": "ExpressionStatement",
																	"src": "49621:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2139,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "49664:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49673:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49679:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "49673:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "49664:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2155,
														"nodeType": "IfStatement",
														"src": "49660:100:0",
														"trueBody": {
															"id": 2154,
															"nodeType": "Block",
															"src": "49682:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 2148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2144,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2045,
																			"src": "49700:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2145,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49709:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2146,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49715:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "49709:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "49700:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2149,
																	"nodeType": "ExpressionStatement",
																	"src": "49700:16:0"
																},
																{
																	"expression": {
																		"id": 2152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2150,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2051,
																			"src": "49734:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "49744:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "49734:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2153,
																	"nodeType": "ExpressionStatement",
																	"src": "49734:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2156,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "49777:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49786:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49792:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "49786:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "49777:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2166,
														"nodeType": "IfStatement",
														"src": "49773:66:0",
														"trueBody": {
															"id": 2165,
															"nodeType": "Block",
															"src": "49795:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 2163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2161,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2051,
																			"src": "49813:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "49823:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "49813:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2164,
																	"nodeType": "ExpressionStatement",
																	"src": "49813:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2168,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2051,
													"src": "49865:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2049,
												"id": 2169,
												"nodeType": "Return",
												"src": "49858:13:0"
											}
										]
									},
									"documentation": {
										"id": 2043,
										"nodeType": "StructuredDocumentation",
										"src": "48837:120:0",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "48971:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "48985:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "48977:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48977:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48976:15:0"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "49015:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49014:9:0"
									},
									"scope": 2351,
									"src": "48962:916:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2205,
										"nodeType": "Block",
										"src": "50113:170:0",
										"statements": [
											{
												"id": 2204,
												"nodeType": "UncheckedBlock",
												"src": "50123:154:0",
												"statements": [
													{
														"assignments": [
															2183
														],
														"declarations": [
															{
																"constant": false,
																"id": 2183,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "50155:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 2204,
																"src": "50147:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2182,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "50147:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2187,
														"initialValue": {
															"arguments": [
																{
																	"id": 2185,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "50170:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2184,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2171,
																	2206
																],
																"referencedDeclaration": 2171,
																"src": "50164:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50164:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "50147:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2188,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2183,
																"src": "50197:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2190,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2177,
																						"src": "50224:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1308",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1308",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2189,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2350,
																					"src": "50207:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1308_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2191,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "50207:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2194,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2192,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "50237:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2193,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2183,
																						"src": "50243:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "50237:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2195,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "50252:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "50237:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "50207:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50264:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "50207:58:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50260:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2201,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "50206:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "50197:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2181,
														"id": 2203,
														"nodeType": "Return",
														"src": "50190:76:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2172,
										"nodeType": "StructuredDocumentation",
										"src": "49884:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "50041:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "50055:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "50047:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50047:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "50071:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "50062:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1308",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2176,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2175,
														"name": "Rounding",
														"nameLocations": [
															"50062:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1308,
														"src": "50062:8:0"
													},
													"referencedDeclaration": 1308,
													"src": "50062:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1308",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50046:34:0"
									},
									"returnParameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "50104:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50103:9:0"
									},
									"scope": 2351,
									"src": "50032:251:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2292,
										"nodeType": "Block",
										"src": "50603:600:0",
										"statements": [
											{
												"assignments": [
													2215
												],
												"declarations": [
													{
														"constant": false,
														"id": 2215,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "50621:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2292,
														"src": "50613:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2214,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "50613:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2217,
												"initialValue": {
													"hexValue": "30",
													"id": 2216,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "50630:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50613:18:0"
											},
											{
												"id": 2289,
												"nodeType": "UncheckedBlock",
												"src": "50641:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2218,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2209,
																	"src": "50669:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50678:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "50669:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50684:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "50669:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2232,
														"nodeType": "IfStatement",
														"src": "50665:98:0",
														"trueBody": {
															"id": 2231,
															"nodeType": "Block",
															"src": "50687:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 2225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2223,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "50705:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50715:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "50705:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2226,
																	"nodeType": "ExpressionStatement",
																	"src": "50705:13:0"
																},
																{
																	"expression": {
																		"id": 2229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2227,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2215,
																			"src": "50736:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50746:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "50736:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2230,
																	"nodeType": "ExpressionStatement",
																	"src": "50736:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2233,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2209,
																	"src": "50780:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50789:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "50780:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50794:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "50780:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2247,
														"nodeType": "IfStatement",
														"src": "50776:95:0",
														"trueBody": {
															"id": 2246,
															"nodeType": "Block",
															"src": "50797:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 2240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2238,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "50815:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50825:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "50815:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2241,
																	"nodeType": "ExpressionStatement",
																	"src": "50815:12:0"
																},
																{
																	"expression": {
																		"id": 2244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2242,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2215,
																			"src": "50845:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50855:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "50845:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2245,
																	"nodeType": "ExpressionStatement",
																	"src": "50845:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2248,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2209,
																	"src": "50888:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50897:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "50888:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50902:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "50888:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2262,
														"nodeType": "IfStatement",
														"src": "50884:95:0",
														"trueBody": {
															"id": 2261,
															"nodeType": "Block",
															"src": "50905:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 2255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2253,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "50923:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50933:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "50923:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2256,
																	"nodeType": "ExpressionStatement",
																	"src": "50923:12:0"
																},
																{
																	"expression": {
																		"id": 2259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2257,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2215,
																			"src": "50953:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "50963:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "50953:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2260,
																	"nodeType": "ExpressionStatement",
																	"src": "50953:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2263,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2209,
																	"src": "50996:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51005:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "50996:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "51010:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "50996:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2277,
														"nodeType": "IfStatement",
														"src": "50992:95:0",
														"trueBody": {
															"id": 2276,
															"nodeType": "Block",
															"src": "51013:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 2270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2268,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "51031:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "51041:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "51031:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2271,
																	"nodeType": "ExpressionStatement",
																	"src": "51031:12:0"
																},
																{
																	"expression": {
																		"id": 2274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2272,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2215,
																			"src": "51061:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "51071:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "51061:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2275,
																	"nodeType": "ExpressionStatement",
																	"src": "51061:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2278,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2209,
																	"src": "51104:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51113:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "51104:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "51117:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "51104:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2288,
														"nodeType": "IfStatement",
														"src": "51100:64:0",
														"trueBody": {
															"id": 2287,
															"nodeType": "Block",
															"src": "51120:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 2285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2283,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2215,
																			"src": "51138:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "51148:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "51138:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2286,
																	"nodeType": "ExpressionStatement",
																	"src": "51138:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2290,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2215,
													"src": "51190:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2213,
												"id": 2291,
												"nodeType": "Return",
												"src": "51183:13:0"
											}
										]
									},
									"documentation": {
										"id": 2207,
										"nodeType": "StructuredDocumentation",
										"src": "50289:246:0",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "50549:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "50564:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "50556:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50555:15:0"
									},
									"returnParameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "50594:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50594:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50593:9:0"
									},
									"scope": 2351,
									"src": "50540:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2330,
										"nodeType": "Block",
										"src": "51440:177:0",
										"statements": [
											{
												"id": 2329,
												"nodeType": "UncheckedBlock",
												"src": "51450:161:0",
												"statements": [
													{
														"assignments": [
															2305
														],
														"declarations": [
															{
																"constant": false,
																"id": 2305,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "51482:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 2329,
																"src": "51474:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2304,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "51474:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2309,
														"initialValue": {
															"arguments": [
																{
																	"id": 2307,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2296,
																	"src": "51498:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2306,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2293,
																	2331
																],
																"referencedDeclaration": 2293,
																"src": "51491:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "51491:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "51474:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2310,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2305,
																"src": "51525:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2312,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2299,
																						"src": "51552:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1308",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1308",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2311,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2350,
																					"src": "51535:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1308_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2313,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "51535:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2321,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2319,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2314,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "51565:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2317,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2315,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2305,
																									"src": "51571:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2316,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "51581:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "51571:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2318,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "51570:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "51565:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2320,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2296,
																					"src": "51586:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "51565:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "51535:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "51598:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "51535:64:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "51594:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2326,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "51534:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "51525:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2303,
														"id": 2328,
														"nodeType": "Return",
														"src": "51518:82:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2294,
										"nodeType": "StructuredDocumentation",
										"src": "51209:144:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "51367:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "51382:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "51374:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51374:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "51398:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "51389:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1308",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2298,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2297,
														"name": "Rounding",
														"nameLocations": [
															"51389:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1308,
														"src": "51389:8:0"
													},
													"referencedDeclaration": 1308,
													"src": "51389:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1308",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51373:34:0"
									},
									"returnParameters": {
										"id": 2303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "51431:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51430:9:0"
									},
									"scope": 2351,
									"src": "51358:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2349,
										"nodeType": "Block",
										"src": "51815:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2342,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2335,
																	"src": "51838:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1308",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1308",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "51832:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2340,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "51832:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "51832:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51850:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "51832:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "51855:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "51832:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2339,
												"id": 2348,
												"nodeType": "Return",
												"src": "51825:31:0"
											}
										]
									},
									"documentation": {
										"id": 2332,
										"nodeType": "StructuredDocumentation",
										"src": "51623:113:0",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "51750:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "51776:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "51767:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1308",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2334,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2333,
														"name": "Rounding",
														"nameLocations": [
															"51767:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1308,
														"src": "51767:8:0"
													},
													"referencedDeclaration": 1308,
													"src": "51767:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1308",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51766:19:0"
									},
									"returnParameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "51809:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2337,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "51809:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51808:6:0"
									},
									"scope": 2351,
									"src": "51741:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3604,
							"src": "36951:14914:0",
							"usedErrors": [
								1303
							],
							"usedEvents": []
						},
						{
							"id": 2352,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "52005:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2353,
								"nodeType": "StructuredDocumentation",
								"src": "52031:80:0",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2455,
							"linearizedBaseContracts": [
								2455
							],
							"name": "SignedMath",
							"nameLocation": "52120:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2370,
										"nodeType": "Block",
										"src": "52272:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2363,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2356,
															"src": "52289:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2364,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2358,
															"src": "52293:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "52289:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2367,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2358,
														"src": "52301:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "52289:13:0",
													"trueExpression": {
														"id": 2366,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2356,
														"src": "52297:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2362,
												"id": 2369,
												"nodeType": "Return",
												"src": "52282:20:0"
											}
										]
									},
									"documentation": {
										"id": 2354,
										"nodeType": "StructuredDocumentation",
										"src": "52137:66:0",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "52217:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "52228:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "52221:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2355,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "52221:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "52238:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "52231:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2357,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "52231:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52220:20:0"
									},
									"returnParameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "52264:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2360,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "52264:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52263:8:0"
									},
									"scope": 2455,
									"src": "52208:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2388,
										"nodeType": "Block",
										"src": "52451:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2381,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2374,
															"src": "52468:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2382,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2376,
															"src": "52472:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "52468:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2385,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2376,
														"src": "52480:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "52468:13:0",
													"trueExpression": {
														"id": 2384,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2374,
														"src": "52476:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2380,
												"id": 2387,
												"nodeType": "Return",
												"src": "52461:20:0"
											}
										]
									},
									"documentation": {
										"id": 2372,
										"nodeType": "StructuredDocumentation",
										"src": "52315:67:0",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "52396:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "52407:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "52400:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2373,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "52400:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2376,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "52417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "52410:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2375,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "52410:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52399:20:0"
									},
									"returnParameters": {
										"id": 2380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "52443:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2378,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "52443:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52442:8:0"
									},
									"scope": 2455,
									"src": "52387:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2432,
										"nodeType": "Block",
										"src": "52693:162:0",
										"statements": [
											{
												"assignments": [
													2400
												],
												"declarations": [
													{
														"constant": false,
														"id": 2400,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "52762:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 2432,
														"src": "52755:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2399,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "52755:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2413,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2401,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2392,
																	"src": "52767:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2402,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2394,
																	"src": "52771:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "52767:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2404,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "52766:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2405,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2392,
																				"src": "52778:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2406,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2394,
																				"src": "52782:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "52778:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "52777:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "52788:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "52777:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2411,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "52776:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "52766:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "52755:35:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2414,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2400,
														"src": "52807:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2419,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2400,
																						"src": "52827:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2418,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "52819:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2417,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "52819:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2420,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "52819:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2421,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "52833:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "52819:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "52812:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2415,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "52812:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "52812:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2424,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2392,
																				"src": "52841:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2425,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2394,
																				"src": "52845:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "52841:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2427,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "52840:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "52812:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2429,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "52811:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "52807:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2398,
												"id": 2431,
												"nodeType": "Return",
												"src": "52800:48:0"
											}
										]
									},
									"documentation": {
										"id": 2390,
										"nodeType": "StructuredDocumentation",
										"src": "52494:126:0",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "52634:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "52649:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "52642:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2391,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "52642:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "52659:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "52652:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2393,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "52652:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52641:20:0"
									},
									"returnParameters": {
										"id": 2398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "52685:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2396,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "52685:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52684:8:0"
									},
									"scope": 2455,
									"src": "52625:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2453,
										"nodeType": "Block",
										"src": "52999:158:0",
										"statements": [
											{
												"id": 2452,
												"nodeType": "UncheckedBlock",
												"src": "53009:142:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2443,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2436,
																			"src": "53124:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53129:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "53124:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "53137:2:0",
																		"subExpression": {
																			"id": 2447,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2436,
																			"src": "53138:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "53124:15:0",
																	"trueExpression": {
																		"id": 2446,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2436,
																		"src": "53133:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "53116:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2441,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "53116:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53116:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2440,
														"id": 2451,
														"nodeType": "Return",
														"src": "53109:31:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2434,
										"nodeType": "StructuredDocumentation",
										"src": "52861:78:0",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "52953:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "52964:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2454,
												"src": "52957:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2435,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "52957:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52956:10:0"
									},
									"returnParameters": {
										"id": 2440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2454,
												"src": "52990:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52990:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52989:9:0"
									},
									"scope": 2455,
									"src": "52944:213:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3604,
							"src": "52112:1047:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 2456,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "53283:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2457,
								"nodeType": "StructuredDocumentation",
								"src": "53311:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2705,
							"linearizedBaseContracts": [
								2705
							],
							"name": "Strings",
							"nameLocation": "53354:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2460,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "53393:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2705,
									"src": "53368:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2458,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "53368:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2459,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "53406:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2463,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "53453:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 2705,
									"src": "53430:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2461,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "53430:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 2462,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "53470:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 2464,
										"nodeType": "StructuredDocumentation",
										"src": "53479:81:0",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 2470,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "53571:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "53608:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2470,
												"src": "53600:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "53623:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2470,
												"src": "53615:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53615:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53599:31:0"
									},
									"src": "53565:66:0"
								},
								{
									"body": {
										"id": 2517,
										"nodeType": "Block",
										"src": "53803:627:0",
										"statements": [
											{
												"id": 2516,
												"nodeType": "UncheckedBlock",
												"src": "53813:611:0",
												"statements": [
													{
														"assignments": [
															2479
														],
														"declarations": [
															{
																"constant": false,
																"id": 2479,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "53845:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 2516,
																"src": "53837:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2478,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "53837:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2486,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2482,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2473,
																		"src": "53865:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2480,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2351,
																		"src": "53854:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2351_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "53859:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2171,
																	"src": "53854:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 2483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "53854:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53874:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "53854:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "53837:38:0"
													},
													{
														"assignments": [
															2488
														],
														"declarations": [
															{
																"constant": false,
																"id": 2488,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "53903:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 2516,
																"src": "53889:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 2487,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "53889:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2493,
														"initialValue": {
															"arguments": [
																{
																	"id": 2491,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2479,
																	"src": "53923:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "53912:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 2489,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "53916:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 2492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53912:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "53889:41:0"
													},
													{
														"assignments": [
															2495
														],
														"declarations": [
															{
																"constant": false,
																"id": 2495,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "53952:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 2516,
																"src": "53944:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2494,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "53944:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2496,
														"nodeType": "VariableDeclarationStatement",
														"src": "53944:11:0"
													},
													{
														"AST": {
															"nativeSrc": "54025:67:0",
															"nodeType": "YulBlock",
															"src": "54025:67:0",
															"statements": [
																{
																	"nativeSrc": "54043:35:0",
																	"nodeType": "YulAssignment",
																	"src": "54043:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "54054:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "54054:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "54066:2:0",
																						"nodeType": "YulLiteral",
																						"src": "54066:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "54070:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "54070:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "54062:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "54062:3:0"
																				},
																				"nativeSrc": "54062:15:0",
																				"nodeType": "YulFunctionCall",
																				"src": "54062:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "54050:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "54050:3:0"
																		},
																		"nativeSrc": "54050:28:0",
																		"nodeType": "YulFunctionCall",
																		"src": "54050:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "54043:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "54043:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2488,
																"isOffset": false,
																"isSlot": false,
																"src": "54054:6:0",
																"valueSize": 1
															},
															{
																"declaration": 2479,
																"isOffset": false,
																"isSlot": false,
																"src": "54070:6:0",
																"valueSize": 1
															},
															{
																"declaration": 2495,
																"isOffset": false,
																"isSlot": false,
																"src": "54043:3:0",
																"valueSize": 1
															}
														],
														"id": 2497,
														"nodeType": "InlineAssembly",
														"src": "54016:76:0"
													},
													{
														"body": {
															"id": 2512,
															"nodeType": "Block",
															"src": "54118:269:0",
															"statements": [
																{
																	"expression": {
																		"id": 2500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "54136:5:0",
																		"subExpression": {
																			"id": 2499,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2495,
																			"src": "54136:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2501,
																	"nodeType": "ExpressionStatement",
																	"src": "54136:5:0"
																},
																{
																	"AST": {
																		"nativeSrc": "54219:86:0",
																		"nodeType": "YulBlock",
																		"src": "54219:86:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "54249:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "54249:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "54263:5:0",
																											"nodeType": "YulIdentifier",
																											"src": "54263:5:0"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "54270:2:0",
																											"nodeType": "YulLiteral",
																											"src": "54270:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "54259:3:0",
																										"nodeType": "YulIdentifier",
																										"src": "54259:3:0"
																									},
																									"nativeSrc": "54259:14:0",
																									"nodeType": "YulFunctionCall",
																									"src": "54259:14:0"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "54275:10:0",
																									"nodeType": "YulIdentifier",
																									"src": "54275:10:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "54254:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "54254:4:0"
																							},
																							"nativeSrc": "54254:32:0",
																							"nodeType": "YulFunctionCall",
																							"src": "54254:32:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "54241:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "54241:7:0"
																					},
																					"nativeSrc": "54241:46:0",
																					"nodeType": "YulFunctionCall",
																					"src": "54241:46:0"
																				},
																				"nativeSrc": "54241:46:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "54241:46:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 2460,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "54275:10:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2495,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "54249:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2473,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "54263:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 2502,
																	"nodeType": "InlineAssembly",
																	"src": "54210:95:0"
																},
																{
																	"expression": {
																		"id": 2505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2503,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "54322:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 2504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "54331:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "54322:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2506,
																	"nodeType": "ExpressionStatement",
																	"src": "54322:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2507,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2473,
																			"src": "54355:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "54364:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "54355:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2511,
																	"nodeType": "IfStatement",
																	"src": "54351:21:0",
																	"trueBody": {
																		"id": 2510,
																		"nodeType": "Break",
																		"src": "54367:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 2498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "54112:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 2513,
														"nodeType": "WhileStatement",
														"src": "54105:282:0"
													},
													{
														"expression": {
															"id": 2514,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2488,
															"src": "54407:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2477,
														"id": 2515,
														"nodeType": "Return",
														"src": "54400:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2471,
										"nodeType": "StructuredDocumentation",
										"src": "53637:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "53741:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "53758:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "53750:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53749:15:0"
									},
									"returnParameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "53788:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2475,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "53788:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53787:15:0"
									},
									"scope": 2705,
									"src": "53732:698:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2543,
										"nodeType": "Block",
										"src": "54606:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2521,
																	"src": "54637:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54645:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "54637:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 2533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54655:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "54637:20:0",
															"trueExpression": {
																"hexValue": "2d",
																"id": 2532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54649:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2538,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2521,
																			"src": "54683:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 2536,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2455,
																			"src": "54668:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2455_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 2537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "54679:3:0",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2454,
																		"src": "54668:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 2539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "54668:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2535,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2518,
																"src": "54659:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 2540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "54659:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 2527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "54623:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 2526,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "54623:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 2528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "54630:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "54623:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 2541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54623:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2525,
												"id": 2542,
												"nodeType": "Return",
												"src": "54616:75:0"
											}
										]
									},
									"documentation": {
										"id": 2519,
										"nodeType": "StructuredDocumentation",
										"src": "54436:89:0",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 2544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "54539:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "54561:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2544,
												"src": "54554:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2520,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "54554:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54553:14:0"
									},
									"returnParameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2544,
												"src": "54591:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2523,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "54591:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54590:15:0"
									},
									"scope": 2705,
									"src": "54530:168:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2563,
										"nodeType": "Block",
										"src": "54877:100:0",
										"statements": [
											{
												"id": 2562,
												"nodeType": "UncheckedBlock",
												"src": "54887:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2553,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2547,
																	"src": "54930:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2556,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2547,
																				"src": "54949:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2554,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2351,
																				"src": "54937:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2351_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 2555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "54942:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2293,
																			"src": "54937:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "54937:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "54958:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "54937:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2552,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2564,
																	2647,
																	2667
																],
																"referencedDeclaration": 2647,
																"src": "54918:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "54918:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2551,
														"id": 2561,
														"nodeType": "Return",
														"src": "54911:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2545,
										"nodeType": "StructuredDocumentation",
										"src": "54704:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "54812:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2547,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "54832:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "54824:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54823:15:0"
									},
									"returnParameters": {
										"id": 2551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "54862:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2549,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "54862:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54861:15:0"
									},
									"scope": 2705,
									"src": "54803:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2646,
										"nodeType": "Block",
										"src": "55190:435:0",
										"statements": [
											{
												"assignments": [
													2575
												],
												"declarations": [
													{
														"constant": false,
														"id": 2575,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "55208:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2646,
														"src": "55200:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2574,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "55200:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2577,
												"initialValue": {
													"id": 2576,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2567,
													"src": "55221:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55200:26:0"
											},
											{
												"assignments": [
													2579
												],
												"declarations": [
													{
														"constant": false,
														"id": 2579,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "55249:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2646,
														"src": "55236:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2578,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "55236:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2588,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "55268:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2583,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2569,
																	"src": "55272:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "55268:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55281:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "55268:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2581,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "55258:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2580,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "55262:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55258:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55236:47:0"
											},
											{
												"expression": {
													"id": 2593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2589,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2579,
															"src": "55293:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2591,
														"indexExpression": {
															"hexValue": "30",
															"id": 2590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55300:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "55293:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2592,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55305:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "55293:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2594,
												"nodeType": "ExpressionStatement",
												"src": "55293:15:0"
											},
											{
												"expression": {
													"id": 2599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2595,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2579,
															"src": "55318:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2597,
														"indexExpression": {
															"hexValue": "31",
															"id": 2596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55325:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "55318:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55330:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "55318:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2600,
												"nodeType": "ExpressionStatement",
												"src": "55318:15:0"
											},
											{
												"body": {
													"id": 2629,
													"nodeType": "Block",
													"src": "55388:95:0",
													"statements": [
														{
															"expression": {
																"id": 2623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2615,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2579,
																		"src": "55402:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2617,
																	"indexExpression": {
																		"id": 2616,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2602,
																		"src": "55409:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "55402:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2618,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2460,
																		"src": "55414:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2622,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2619,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2575,
																			"src": "55425:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "55438:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "55425:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "55414:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "55402:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2624,
															"nodeType": "ExpressionStatement",
															"src": "55402:40:0"
														},
														{
															"expression": {
																"id": 2627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2625,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2575,
																	"src": "55456:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "55471:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "55456:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2628,
															"nodeType": "ExpressionStatement",
															"src": "55456:16:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2609,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2602,
														"src": "55376:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2610,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55380:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "55376:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2630,
												"initializationExpression": {
													"assignments": [
														2602
													],
													"declarations": [
														{
															"constant": false,
															"id": 2602,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "55356:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2630,
															"src": "55348:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2601,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "55348:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2608,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55360:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2604,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2569,
																"src": "55364:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "55360:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55373:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "55360:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "55348:26:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "55383:3:0",
														"subExpression": {
															"id": 2612,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2602,
															"src": "55385:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2614,
													"nodeType": "ExpressionStatement",
													"src": "55383:3:0"
												},
												"nodeType": "ForStatement",
												"src": "55343:140:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2631,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2575,
														"src": "55496:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55510:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "55496:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2640,
												"nodeType": "IfStatement",
												"src": "55492:96:0",
												"trueBody": {
													"id": 2639,
													"nodeType": "Block",
													"src": "55513:75:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2635,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2567,
																		"src": "55563:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2636,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2569,
																		"src": "55570:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2634,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2470,
																	"src": "55534:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 2637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55534:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2638,
															"nodeType": "RevertStatement",
															"src": "55527:50:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2643,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2579,
															"src": "55611:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2642,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "55604:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2641,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "55604:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 2644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55604:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2573,
												"id": 2645,
												"nodeType": "Return",
												"src": "55597:21:0"
											}
										]
									},
									"documentation": {
										"id": 2565,
										"nodeType": "StructuredDocumentation",
										"src": "54983:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "55109:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "55129:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "55121:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "55144:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "55136:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55120:31:0"
									},
									"returnParameters": {
										"id": 2573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "55175:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2571,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "55175:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55174:15:0"
									},
									"scope": 2705,
									"src": "55100:525:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2666,
										"nodeType": "Block",
										"src": "55857:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2660,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2650,
																			"src": "55902:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "55894:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2658,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "55894:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "55894:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "55886:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2656,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "55886:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "55886:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2663,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2463,
															"src": "55910:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2655,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2564,
															2647,
															2667
														],
														"referencedDeclaration": 2647,
														"src": "55874:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55874:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2654,
												"id": 2665,
												"nodeType": "Return",
												"src": "55867:58:0"
											}
										]
									},
									"documentation": {
										"id": 2648,
										"nodeType": "StructuredDocumentation",
										"src": "55631:148:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "55793:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2650,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "55813:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2667,
												"src": "55805:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55804:14:0"
									},
									"returnParameters": {
										"id": 2654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2667,
												"src": "55842:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2652,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "55842:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55841:15:0"
									},
									"scope": 2705,
									"src": "55784:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2703,
										"nodeType": "Block",
										"src": "56087:104:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2679,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2670,
																		"src": "56110:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "56104:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2677,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "56104:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56104:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "56113:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "56104:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2684,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2672,
																		"src": "56129:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "56123:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2682,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "56123:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56123:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "56132:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "56123:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "56104:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2691,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2670,
																			"src": "56158:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "56152:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2689,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "56152:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "56152:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2688,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "56142:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "56142:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2697,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2672,
																			"src": "56181:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "56175:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2695,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "56175:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "56175:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2694,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "56165:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "56165:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "56142:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "56104:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2676,
												"id": 2702,
												"nodeType": "Return",
												"src": "56097:87:0"
											}
										]
									},
									"documentation": {
										"id": 2668,
										"nodeType": "StructuredDocumentation",
										"src": "55938:66:0",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "56018:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2670,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "56038:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "56024:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2669,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "56024:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "56055:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "56041:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2671,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "56041:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56023:34:0"
									},
									"returnParameters": {
										"id": 2676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "56081:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2674,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "56081:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56080:6:0"
									},
									"scope": 2705,
									"src": "56009:182:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3604,
							"src": "53346:2847:0",
							"usedErrors": [
								2470
							],
							"usedEvents": []
						},
						{
							"id": 2706,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "56361:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MessageHashUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2707,
								"nodeType": "StructuredDocumentation",
								"src": "56388:330:0",
								"text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
							},
							"fullyImplemented": true,
							"id": 2776,
							"linearizedBaseContracts": [
								2776
							],
							"name": "MessageHashUtils",
							"nameLocation": "56727:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2716,
										"nodeType": "Block",
										"src": "57512:368:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "57574:300:0",
													"nodeType": "YulBlock",
													"src": "57574:300:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "57595:4:0",
																		"nodeType": "YulLiteral",
																		"src": "57595:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nativeSrc": "57601:34:0",
																		"nodeType": "YulLiteral",
																		"src": "57601:34:0",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "57588:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "57588:6:0"
																},
																"nativeSrc": "57588:48:0",
																"nodeType": "YulFunctionCall",
																"src": "57588:48:0"
															},
															"nativeSrc": "57588:48:0",
															"nodeType": "YulExpressionStatement",
															"src": "57588:48:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "57697:4:0",
																		"nodeType": "YulLiteral",
																		"src": "57697:4:0",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "messageHash",
																		"nativeSrc": "57703:11:0",
																		"nodeType": "YulIdentifier",
																		"src": "57703:11:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "57690:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "57690:6:0"
																},
																"nativeSrc": "57690:25:0",
																"nodeType": "YulFunctionCall",
																"src": "57690:25:0"
															},
															"nativeSrc": "57690:25:0",
															"nodeType": "YulExpressionStatement",
															"src": "57690:25:0"
														},
														{
															"nativeSrc": "57769:31:0",
															"nodeType": "YulAssignment",
															"src": "57769:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "57789:4:0",
																		"nodeType": "YulLiteral",
																		"src": "57789:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "57795:4:0",
																		"nodeType": "YulLiteral",
																		"src": "57795:4:0",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "57779:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "57779:9:0"
																},
																"nativeSrc": "57779:21:0",
																"nodeType": "YulFunctionCall",
																"src": "57779:21:0"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "57769:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "57769:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2713,
														"isOffset": false,
														"isSlot": false,
														"src": "57769:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2710,
														"isOffset": false,
														"isSlot": false,
														"src": "57703:11:0",
														"valueSize": 1
													}
												],
												"id": 2715,
												"nodeType": "InlineAssembly",
												"src": "57565:309:0"
											}
										]
									},
									"documentation": {
										"id": 2708,
										"nodeType": "StructuredDocumentation",
										"src": "56750:665:0",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
									},
									"id": 2717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "57429:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2710,
												"mutability": "mutable",
												"name": "messageHash",
												"nameLocation": "57460:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2717,
												"src": "57452:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2709,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "57452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57451:21:0"
									},
									"returnParameters": {
										"id": 2714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2713,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "57504:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2717,
												"src": "57496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2712,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "57496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57495:16:0"
									},
									"scope": 2776,
									"src": "57420:460:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2742,
										"nodeType": "Block",
										"src": "58432:143:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 2729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "58484:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2734,
																						"name": "message",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2720,
																						"src": "58541:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 2735,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "58549:6:0",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "58541:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2732,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2705,
																					"src": "58524:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$2705_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 2733,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "58532:8:0",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2518,
																				"src": "58524:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 2736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "58524:32:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "58518:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2730,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "58518:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "58518:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 2738,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2720,
																	"src": "58559:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "58471:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2726,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "58471:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "58477:6:0",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "58471:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "58471:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2725,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "58461:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58461:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2724,
												"id": 2741,
												"nodeType": "Return",
												"src": "58442:126:0"
											}
										]
									},
									"documentation": {
										"id": 2718,
										"nodeType": "StructuredDocumentation",
										"src": "57886:455:0",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
									},
									"id": 2743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "58355:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2720,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "58391:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2743,
												"src": "58378:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2719,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "58378:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58377:22:0"
									},
									"returnParameters": {
										"id": 2724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2743,
												"src": "58423:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2722,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "58423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58422:9:0"
									},
									"scope": 2776,
									"src": "58346:229:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2762,
										"nodeType": "Block",
										"src": "59029:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 2756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "59073:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 2757,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2746,
																	"src": "59085:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2758,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2748,
																	"src": "59096:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2754,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "59056:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "59060:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "59056:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59056:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2753,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "59046:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59046:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2752,
												"id": 2761,
												"nodeType": "Return",
												"src": "59039:63:0"
											}
										]
									},
									"documentation": {
										"id": 2744,
										"nodeType": "StructuredDocumentation",
										"src": "58581:332:0",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
									},
									"id": 2763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "58927:31:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2746,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "58967:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2763,
												"src": "58959:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2748,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "58991:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2763,
												"src": "58978:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2747,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "58978:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58958:38:0"
									},
									"returnParameters": {
										"id": 2752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2763,
												"src": "59020:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2750,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "59020:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59019:9:0"
									},
									"scope": 2776,
									"src": "58918:191:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2774,
										"nodeType": "Block",
										"src": "59660:292:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "59722:224:0",
													"nodeType": "YulBlock",
													"src": "59722:224:0",
													"statements": [
														{
															"nativeSrc": "59736:22:0",
															"nodeType": "YulVariableDeclaration",
															"src": "59736:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "59753:4:0",
																		"nodeType": "YulLiteral",
																		"src": "59753:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "59747:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "59747:5:0"
																},
																"nativeSrc": "59747:11:0",
																"nodeType": "YulFunctionCall",
																"src": "59747:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "59740:3:0",
																	"nodeType": "YulTypedName",
																	"src": "59740:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "59778:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "59778:3:0"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nativeSrc": "59783:10:0",
																		"nodeType": "YulLiteral",
																		"src": "59783:10:0",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "59771:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "59771:6:0"
																},
																"nativeSrc": "59771:23:0",
																"nodeType": "YulFunctionCall",
																"src": "59771:23:0"
															},
															"nativeSrc": "59771:23:0",
															"nodeType": "YulExpressionStatement",
															"src": "59771:23:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "59818:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "59818:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "59823:4:0",
																				"nodeType": "YulLiteral",
																				"src": "59823:4:0",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "59814:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "59814:3:0"
																		},
																		"nativeSrc": "59814:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "59814:14:0"
																	},
																	{
																		"name": "domainSeparator",
																		"nativeSrc": "59830:15:0",
																		"nodeType": "YulIdentifier",
																		"src": "59830:15:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "59807:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "59807:6:0"
																},
																"nativeSrc": "59807:39:0",
																"nodeType": "YulFunctionCall",
																"src": "59807:39:0"
															},
															"nativeSrc": "59807:39:0",
															"nodeType": "YulExpressionStatement",
															"src": "59807:39:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "59870:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "59870:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "59875:4:0",
																				"nodeType": "YulLiteral",
																				"src": "59875:4:0",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "59866:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "59866:3:0"
																		},
																		"nativeSrc": "59866:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "59866:14:0"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "59882:10:0",
																		"nodeType": "YulIdentifier",
																		"src": "59882:10:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "59859:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "59859:6:0"
																},
																"nativeSrc": "59859:34:0",
																"nodeType": "YulFunctionCall",
																"src": "59859:34:0"
															},
															"nativeSrc": "59859:34:0",
															"nodeType": "YulExpressionStatement",
															"src": "59859:34:0"
														},
														{
															"nativeSrc": "59906:30:0",
															"nodeType": "YulAssignment",
															"src": "59906:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "59926:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "59926:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "59931:4:0",
																		"nodeType": "YulLiteral",
																		"src": "59931:4:0",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "59916:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "59916:9:0"
																},
																"nativeSrc": "59916:20:0",
																"nodeType": "YulFunctionCall",
																"src": "59916:20:0"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "59906:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "59906:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2771,
														"isOffset": false,
														"isSlot": false,
														"src": "59906:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2766,
														"isOffset": false,
														"isSlot": false,
														"src": "59830:15:0",
														"valueSize": 1
													},
													{
														"declaration": 2768,
														"isOffset": false,
														"isSlot": false,
														"src": "59882:10:0",
														"valueSize": 1
													}
												],
												"id": 2773,
												"nodeType": "InlineAssembly",
												"src": "59713:233:0"
											}
										]
									},
									"documentation": {
										"id": 2764,
										"nodeType": "StructuredDocumentation",
										"src": "59115:431:0",
										"text": " @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
									},
									"id": 2775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "59560:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2766,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "59584:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "59576:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2765,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "59576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "59609:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "59601:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2767,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "59601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59575:45:0"
									},
									"returnParameters": {
										"id": 2772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2771,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "59652:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "59644:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2770,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "59644:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59643:16:0"
									},
									"scope": 2776,
									"src": "59551:401:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3604,
							"src": "56719:3235:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 2777,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "60174:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2778,
								"nodeType": "StructuredDocumentation",
								"src": "60200:1025:0",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2885,
							"linearizedBaseContracts": [
								2885
							],
							"name": "StorageSlot",
							"nameLocation": "61234:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2781,
									"members": [
										{
											"constant": false,
											"id": 2780,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "61289:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2781,
											"src": "61281:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2779,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "61281:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "61259:11:0",
									"nodeType": "StructDefinition",
									"scope": 2885,
									"src": "61252:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2784,
									"members": [
										{
											"constant": false,
											"id": 2783,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "61341:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2784,
											"src": "61336:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2782,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "61336:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "61314:11:0",
									"nodeType": "StructDefinition",
									"scope": 2885,
									"src": "61307:46:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2787,
									"members": [
										{
											"constant": false,
											"id": 2786,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "61396:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2787,
											"src": "61388:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2785,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "61388:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "61366:11:0",
									"nodeType": "StructDefinition",
									"scope": 2885,
									"src": "61359:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2790,
									"members": [
										{
											"constant": false,
											"id": 2789,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "61451:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2790,
											"src": "61443:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2788,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "61443:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "61421:11:0",
									"nodeType": "StructDefinition",
									"scope": 2885,
									"src": "61414:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2793,
									"members": [
										{
											"constant": false,
											"id": 2792,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "61504:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2793,
											"src": "61497:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2791,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "61497:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "61476:10:0",
									"nodeType": "StructDefinition",
									"scope": 2885,
									"src": "61469:47:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2796,
									"members": [
										{
											"constant": false,
											"id": 2795,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "61555:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 2796,
											"src": "61549:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2794,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "61549:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "61529:9:0",
									"nodeType": "StructDefinition",
									"scope": 2885,
									"src": "61522:45:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2806,
										"nodeType": "Block",
										"src": "61749:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "61811:38:0",
													"nodeType": "YulBlock",
													"src": "61811:38:0",
													"statements": [
														{
															"nativeSrc": "61825:14:0",
															"nodeType": "YulAssignment",
															"src": "61825:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "61835:4:0",
																"nodeType": "YulIdentifier",
																"src": "61835:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "61825:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "61825:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2803,
														"isOffset": false,
														"isSlot": true,
														"src": "61825:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2799,
														"isOffset": false,
														"isSlot": false,
														"src": "61835:4:0",
														"valueSize": 1
													}
												],
												"id": 2805,
												"nodeType": "InlineAssembly",
												"src": "61802:47:0"
											}
										]
									},
									"documentation": {
										"id": 2797,
										"nodeType": "StructuredDocumentation",
										"src": "61573:87:0",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "61674:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2799,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "61697:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2807,
												"src": "61689:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2798,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "61689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61688:14:0"
									},
									"returnParameters": {
										"id": 2804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2803,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "61746:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2807,
												"src": "61726:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2781_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2802,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2801,
														"name": "AddressSlot",
														"nameLocations": [
															"61726:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2781,
														"src": "61726:11:0"
													},
													"referencedDeclaration": 2781,
													"src": "61726:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2781_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61725:23:0"
									},
									"scope": 2885,
									"src": "61665:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2817,
										"nodeType": "Block",
										"src": "62037:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "62099:38:0",
													"nodeType": "YulBlock",
													"src": "62099:38:0",
													"statements": [
														{
															"nativeSrc": "62113:14:0",
															"nodeType": "YulAssignment",
															"src": "62113:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "62123:4:0",
																"nodeType": "YulIdentifier",
																"src": "62123:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "62113:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "62113:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2814,
														"isOffset": false,
														"isSlot": true,
														"src": "62113:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2810,
														"isOffset": false,
														"isSlot": false,
														"src": "62123:4:0",
														"valueSize": 1
													}
												],
												"id": 2816,
												"nodeType": "InlineAssembly",
												"src": "62090:47:0"
											}
										]
									},
									"documentation": {
										"id": 2808,
										"nodeType": "StructuredDocumentation",
										"src": "61861:87:0",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "61962:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2810,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "61985:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2818,
												"src": "61977:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2809,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "61977:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61976:14:0"
									},
									"returnParameters": {
										"id": 2815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2814,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "62034:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2818,
												"src": "62014:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2784_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2813,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2812,
														"name": "BooleanSlot",
														"nameLocations": [
															"62014:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2784,
														"src": "62014:11:0"
													},
													"referencedDeclaration": 2784,
													"src": "62014:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2784_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62013:23:0"
									},
									"scope": 2885,
									"src": "61953:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2828,
										"nodeType": "Block",
										"src": "62325:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "62387:38:0",
													"nodeType": "YulBlock",
													"src": "62387:38:0",
													"statements": [
														{
															"nativeSrc": "62401:14:0",
															"nodeType": "YulAssignment",
															"src": "62401:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "62411:4:0",
																"nodeType": "YulIdentifier",
																"src": "62411:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "62401:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "62401:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2825,
														"isOffset": false,
														"isSlot": true,
														"src": "62401:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2821,
														"isOffset": false,
														"isSlot": false,
														"src": "62411:4:0",
														"valueSize": 1
													}
												],
												"id": 2827,
												"nodeType": "InlineAssembly",
												"src": "62378:47:0"
											}
										]
									},
									"documentation": {
										"id": 2819,
										"nodeType": "StructuredDocumentation",
										"src": "62149:87:0",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "62250:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2821,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "62273:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2829,
												"src": "62265:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2820,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "62265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62264:14:0"
									},
									"returnParameters": {
										"id": 2826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2825,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "62322:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2829,
												"src": "62302:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2787_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2824,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2823,
														"name": "Bytes32Slot",
														"nameLocations": [
															"62302:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2787,
														"src": "62302:11:0"
													},
													"referencedDeclaration": 2787,
													"src": "62302:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2787_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62301:23:0"
									},
									"scope": 2885,
									"src": "62241:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2839,
										"nodeType": "Block",
										"src": "62613:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "62675:38:0",
													"nodeType": "YulBlock",
													"src": "62675:38:0",
													"statements": [
														{
															"nativeSrc": "62689:14:0",
															"nodeType": "YulAssignment",
															"src": "62689:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "62699:4:0",
																"nodeType": "YulIdentifier",
																"src": "62699:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "62689:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "62689:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2836,
														"isOffset": false,
														"isSlot": true,
														"src": "62689:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2832,
														"isOffset": false,
														"isSlot": false,
														"src": "62699:4:0",
														"valueSize": 1
													}
												],
												"id": 2838,
												"nodeType": "InlineAssembly",
												"src": "62666:47:0"
											}
										]
									},
									"documentation": {
										"id": 2830,
										"nodeType": "StructuredDocumentation",
										"src": "62437:87:0",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "62538:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2832,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "62561:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "62553:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2831,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "62553:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62552:14:0"
									},
									"returnParameters": {
										"id": 2837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2836,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "62610:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "62590:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2790_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2835,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2834,
														"name": "Uint256Slot",
														"nameLocations": [
															"62590:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2790,
														"src": "62590:11:0"
													},
													"referencedDeclaration": 2790,
													"src": "62590:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2790_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62589:23:0"
									},
									"scope": 2885,
									"src": "62529:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2850,
										"nodeType": "Block",
										"src": "62898:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "62960:38:0",
													"nodeType": "YulBlock",
													"src": "62960:38:0",
													"statements": [
														{
															"nativeSrc": "62974:14:0",
															"nodeType": "YulAssignment",
															"src": "62974:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "62984:4:0",
																"nodeType": "YulIdentifier",
																"src": "62984:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "62974:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "62974:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2847,
														"isOffset": false,
														"isSlot": true,
														"src": "62974:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2843,
														"isOffset": false,
														"isSlot": false,
														"src": "62984:4:0",
														"valueSize": 1
													}
												],
												"id": 2849,
												"nodeType": "InlineAssembly",
												"src": "62951:47:0"
											}
										]
									},
									"documentation": {
										"id": 2841,
										"nodeType": "StructuredDocumentation",
										"src": "62725:86:0",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 2851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "62825:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2843,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "62847:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "62839:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2842,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "62839:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62838:14:0"
									},
									"returnParameters": {
										"id": 2848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2847,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "62895:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "62876:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2793_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2846,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2845,
														"name": "StringSlot",
														"nameLocations": [
															"62876:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2793,
														"src": "62876:10:0"
													},
													"referencedDeclaration": 2793,
													"src": "62876:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2793_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62875:22:0"
									},
									"scope": 2885,
									"src": "62816:188:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2861,
										"nodeType": "Block",
										"src": "63206:112:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "63268:44:0",
													"nodeType": "YulBlock",
													"src": "63268:44:0",
													"statements": [
														{
															"nativeSrc": "63282:20:0",
															"nodeType": "YulAssignment",
															"src": "63282:20:0",
															"value": {
																"name": "store.slot",
																"nativeSrc": "63292:10:0",
																"nodeType": "YulIdentifier",
																"src": "63292:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "63282:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "63282:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2858,
														"isOffset": false,
														"isSlot": true,
														"src": "63282:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2854,
														"isOffset": false,
														"isSlot": true,
														"src": "63292:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2860,
												"nodeType": "InlineAssembly",
												"src": "63259:53:0"
											}
										]
									},
									"documentation": {
										"id": 2852,
										"nodeType": "StructuredDocumentation",
										"src": "63010:101:0",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "63125:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2854,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "63154:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "63139:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2853,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "63139:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63138:22:0"
									},
									"returnParameters": {
										"id": 2859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2858,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "63203:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "63184:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2793_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2857,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2856,
														"name": "StringSlot",
														"nameLocations": [
															"63184:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2793,
														"src": "63184:10:0"
													},
													"referencedDeclaration": 2793,
													"src": "63184:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2793_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63183:22:0"
									},
									"scope": 2885,
									"src": "63116:202:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2872,
										"nodeType": "Block",
										"src": "63494:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "63556:38:0",
													"nodeType": "YulBlock",
													"src": "63556:38:0",
													"statements": [
														{
															"nativeSrc": "63570:14:0",
															"nodeType": "YulAssignment",
															"src": "63570:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "63580:4:0",
																"nodeType": "YulIdentifier",
																"src": "63580:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "63570:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "63570:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2869,
														"isOffset": false,
														"isSlot": true,
														"src": "63570:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2865,
														"isOffset": false,
														"isSlot": false,
														"src": "63580:4:0",
														"valueSize": 1
													}
												],
												"id": 2871,
												"nodeType": "InlineAssembly",
												"src": "63547:47:0"
											}
										]
									},
									"documentation": {
										"id": 2863,
										"nodeType": "StructuredDocumentation",
										"src": "63324:85:0",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "63423:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2865,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "63444:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2873,
												"src": "63436:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2864,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "63436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63435:14:0"
									},
									"returnParameters": {
										"id": 2870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2869,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "63491:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2873,
												"src": "63473:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2796_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2868,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2867,
														"name": "BytesSlot",
														"nameLocations": [
															"63473:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2796,
														"src": "63473:9:0"
													},
													"referencedDeclaration": 2796,
													"src": "63473:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2796_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63472:21:0"
									},
									"scope": 2885,
									"src": "63414:186:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2883,
										"nodeType": "Block",
										"src": "63797:112:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "63859:44:0",
													"nodeType": "YulBlock",
													"src": "63859:44:0",
													"statements": [
														{
															"nativeSrc": "63873:20:0",
															"nodeType": "YulAssignment",
															"src": "63873:20:0",
															"value": {
																"name": "store.slot",
																"nativeSrc": "63883:10:0",
																"nodeType": "YulIdentifier",
																"src": "63883:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "63873:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "63873:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2880,
														"isOffset": false,
														"isSlot": true,
														"src": "63873:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2876,
														"isOffset": false,
														"isSlot": true,
														"src": "63883:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2882,
												"nodeType": "InlineAssembly",
												"src": "63850:53:0"
											}
										]
									},
									"documentation": {
										"id": 2874,
										"nodeType": "StructuredDocumentation",
										"src": "63606:99:0",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "63719:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2876,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "63746:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2884,
												"src": "63732:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2875,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "63732:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63731:21:0"
									},
									"returnParameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "63794:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2884,
												"src": "63776:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2796_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2879,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2878,
														"name": "BytesSlot",
														"nameLocations": [
															"63776:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2796,
														"src": "63776:9:0"
													},
													"referencedDeclaration": 2796,
													"src": "63776:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2796_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63775:21:0"
									},
									"scope": 2885,
									"src": "63710:199:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3604,
							"src": "61226:2685:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 2886,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "64045:24:0"
						},
						{
							"canonicalName": "ShortString",
							"id": 2888,
							"name": "ShortString",
							"nameLocation": "64245:11:0",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "64240:28:0",
							"underlyingType": {
								"id": 2887,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "64260:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShortStrings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2889,
								"nodeType": "StructuredDocumentation",
								"src": "64270:876:0",
								"text": " @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 3099,
							"linearizedBaseContracts": [
								3099
							],
							"name": "ShortStrings",
							"nameLocation": "65155:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2892,
									"mutability": "constant",
									"name": "FALLBACK_SENTINEL",
									"nameLocation": "65262:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "65237:111:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2890,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "65237:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646",
										"id": 2891,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "65282:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0x00000000000000000000000000000000000000000000000000000000000000FF"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "305a27a9",
									"id": 2896,
									"name": "StringTooLong",
									"nameLocation": "65361:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2894,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "65382:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2896,
												"src": "65375:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "65375:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65374:12:0"
									},
									"src": "65355:32:0"
								},
								{
									"errorSelector": "b3512b0c",
									"id": 2898,
									"name": "InvalidShortString",
									"nameLocation": "65398:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "65416:2:0"
									},
									"src": "65392:27:0"
								},
								{
									"body": {
										"id": 2941,
										"nodeType": "Block",
										"src": "65678:208:0",
										"statements": [
											{
												"assignments": [
													2908
												],
												"declarations": [
													{
														"constant": false,
														"id": 2908,
														"mutability": "mutable",
														"name": "bstr",
														"nameLocation": "65701:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2941,
														"src": "65688:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2907,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "65688:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2913,
												"initialValue": {
													"arguments": [
														{
															"id": 2911,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2901,
															"src": "65714:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "65708:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 2909,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "65708:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 2912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "65708:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "65688:30:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2914,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2908,
															"src": "65732:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "65737:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "65732:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 2916,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "65746:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "65732:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2923,
												"nodeType": "IfStatement",
												"src": "65728:72:0",
												"trueBody": {
													"id": 2922,
													"nodeType": "Block",
													"src": "65750:50:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2919,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2901,
																		"src": "65785:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2918,
																	"name": "StringTooLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2896,
																	"src": "65771:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "65771:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2921,
															"nodeType": "RevertStatement",
															"src": "65764:25:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 2932,
																						"name": "bstr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2908,
																						"src": "65857:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 2931,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "65849:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 2930,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "65849:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2933,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "65849:13:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 2929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "65841:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2928,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "65841:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "65841:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"expression": {
																			"id": 2935,
																			"name": "bstr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2908,
																			"src": "65866:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "65871:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "65866:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "65841:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "65833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2926,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "65833:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "65833:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2924,
															"name": "ShortString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2888,
															"src": "65816:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$2888_$",
																"typeString": "type(ShortString)"
															}
														},
														"id": 2925,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "65828:4:0",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "65816:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2888_$",
															"typeString": "function (bytes32) pure returns (ShortString)"
														}
													},
													"id": 2939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "65816:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
														"typeString": "ShortString"
													}
												},
												"functionReturnParameters": 2906,
												"id": 2940,
												"nodeType": "Return",
												"src": "65809:70:0"
											}
										]
									},
									"documentation": {
										"id": 2899,
										"nodeType": "StructuredDocumentation",
										"src": "65425:170:0",
										"text": " @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."
									},
									"id": 2942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortString",
									"nameLocation": "65609:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2901,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "65637:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2942,
												"src": "65623:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2900,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "65623:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65622:19:0"
									},
									"returnParameters": {
										"id": 2906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2942,
												"src": "65665:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 2904,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2903,
														"name": "ShortString",
														"nameLocations": [
															"65665:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2888,
														"src": "65665:11:0"
													},
													"referencedDeclaration": 2888,
													"src": "65665:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65664:13:0"
									},
									"scope": 3099,
									"src": "65600:286:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2967,
										"nodeType": "Block",
										"src": "66044:331:0",
										"statements": [
											{
												"assignments": [
													2952
												],
												"declarations": [
													{
														"constant": false,
														"id": 2952,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "66062:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 2967,
														"src": "66054:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2951,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "66054:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2956,
												"initialValue": {
													"arguments": [
														{
															"id": 2954,
															"name": "sstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2946,
															"src": "66079:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																"typeString": "ShortString"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																"typeString": "ShortString"
															}
														],
														"id": 2953,
														"name": "byteLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3000,
														"src": "66068:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2888_$returns$_t_uint256_$",
															"typeString": "function (ShortString) pure returns (uint256)"
														}
													},
													"id": 2955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "66068:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "66054:30:0"
											},
											{
												"assignments": [
													2958
												],
												"declarations": [
													{
														"constant": false,
														"id": 2958,
														"mutability": "mutable",
														"name": "str",
														"nameLocation": "66186:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 2967,
														"src": "66172:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2957,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "66172:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2963,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 2961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "66203:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 2960,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "66192:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 2959,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "66196:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 2962,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "66192:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "66172:34:0"
											},
											{
												"AST": {
													"nativeSrc": "66268:81:0",
													"nodeType": "YulBlock",
													"src": "66268:81:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "66289:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "66289:3:0"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "66294:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "66294:3:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "66282:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "66282:6:0"
																},
																"nativeSrc": "66282:16:0",
																"nodeType": "YulFunctionCall",
																"src": "66282:16:0"
															},
															"nativeSrc": "66282:16:0",
															"nodeType": "YulExpressionStatement",
															"src": "66282:16:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nativeSrc": "66322:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "66322:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "66327:4:0",
																				"nodeType": "YulLiteral",
																				"src": "66327:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "66318:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "66318:3:0"
																		},
																		"nativeSrc": "66318:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "66318:14:0"
																	},
																	{
																		"name": "sstr",
																		"nativeSrc": "66334:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "66334:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "66311:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "66311:6:0"
																},
																"nativeSrc": "66311:28:0",
																"nodeType": "YulFunctionCall",
																"src": "66311:28:0"
															},
															"nativeSrc": "66311:28:0",
															"nodeType": "YulExpressionStatement",
															"src": "66311:28:0"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2952,
														"isOffset": false,
														"isSlot": false,
														"src": "66294:3:0",
														"valueSize": 1
													},
													{
														"declaration": 2946,
														"isOffset": false,
														"isSlot": false,
														"src": "66334:4:0",
														"valueSize": 1
													},
													{
														"declaration": 2958,
														"isOffset": false,
														"isSlot": false,
														"src": "66289:3:0",
														"valueSize": 1
													},
													{
														"declaration": 2958,
														"isOffset": false,
														"isSlot": false,
														"src": "66322:3:0",
														"valueSize": 1
													}
												],
												"id": 2964,
												"nodeType": "InlineAssembly",
												"src": "66259:90:0"
											},
											{
												"expression": {
													"id": 2965,
													"name": "str",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2958,
													"src": "66365:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2950,
												"id": 2966,
												"nodeType": "Return",
												"src": "66358:10:0"
											}
										]
									},
									"documentation": {
										"id": 2943,
										"nodeType": "StructuredDocumentation",
										"src": "65892:73:0",
										"text": " @dev Decode a `ShortString` back to a \"normal\" string."
									},
									"id": 2968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "65979:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2946,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "66000:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "65988:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 2945,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2944,
														"name": "ShortString",
														"nameLocations": [
															"65988:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2888,
														"src": "65988:11:0"
													},
													"referencedDeclaration": 2888,
													"src": "65988:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65987:18:0"
									},
									"returnParameters": {
										"id": 2950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "66029:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2948,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "66029:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66028:15:0"
									},
									"scope": 3099,
									"src": "65970:405:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2999,
										"nodeType": "Block",
										"src": "66517:175:0",
										"statements": [
											{
												"assignments": [
													2978
												],
												"declarations": [
													{
														"constant": false,
														"id": 2978,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "66535:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2999,
														"src": "66527:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2977,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "66527:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2988,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2983,
																		"name": "sstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2972,
																		"src": "66571:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																			"typeString": "ShortString"
																		}
																	],
																	"expression": {
																		"id": 2981,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2888,
																		"src": "66552:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$2888_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 2982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "66564:6:0",
																	"memberName": "unwrap",
																	"nodeType": "MemberAccess",
																	"src": "66552:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2888_$returns$_t_bytes32_$",
																		"typeString": "function (ShortString) pure returns (bytes32)"
																	}
																},
																"id": 2984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "66552:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "66544:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2979,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "66544:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "66544:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"hexValue": "30784646",
														"id": 2986,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "66580:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "0xFF"
													},
													"src": "66544:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "66527:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2989,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2978,
														"src": "66598:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 2990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "66607:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "66598:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2996,
												"nodeType": "IfStatement",
												"src": "66594:69:0",
												"trueBody": {
													"id": 2995,
													"nodeType": "Block",
													"src": "66611:52:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2992,
																	"name": "InvalidShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2898,
																	"src": "66632:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "66632:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2994,
															"nodeType": "RevertStatement",
															"src": "66625:27:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2997,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2978,
													"src": "66679:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2976,
												"id": 2998,
												"nodeType": "Return",
												"src": "66672:13:0"
											}
										]
									},
									"documentation": {
										"id": 2969,
										"nodeType": "StructuredDocumentation",
										"src": "66381:61:0",
										"text": " @dev Return the length of a `ShortString`."
									},
									"id": 3000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLength",
									"nameLocation": "66456:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2972,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "66479:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3000,
												"src": "66467:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 2971,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2970,
														"name": "ShortString",
														"nameLocations": [
															"66467:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2888,
														"src": "66467:11:0"
													},
													"referencedDeclaration": 2888,
													"src": "66467:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66466:18:0"
									},
									"returnParameters": {
										"id": 2976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3000,
												"src": "66508:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "66508:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66507:9:0"
									},
									"scope": 3099,
									"src": "66447:245:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3039,
										"nodeType": "Block",
										"src": "66915:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3013,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3003,
																	"src": "66935:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 3012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "66929:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 3011,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "66929:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "66929:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "66942:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "66929:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 3016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "66951:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "66929:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3037,
													"nodeType": "Block",
													"src": "67013:127:0",
													"statements": [
														{
															"expression": {
																"id": 3030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 3026,
																				"name": "store",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3005,
																				"src": "67053:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			],
																			"expression": {
																				"id": 3023,
																				"name": "StorageSlot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2885,
																				"src": "67027:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2885_$",
																					"typeString": "type(library StorageSlot)"
																				}
																			},
																			"id": 3025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "67039:13:0",
																			"memberName": "getStringSlot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2862,
																			"src": "67027:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2793_storage_ptr_$",
																				"typeString": "function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"
																			}
																		},
																		"id": 3027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "67027:32:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StringSlot_$2793_storage_ptr",
																			"typeString": "struct StorageSlot.StringSlot storage pointer"
																		}
																	},
																	"id": 3028,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "67060:5:0",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2792,
																	"src": "67027:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3029,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3003,
																	"src": "67068:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "67027:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 3031,
															"nodeType": "ExpressionStatement",
															"src": "67027:46:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3034,
																		"name": "FALLBACK_SENTINEL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2892,
																		"src": "67111:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 3032,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2888,
																		"src": "67094:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$2888_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 3033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "67106:4:0",
																	"memberName": "wrap",
																	"nodeType": "MemberAccess",
																	"src": "67094:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2888_$",
																		"typeString": "function (bytes32) pure returns (ShortString)"
																	}
																},
																"id": 3035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "67094:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 3010,
															"id": 3036,
															"nodeType": "Return",
															"src": "67087:42:0"
														}
													]
												},
												"id": 3038,
												"nodeType": "IfStatement",
												"src": "66925:215:0",
												"trueBody": {
													"id": 3022,
													"nodeType": "Block",
													"src": "66955:52:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3019,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3003,
																		"src": "66990:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3018,
																	"name": "toShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2942,
																	"src": "66976:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2888_$",
																		"typeString": "function (string memory) pure returns (ShortString)"
																	}
																},
																"id": 3020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "66976:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 3010,
															"id": 3021,
															"nodeType": "Return",
															"src": "66969:27:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3001,
										"nodeType": "StructuredDocumentation",
										"src": "66698:103:0",
										"text": " @dev Encode a string into a `ShortString`, or write it to storage if it is too long."
									},
									"id": 3040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortStringWithFallback",
									"nameLocation": "66815:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3003,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "66855:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3040,
												"src": "66841:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3002,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "66841:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3005,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "66877:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3040,
												"src": "66862:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3004,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "66862:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66840:43:0"
									},
									"returnParameters": {
										"id": 3010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3040,
												"src": "66902:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 3008,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3007,
														"name": "ShortString",
														"nameLocations": [
															"66902:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2888,
														"src": "66902:11:0"
													},
													"referencedDeclaration": 2888,
													"src": "66902:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66901:13:0"
									},
									"scope": 3099,
									"src": "66806:340:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3066,
										"nodeType": "Block",
										"src": "67386:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 3056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 3053,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3044,
																"src": "67419:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 3051,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2888,
																"src": "67400:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$2888_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 3052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "67412:6:0",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "67400:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2888_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 3054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "67400:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3055,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2892,
														"src": "67429:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "67400:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3064,
													"nodeType": "Block",
													"src": "67501:37:0",
													"statements": [
														{
															"expression": {
																"id": 3062,
																"name": "store",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3046,
																"src": "67522:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string storage pointer"
																}
															},
															"functionReturnParameters": 3050,
															"id": 3063,
															"nodeType": "Return",
															"src": "67515:12:0"
														}
													]
												},
												"id": 3065,
												"nodeType": "IfStatement",
												"src": "67396:142:0",
												"trueBody": {
													"id": 3061,
													"nodeType": "Block",
													"src": "67448:47:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3058,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3044,
																		"src": "67478:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 3057,
																	"name": "toString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2968,
																	"src": "67469:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2888_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (ShortString) pure returns (string memory)"
																	}
																},
																"id": 3059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "67469:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 3050,
															"id": 3060,
															"nodeType": "Return",
															"src": "67462:22:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3041,
										"nodeType": "StructuredDocumentation",
										"src": "67152:120:0",
										"text": " @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."
									},
									"id": 3067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringWithFallback",
									"nameLocation": "67286:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3044,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "67319:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3067,
												"src": "67307:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 3043,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3042,
														"name": "ShortString",
														"nameLocations": [
															"67307:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2888,
														"src": "67307:11:0"
													},
													"referencedDeclaration": 2888,
													"src": "67307:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3046,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "67341:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3067,
												"src": "67326:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3045,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "67326:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67306:41:0"
									},
									"returnParameters": {
										"id": 3050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3067,
												"src": "67371:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3048,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "67371:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67370:15:0"
									},
									"scope": 3099,
									"src": "67277:267:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3097,
										"nodeType": "Block",
										"src": "68024:174:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 3083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 3080,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3071,
																"src": "68057:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 3078,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2888,
																"src": "68038:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$2888_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 3079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "68050:6:0",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "68038:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2888_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 3081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "68038:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3082,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2892,
														"src": "68067:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "68038:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3095,
													"nodeType": "Block",
													"src": "68141:51:0",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 3091,
																			"name": "store",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3073,
																			"src": "68168:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		],
																		"id": 3090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "68162:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 3089,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "68162:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "68162:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 3093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "68175:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "68162:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 3077,
															"id": 3094,
															"nodeType": "Return",
															"src": "68155:26:0"
														}
													]
												},
												"id": 3096,
												"nodeType": "IfStatement",
												"src": "68034:158:0",
												"trueBody": {
													"id": 3088,
													"nodeType": "Block",
													"src": "68086:49:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3085,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3071,
																		"src": "68118:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 3084,
																	"name": "byteLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3000,
																	"src": "68107:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2888_$returns$_t_uint256_$",
																		"typeString": "function (ShortString) pure returns (uint256)"
																	}
																},
																"id": 3086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "68107:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 3077,
															"id": 3087,
															"nodeType": "Return",
															"src": "68100:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3068,
										"nodeType": "StructuredDocumentation",
										"src": "67550:364:0",
										"text": " @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."
									},
									"id": 3098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLengthWithFallback",
									"nameLocation": "67928:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3071,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "67963:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3098,
												"src": "67951:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 3070,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3069,
														"name": "ShortString",
														"nameLocations": [
															"67951:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2888,
														"src": "67951:11:0"
													},
													"referencedDeclaration": 2888,
													"src": "67951:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3073,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "67985:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3098,
												"src": "67970:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3072,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "67970:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67950:41:0"
									},
									"returnParameters": {
										"id": 3077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3098,
												"src": "68015:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "68015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68014:9:0"
									},
									"scope": 3099,
									"src": "67919:279:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3604,
							"src": "65147:3053:0",
							"usedErrors": [
								2896,
								2898
							],
							"usedEvents": []
						},
						{
							"id": 3100,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "68336:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC5267",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3123,
							"linearizedBaseContracts": [
								3123
							],
							"name": "IERC5267",
							"nameLocation": "68372:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3101,
										"nodeType": "StructuredDocumentation",
										"src": "68387:84:0",
										"text": " @dev MAY be emitted to signal that the domain could have changed."
									},
									"eventSelector": "0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31",
									"id": 3103,
									"name": "EIP712DomainChanged",
									"nameLocation": "68482:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "68501:2:0"
									},
									"src": "68476:28:0"
								},
								{
									"documentation": {
										"id": 3104,
										"nodeType": "StructuredDocumentation",
										"src": "68510:140:0",
										"text": " @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."
									},
									"functionSelector": "84b0196e",
									"id": 3122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "68664:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "68676:2:0"
									},
									"returnParameters": {
										"id": 3121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3107,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "68746:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "68739:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 3106,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "68739:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3109,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "68780:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "68766:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3108,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "68766:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3111,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "68812:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "68798:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3110,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "68798:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3113,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "68841:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "68833:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "68833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3115,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "68870:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "68862:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "68862:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3117,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "68909:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "68901:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "68901:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3120,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "68944:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "68927:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3118,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "68927:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3119,
													"nodeType": "ArrayTypeName",
													"src": "68927:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68725:239:0"
									},
									"scope": 3123,
									"src": "68655:310:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3604,
							"src": "68362:605:0",
							"usedErrors": [],
							"usedEvents": [
								3103
							]
						},
						{
							"id": 3124,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "69115:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3126,
										"name": "IERC5267",
										"nameLocations": [
											"70816:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3123,
										"src": "70816:8:0"
									},
									"id": 3127,
									"nodeType": "InheritanceSpecifier",
									"src": "70816:8:0"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3125,
								"nodeType": "StructuredDocumentation",
								"src": "69144:1643:0",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"
							},
							"fullyImplemented": true,
							"id": 3342,
							"linearizedBaseContracts": [
								3342,
								3123
							],
							"name": "EIP712",
							"nameLocation": "70806:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3129,
									"libraryName": {
										"id": 3128,
										"name": "ShortStrings",
										"nameLocations": [
											"70837:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3099,
										"src": "70837:12:0"
									},
									"nodeType": "UsingForDirective",
									"src": "70831:25:0"
								},
								{
									"constant": true,
									"id": 3134,
									"mutability": "constant",
									"name": "TYPE_HASH",
									"nameLocation": "70887:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "70862:140:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3130,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "70862:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 3132,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "70917:84:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 3131,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "70907:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3133,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "70907:95:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3136,
									"mutability": "immutable",
									"name": "_cachedDomainSeparator",
									"nameLocation": "71227:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "71201:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3135,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "71201:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3138,
									"mutability": "immutable",
									"name": "_cachedChainId",
									"nameLocation": "71281:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "71255:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3137,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "71255:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3140,
									"mutability": "immutable",
									"name": "_cachedThis",
									"nameLocation": "71327:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "71301:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3139,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "71301:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3142,
									"mutability": "immutable",
									"name": "_hashedName",
									"nameLocation": "71371:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "71345:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3141,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "71345:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3144,
									"mutability": "immutable",
									"name": "_hashedVersion",
									"nameLocation": "71414:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "71388:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3143,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "71388:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3147,
									"mutability": "immutable",
									"name": "_name",
									"nameLocation": "71465:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "71435:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 3146,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3145,
											"name": "ShortString",
											"nameLocations": [
												"71435:11:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2888,
											"src": "71435:11:0"
										},
										"referencedDeclaration": 2888,
										"src": "71435:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3150,
									"mutability": "immutable",
									"name": "_version",
									"nameLocation": "71506:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "71476:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 3149,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3148,
											"name": "ShortString",
											"nameLocations": [
												"71476:11:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2888,
											"src": "71476:11:0"
										},
										"referencedDeclaration": 2888,
										"src": "71476:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3152,
									"mutability": "mutable",
									"name": "_nameFallback",
									"nameLocation": "71535:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "71520:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3151,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "71520:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3154,
									"mutability": "mutable",
									"name": "_versionFallback",
									"nameLocation": "71569:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "71554:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3153,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "71554:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3211,
										"nodeType": "Block",
										"src": "72211:376:0",
										"statements": [
											{
												"expression": {
													"id": 3167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3162,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3147,
														"src": "72221:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3165,
																"name": "_nameFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3152,
																"src": "72260:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 3163,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3157,
																"src": "72229:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 3164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "72234:25:0",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3040,
															"src": "72229:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2888_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 3166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "72229:45:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
															"typeString": "ShortString"
														}
													},
													"src": "72221:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
														"typeString": "ShortString"
													}
												},
												"id": 3168,
												"nodeType": "ExpressionStatement",
												"src": "72221:53:0"
											},
											{
												"expression": {
													"id": 3174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3169,
														"name": "_version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3150,
														"src": "72284:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3172,
																"name": "_versionFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3154,
																"src": "72329:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 3170,
																"name": "version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3159,
																"src": "72295:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 3171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "72303:25:0",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3040,
															"src": "72295:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2888_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 3173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "72295:51:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
															"typeString": "ShortString"
														}
													},
													"src": "72284:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
														"typeString": "ShortString"
													}
												},
												"id": 3175,
												"nodeType": "ExpressionStatement",
												"src": "72284:62:0"
											},
											{
												"expression": {
													"id": 3183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3176,
														"name": "_hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3142,
														"src": "72356:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3180,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3157,
																		"src": "72386:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "72380:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 3178,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "72380:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "72380:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 3177,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "72370:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 3182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "72370:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "72356:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 3184,
												"nodeType": "ExpressionStatement",
												"src": "72356:36:0"
											},
											{
												"expression": {
													"id": 3192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3185,
														"name": "_hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3144,
														"src": "72402:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3189,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3159,
																		"src": "72435:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "72429:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 3187,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "72429:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "72429:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 3186,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "72419:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 3191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "72419:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "72402:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 3193,
												"nodeType": "ExpressionStatement",
												"src": "72402:42:0"
											},
											{
												"expression": {
													"id": 3197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3194,
														"name": "_cachedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3138,
														"src": "72455:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3195,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "72472:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "72478:7:0",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "72472:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "72455:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3198,
												"nodeType": "ExpressionStatement",
												"src": "72455:30:0"
											},
											{
												"expression": {
													"id": 3202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3199,
														"name": "_cachedDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3136,
														"src": "72495:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3200,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3259,
															"src": "72520:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 3201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "72520:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "72495:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 3203,
												"nodeType": "ExpressionStatement",
												"src": "72495:48:0"
											},
											{
												"expression": {
													"id": 3209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3204,
														"name": "_cachedThis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3140,
														"src": "72553:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3207,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "72575:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EIP712_$3342",
																	"typeString": "contract EIP712"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EIP712_$3342",
																	"typeString": "contract EIP712"
																}
															],
															"id": 3206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "72567:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3205,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "72567:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "72567:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "72553:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3210,
												"nodeType": "ExpressionStatement",
												"src": "72553:27:0"
											}
										]
									},
									"documentation": {
										"id": 3155,
										"nodeType": "StructuredDocumentation",
										"src": "71592:559:0",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 3212,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3157,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "72182:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3212,
												"src": "72168:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "72168:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3159,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "72202:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3212,
												"src": "72188:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3158,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "72188:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72167:43:0"
									},
									"returnParameters": {
										"id": 3161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72211:0:0"
									},
									"scope": 3342,
									"src": "72156:431:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3237,
										"nodeType": "Block",
										"src": "72735:200:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 3223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3220,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "72757:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$3342",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$3342",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 3219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "72749:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3218,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "72749:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "72749:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 3222,
															"name": "_cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3140,
															"src": "72766:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "72749:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3224,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "72781:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "72787:7:0",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "72781:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 3226,
															"name": "_cachedChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3138,
															"src": "72798:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "72781:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "72749:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3235,
													"nodeType": "Block",
													"src": "72874:55:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3232,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3259,
																	"src": "72895:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view returns (bytes32)"
																	}
																},
																"id": 3233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "72895:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 3217,
															"id": 3234,
															"nodeType": "Return",
															"src": "72888:30:0"
														}
													]
												},
												"id": 3236,
												"nodeType": "IfStatement",
												"src": "72745:184:0",
												"trueBody": {
													"id": 3231,
													"nodeType": "Block",
													"src": "72814:54:0",
													"statements": [
														{
															"expression": {
																"id": 3229,
																"name": "_cachedDomainSeparator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3136,
																"src": "72835:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 3217,
															"id": 3230,
															"nodeType": "Return",
															"src": "72828:29:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3213,
										"nodeType": "StructuredDocumentation",
										"src": "72593:75:0",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 3238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nameLocation": "72682:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72700:2:0"
									},
									"returnParameters": {
										"id": 3217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3238,
												"src": "72726:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "72726:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72725:9:0"
									},
									"scope": 3342,
									"src": "72673:262:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3258,
										"nodeType": "Block",
										"src": "73005:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3246,
																	"name": "TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3134,
																	"src": "73043:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 3247,
																	"name": "_hashedName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3142,
																	"src": "73054:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 3248,
																	"name": "_hashedVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3144,
																	"src": "73067:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 3249,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "73083:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 3250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "73089:7:0",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "73083:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 3253,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "73106:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$3342",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$3342",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 3252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "73098:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3251,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "73098:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "73098:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 3244,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "73032:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "73036:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "73032:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "73032:80:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3243,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "73022:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "73022:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3242,
												"id": 3257,
												"nodeType": "Return",
												"src": "73015:98:0"
											}
										]
									},
									"id": 3259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "72950:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72971:2:0"
									},
									"returnParameters": {
										"id": 3242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3259,
												"src": "72996:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3240,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "72996:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72995:9:0"
									},
									"scope": 3342,
									"src": "72941:179:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3274,
										"nodeType": "Block",
										"src": "73831:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3269,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3238,
																"src": "73881:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 3270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "73881:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3271,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3262,
															"src": "73903:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 3267,
															"name": "MessageHashUtils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2776,
															"src": "73848:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MessageHashUtils_$2776_$",
																"typeString": "type(library MessageHashUtils)"
															}
														},
														"id": 3268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "73865:15:0",
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2775,
														"src": "73848:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 3272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "73848:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3266,
												"id": 3273,
												"nodeType": "Return",
												"src": "73841:73:0"
											}
										]
									},
									"documentation": {
										"id": 3260,
										"nodeType": "StructuredDocumentation",
										"src": "73126:614:0",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 3275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nameLocation": "73754:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3262,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "73779:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3275,
												"src": "73771:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3261,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "73771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "73770:20:0"
									},
									"returnParameters": {
										"id": 3266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3275,
												"src": "73822:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3264,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "73822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "73821:9:0"
									},
									"scope": 3342,
									"src": "73745:176:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										3122
									],
									"body": {
										"id": 3316,
										"nodeType": "Block",
										"src": "74300:229:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "0f",
															"id": 3294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "74331:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c",
																"typeString": "literal_string hex\"0f\""
															},
															"value": "\u000f"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3295,
																"name": "_EIP712Name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3329,
																"src": "74361:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 3296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "74361:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3297,
																"name": "_EIP712Version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3341,
																"src": "74388:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 3298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "74388:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 3299,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "74418:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "74424:7:0",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "74418:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 3303,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "74453:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$3342",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$3342",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 3302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "74445:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3301,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "74445:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "74445:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "74480:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "74472:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3305,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "74472:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "74472:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "74510:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "74496:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 3309,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "74500:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3310,
																	"nodeType": "ArrayTypeName",
																	"src": "74500:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 3313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "74496:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 3314,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "74317:205:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"
													}
												},
												"functionReturnParameters": 3293,
												"id": 3315,
												"nodeType": "Return",
												"src": "74310:212:0"
											}
										]
									},
									"documentation": {
										"id": 3276,
										"nodeType": "StructuredDocumentation",
										"src": "73927:40:0",
										"text": " @dev See {IERC-5267}."
									},
									"functionSelector": "84b0196e",
									"id": 3317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "73981:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "73993:2:0"
									},
									"returnParameters": {
										"id": 3293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3279,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "74077:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3317,
												"src": "74070:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 3278,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "74070:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3281,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "74111:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3317,
												"src": "74097:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3280,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "74097:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3283,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "74143:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3317,
												"src": "74129:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3282,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "74129:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3285,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "74172:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3317,
												"src": "74164:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "74164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3287,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "74201:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 3317,
												"src": "74193:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "74193:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3289,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "74240:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3317,
												"src": "74232:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3288,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "74232:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3292,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "74275:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3317,
												"src": "74258:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3290,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "74258:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3291,
													"nodeType": "ArrayTypeName",
													"src": "74258:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "74056:239:0"
									},
									"scope": 3342,
									"src": "73972:557:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3328,
										"nodeType": "Block",
										"src": "74910:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3325,
															"name": "_nameFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3152,
															"src": "74954:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 3323,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3147,
															"src": "74927:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																"typeString": "ShortString"
															}
														},
														"id": 3324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "74933:20:0",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3067,
														"src": "74927:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2888_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2888_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 3326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "74927:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3322,
												"id": 3327,
												"nodeType": "Return",
												"src": "74920:48:0"
											}
										]
									},
									"documentation": {
										"id": 3318,
										"nodeType": "StructuredDocumentation",
										"src": "74535:256:0",
										"text": " @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 3329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Name",
									"nameLocation": "74858:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "74869:2:0"
									},
									"returnParameters": {
										"id": 3322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3329,
												"src": "74895:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "74895:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "74894:15:0"
									},
									"scope": 3342,
									"src": "74849:126:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3340,
										"nodeType": "Block",
										"src": "75365:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3337,
															"name": "_versionFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3154,
															"src": "75412:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 3335,
															"name": "_version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3150,
															"src": "75382:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$2888",
																"typeString": "ShortString"
															}
														},
														"id": 3336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "75391:20:0",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3067,
														"src": "75382:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2888_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2888_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 3338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "75382:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 3334,
												"id": 3339,
												"nodeType": "Return",
												"src": "75375:54:0"
											}
										]
									},
									"documentation": {
										"id": 3330,
										"nodeType": "StructuredDocumentation",
										"src": "74981:262:0",
										"text": " @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 3341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Version",
									"nameLocation": "75310:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "75324:2:0"
									},
									"returnParameters": {
										"id": 3334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3341,
												"src": "75350:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3332,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "75350:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "75349:15:0"
									},
									"scope": 3342,
									"src": "75301:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3604,
							"src": "70788:4650:0",
							"usedErrors": [
								2896,
								2898
							],
							"usedEvents": [
								3103
							]
						},
						{
							"id": 3343,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "75559:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Nonces",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3344,
								"nodeType": "StructuredDocumentation",
								"src": "75585:83:0",
								"text": " @dev Provides tracking nonces for addresses. Nonces will only increment."
							},
							"fullyImplemented": true,
							"id": 3409,
							"linearizedBaseContracts": [
								3409
							],
							"name": "Nonces",
							"nameLocation": "75687:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3345,
										"nodeType": "StructuredDocumentation",
										"src": "75700:90:0",
										"text": " @dev The nonce used for an `account` is not the expected current nonce."
									},
									"errorSelector": "752d88c0",
									"id": 3351,
									"name": "InvalidAccountNonce",
									"nameLocation": "75801:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "75829:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3351,
												"src": "75821:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "75821:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3349,
												"mutability": "mutable",
												"name": "currentNonce",
												"nameLocation": "75846:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 3351,
												"src": "75838:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "75838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "75820:39:0"
									},
									"src": "75795:65:0"
								},
								{
									"constant": false,
									"id": 3355,
									"mutability": "mutable",
									"name": "_nonces",
									"nameLocation": "75910:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3409,
									"src": "75866:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 3354,
										"keyName": "account",
										"keyNameLocation": "75882:7:0",
										"keyType": {
											"id": 3352,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "75874:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "75866:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3353,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "75893:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3367,
										"nodeType": "Block",
										"src": "76067:38:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3363,
														"name": "_nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3355,
														"src": "76084:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 3365,
													"indexExpression": {
														"id": 3364,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3358,
														"src": "76092:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "76084:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3362,
												"id": 3366,
												"nodeType": "Return",
												"src": "76077:21:0"
											}
										]
									},
									"documentation": {
										"id": 3356,
										"nodeType": "StructuredDocumentation",
										"src": "75924:69:0",
										"text": " @dev Returns the next unused nonce for an address."
									},
									"functionSelector": "7ecebe00",
									"id": 3368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "76007:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3358,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "76022:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3368,
												"src": "76014:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "76014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "76013:15:0"
									},
									"returnParameters": {
										"id": 3362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3368,
												"src": "76058:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "76058:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "76057:9:0"
									},
									"scope": 3409,
									"src": "75998:107:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3382,
										"nodeType": "Block",
										"src": "76288:326:0",
										"statements": [
											{
												"id": 3381,
												"nodeType": "UncheckedBlock",
												"src": "76491:117:0",
												"statements": [
													{
														"expression": {
															"id": 3379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "76581:16:0",
															"subExpression": {
																"baseExpression": {
																	"id": 3376,
																	"name": "_nonces",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3355,
																	"src": "76581:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3378,
																"indexExpression": {
																	"id": 3377,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "76589:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "76581:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3375,
														"id": 3380,
														"nodeType": "Return",
														"src": "76574:23:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3369,
										"nodeType": "StructuredDocumentation",
										"src": "76111:103:0",
										"text": " @dev Consumes a nonce.\n Returns the current value and increments nonce."
									},
									"id": 3383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useNonce",
									"nameLocation": "76228:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3371,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "76246:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3383,
												"src": "76238:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "76238:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "76237:15:0"
									},
									"returnParameters": {
										"id": 3375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3383,
												"src": "76279:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "76279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "76278:9:0"
									},
									"scope": 3409,
									"src": "76219:395:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3407,
										"nodeType": "Block",
										"src": "76798:149:0",
										"statements": [
											{
												"assignments": [
													3392
												],
												"declarations": [
													{
														"constant": false,
														"id": 3392,
														"mutability": "mutable",
														"name": "current",
														"nameLocation": "76816:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 3407,
														"src": "76808:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3391,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "76808:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3396,
												"initialValue": {
													"arguments": [
														{
															"id": 3394,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3386,
															"src": "76836:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3393,
														"name": "_useNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3383,
														"src": "76826:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 3395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "76826:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "76808:34:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3397,
														"name": "nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3388,
														"src": "76856:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3398,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3392,
														"src": "76865:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "76856:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3406,
												"nodeType": "IfStatement",
												"src": "76852:89:0",
												"trueBody": {
													"id": 3405,
													"nodeType": "Block",
													"src": "76874:67:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3401,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3386,
																		"src": "76915:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3402,
																		"name": "current",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3392,
																		"src": "76922:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3400,
																	"name": "InvalidAccountNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3351,
																	"src": "76895:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 3403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "76895:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3404,
															"nodeType": "RevertStatement",
															"src": "76888:42:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3384,
										"nodeType": "StructuredDocumentation",
										"src": "76620:100:0",
										"text": " @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."
									},
									"id": 3408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useCheckedNonce",
									"nameLocation": "76734:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3386,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "76759:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "76751:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "76751:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3388,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "76774:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "76766:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "76766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "76750:30:0"
									},
									"returnParameters": {
										"id": 3390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "76798:0:0"
									},
									"scope": 3409,
									"src": "76725:222:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3604,
							"src": "75669:1280:0",
							"usedErrors": [
								3351
							],
							"usedEvents": []
						},
						{
							"id": 3410,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "77115:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3412,
										"name": "ERC20",
										"nameLocations": [
											"77667:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "77667:5:0"
									},
									"id": 3413,
									"nodeType": "InheritanceSpecifier",
									"src": "77667:5:0"
								},
								{
									"baseName": {
										"id": 3414,
										"name": "IERC20Permit",
										"nameLocations": [
											"77674:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 951,
										"src": "77674:12:0"
									},
									"id": 3415,
									"nodeType": "InheritanceSpecifier",
									"src": "77674:12:0"
								},
								{
									"baseName": {
										"id": 3416,
										"name": "EIP712",
										"nameLocations": [
											"77688:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3342,
										"src": "77688:6:0"
									},
									"id": 3417,
									"nodeType": "InheritanceSpecifier",
									"src": "77688:6:0"
								},
								{
									"baseName": {
										"id": 3418,
										"name": "Nonces",
										"nameLocations": [
											"77696:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3409,
										"src": "77696:6:0"
									},
									"id": 3419,
									"nodeType": "InheritanceSpecifier",
									"src": "77696:6:0"
								}
							],
							"canonicalName": "ERC20Permit",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3411,
								"nodeType": "StructuredDocumentation",
								"src": "77146:487:0",
								"text": " @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": true,
							"id": 3552,
							"linearizedBaseContracts": [
								3552,
								3409,
								3342,
								3123,
								951,
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20Permit",
							"nameLocation": "77652:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 3424,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "77734:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 3552,
									"src": "77709:146:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3420,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "77709:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 3422,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "77770:84:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 3421,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "77760:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3423,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "77760:95:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 3425,
										"nodeType": "StructuredDocumentation",
										"src": "77862:52:0",
										"text": " @dev Permit deadline has expired."
									},
									"errorSelector": "62791302",
									"id": 3429,
									"name": "ERC2612ExpiredSignature",
									"nameLocation": "77925:23:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3427,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "77957:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3429,
												"src": "77949:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "77949:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "77948:18:0"
									},
									"src": "77919:48:0"
								},
								{
									"documentation": {
										"id": 3430,
										"nodeType": "StructuredDocumentation",
										"src": "77973:45:0",
										"text": " @dev Mismatched signature."
									},
									"errorSelector": "4b800e46",
									"id": 3436,
									"name": "ERC2612InvalidSigner",
									"nameLocation": "78029:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3432,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "78058:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3436,
												"src": "78050:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78050:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3434,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "78074:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3436,
												"src": "78066:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78066:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78049:31:0"
									},
									"src": "78023:58:0"
								},
								{
									"body": {
										"id": 3446,
										"nodeType": "Block",
										"src": "78362:2:0",
										"statements": []
									},
									"documentation": {
										"id": 3437,
										"nodeType": "StructuredDocumentation",
										"src": "78087:220:0",
										"text": " @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."
									},
									"id": 3447,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3442,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3439,
													"src": "78351:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"hexValue": "31",
													"id": 3443,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "78357:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												}
											],
											"id": 3444,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3441,
												"name": "EIP712",
												"nameLocations": [
													"78344:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3342,
												"src": "78344:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "78344:17:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3439,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "78338:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "78324:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "78324:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78323:20:0"
									},
									"returnParameters": {
										"id": 3445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "78362:0:0"
									},
									"scope": 3552,
									"src": "78312:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 3523,
										"nodeType": "Block",
										"src": "78607:483:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3465,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "78621:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "78627:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "78621:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 3467,
														"name": "deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3456,
														"src": "78639:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "78621:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3474,
												"nodeType": "IfStatement",
												"src": "78617:97:0",
												"trueBody": {
													"id": 3473,
													"nodeType": "Block",
													"src": "78649:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3470,
																		"name": "deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3456,
																		"src": "78694:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3469,
																	"name": "ERC2612ExpiredSignature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3429,
																	"src": "78670:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 3471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "78670:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3472,
															"nodeType": "RevertStatement",
															"src": "78663:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													3476
												],
												"declarations": [
													{
														"constant": false,
														"id": 3476,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "78732:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 3523,
														"src": "78724:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3475,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "78724:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3490,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3480,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3424,
																	"src": "78766:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 3481,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3450,
																	"src": "78783:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3482,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3452,
																	"src": "78790:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3483,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3454,
																	"src": "78799:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 3485,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3450,
																			"src": "78816:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3484,
																		"name": "_useNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3383,
																		"src": "78806:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 3486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "78806:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3487,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3456,
																	"src": "78824:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3478,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "78755:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "78759:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "78755:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "78755:78:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3477,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "78745:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78745:89:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "78724:110:0"
											},
											{
												"assignments": [
													3492
												],
												"declarations": [
													{
														"constant": false,
														"id": 3492,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "78853:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 3523,
														"src": "78845:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3491,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "78845:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3496,
												"initialValue": {
													"arguments": [
														{
															"id": 3494,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3476,
															"src": "78877:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3493,
														"name": "_hashTypedDataV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3275,
														"src": "78860:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 3495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78860:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "78845:43:0"
											},
											{
												"assignments": [
													3498
												],
												"declarations": [
													{
														"constant": false,
														"id": 3498,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "78907:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3523,
														"src": "78899:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3497,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "78899:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3506,
												"initialValue": {
													"arguments": [
														{
															"id": 3501,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3492,
															"src": "78930:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3502,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3458,
															"src": "78936:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 3503,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3460,
															"src": "78939:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3504,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3462,
															"src": "78942:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 3499,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "78916:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$1298_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 3500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "78922:7:0",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1248,
														"src": "78916:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 3505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78916:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "78899:45:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3507,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3498,
														"src": "78958:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3508,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3450,
														"src": "78968:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "78958:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3516,
												"nodeType": "IfStatement",
												"src": "78954:88:0",
												"trueBody": {
													"id": 3515,
													"nodeType": "Block",
													"src": "78975:67:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3511,
																		"name": "signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3498,
																		"src": "79017:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3512,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3450,
																		"src": "79025:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3510,
																	"name": "ERC2612InvalidSigner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3436,
																	"src": "78996:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 3513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "78996:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3514,
															"nodeType": "RevertStatement",
															"src": "78989:42:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3518,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3450,
															"src": "79061:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3519,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3452,
															"src": "79068:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3454,
															"src": "79077:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3517,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "79052:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "79052:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3522,
												"nodeType": "ExpressionStatement",
												"src": "79052:31:0"
											}
										]
									},
									"documentation": {
										"id": 3448,
										"nodeType": "StructuredDocumentation",
										"src": "78370:43:0",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "d505accf",
									"id": 3524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "78427:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3450,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "78451:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78443:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78443:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3452,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "78474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3454,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "78499:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78491:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "78491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3456,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "78522:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78514:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "78514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3458,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "78546:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78540:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3457,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "78540:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3460,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "78565:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78557:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3459,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "78557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3462,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "78584:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78576:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3461,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "78576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78433:158:0"
									},
									"returnParameters": {
										"id": 3464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "78607:0:0"
									},
									"scope": 3552,
									"src": "78418:672:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										944,
										3368
									],
									"body": {
										"id": 3540,
										"nodeType": "Block",
										"src": "79244:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3537,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3527,
															"src": "79274:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3535,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "79261:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Permit_$3552_$",
																"typeString": "type(contract super ERC20Permit)"
															}
														},
														"id": 3536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "79267:6:0",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3368,
														"src": "79261:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 3538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "79261:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3534,
												"id": 3539,
												"nodeType": "Return",
												"src": "79254:26:0"
											}
										]
									},
									"documentation": {
										"id": 3525,
										"nodeType": "StructuredDocumentation",
										"src": "79096:43:0",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "7ecebe00",
									"id": 3541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "79153:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3531,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3529,
												"name": "IERC20Permit",
												"nameLocations": [
													"79204:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 951,
												"src": "79204:12:0"
											},
											{
												"id": 3530,
												"name": "Nonces",
												"nameLocations": [
													"79218:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3409,
												"src": "79218:6:0"
											}
										],
										"src": "79195:30:0"
									},
									"parameters": {
										"id": 3528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "79168:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3541,
												"src": "79160:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "79160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79159:15:0"
									},
									"returnParameters": {
										"id": 3534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3541,
												"src": "79235:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "79235:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79234:9:0"
									},
									"scope": 3552,
									"src": "79144:143:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										950
									],
									"body": {
										"id": 3550,
										"nodeType": "Block",
										"src": "79462:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3547,
														"name": "_domainSeparatorV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3238,
														"src": "79479:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 3548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "79479:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3546,
												"id": 3549,
												"nodeType": "Return",
												"src": "79472:27:0"
											}
										]
									},
									"documentation": {
										"id": 3542,
										"nodeType": "StructuredDocumentation",
										"src": "79293:43:0",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "3644e515",
									"id": 3551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "79403:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "79419:2:0"
									},
									"returnParameters": {
										"id": 3546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3551,
												"src": "79453:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3544,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "79453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79452:9:0"
									},
									"scope": 3552,
									"src": "79394:112:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 3604,
							"src": "77634:1874:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								961,
								966,
								971,
								2896,
								2898,
								3351,
								3429,
								3436
							],
							"usedEvents": [
								11,
								20,
								3103
							]
						},
						{
							"id": 3553,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "79583:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3555,
										"name": "ERC20",
										"nameLocations": [
											"79671:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "79671:5:0"
									},
									"id": 3556,
									"nodeType": "InheritanceSpecifier",
									"src": "79671:5:0"
								},
								{
									"baseName": {
										"id": 3557,
										"name": "Ownable",
										"nameLocations": [
											"79678:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 916,
										"src": "79678:7:0"
									},
									"id": 3558,
									"nodeType": "InheritanceSpecifier",
									"src": "79678:7:0"
								},
								{
									"baseName": {
										"id": 3559,
										"name": "ERC20Permit",
										"nameLocations": [
											"79687:11:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3552,
										"src": "79687:11:0"
									},
									"id": 3560,
									"nodeType": "InheritanceSpecifier",
									"src": "79687:11:0"
								}
							],
							"canonicalName": "Reyes",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3554,
								"nodeType": "StructuredDocumentation",
								"src": "79612:41:0",
								"text": "@custom:security-contact orc@org.com"
							},
							"fullyImplemented": true,
							"id": 3603,
							"linearizedBaseContracts": [
								3603,
								3552,
								3409,
								3342,
								3123,
								951,
								916,
								771,
								170,
								100,
								77,
								129
							],
							"name": "Reyes",
							"nameLocation": "79662:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3586,
										"nodeType": "Block",
										"src": "79831:59:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3576,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "79847:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "79851:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "79847:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030",
																"id": 3578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "79859:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "79866:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3580,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 335,
																		"src": "79872:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 3581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "79872:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "79866:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "79859:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3575,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "79841:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "79841:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3585,
												"nodeType": "ExpressionStatement",
												"src": "79841:42:0"
											}
										]
									},
									"id": 3587,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5265796573",
													"id": 3565,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "79753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_5837e8ba13d8b72275f63aeee31e8736b32e3349d8c18e704250895b2f5c7ca3",
														"typeString": "literal_string \"Reyes\""
													},
													"value": "Reyes"
												},
												{
													"hexValue": "5259",
													"id": 3566,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "79762:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_717bf1e9033573e23fb90e1fb835f2cb738f50af6b1983533ceab27308b01133",
														"typeString": "literal_string \"RY\""
													},
													"value": "RY"
												}
											],
											"id": 3567,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3564,
												"name": "ERC20",
												"nameLocations": [
													"79747:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 771,
												"src": "79747:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "79747:20:0"
										},
										{
											"arguments": [
												{
													"id": 3569,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3562,
													"src": "79784:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3570,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3568,
												"name": "Ownable",
												"nameLocations": [
													"79776:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 916,
												"src": "79776:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "79776:21:0"
										},
										{
											"arguments": [
												{
													"hexValue": "5265796573",
													"id": 3572,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "79818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_5837e8ba13d8b72275f63aeee31e8736b32e3349d8c18e704250895b2f5c7ca3",
														"typeString": "literal_string \"Reyes\""
													},
													"value": "Reyes"
												}
											],
											"id": 3573,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3571,
												"name": "ERC20Permit",
												"nameLocations": [
													"79806:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3552,
												"src": "79806:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "79806:20:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3562,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "79725:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 3587,
												"src": "79717:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "79717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79716:22:0"
									},
									"returnParameters": {
										"id": 3574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "79831:0:0"
									},
									"scope": 3603,
									"src": "79705:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3601,
										"nodeType": "Block",
										"src": "79955:34:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3597,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3589,
															"src": "79971:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3598,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3591,
															"src": "79975:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3596,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "79965:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "79965:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3600,
												"nodeType": "ExpressionStatement",
												"src": "79965:17:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 3602,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3594,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3593,
												"name": "onlyOwner",
												"nameLocations": [
													"79945:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "79945:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "79945:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "79905:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3589,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "79918:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3602,
												"src": "79910:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "79910:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3591,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "79930:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3602,
												"src": "79922:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "79922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79909:28:0"
									},
									"returnParameters": {
										"id": 3595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "79955:0:0"
									},
									"scope": 3603,
									"src": "79896:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3604,
							"src": "79653:338:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								782,
								787,
								961,
								966,
								971,
								2896,
								2898,
								3351,
								3429,
								3436
							],
							"usedEvents": [
								11,
								20,
								793,
								3103
							]
						}
					],
					"src": "163:79829:0"
				},
				"id": 0
			}
		}
	}
}